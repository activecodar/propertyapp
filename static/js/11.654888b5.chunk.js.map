{"version":3,"sources":["../node_modules/date-fns/esm/addMonths/index.js","assets/commonAssets.js","components/table/EnhancedTableHead.js","components/table/tableStyles.js","components/table/tablesSortingFunctions.js","components/table/commonTable.js","components/ExportToExcelBtn.js","../node_modules/@material-ui/icons/Undo.js","../node_modules/@material-ui/icons/Print.js","components/PrintArrayToPdfBtn.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/subMonths/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/addYears/index.js","../node_modules/date-fns/esm/subYears/index.js","components/TabPanel.js","../node_modules/date-fns/esm/isWithinInterval/index.js","components/DataGridTable.js","components/TenantInfoDisplayCard.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","Routes/IndividualTenantChargesStatement.js","Routes/TenantDetailsPage.js"],"names":["addMonths","dirtyDate","dirtyAmount","requiredArgs","arguments","date","toDate","amount","toInteger","isNaN","Date","NaN","dayOfMonth","getDate","endOfDesiredMonth","getTime","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","monthsInYear","eachMonthOfInterval","start","startOfYear","startOfToday","end","endOfYear","TITLES_LIST","GENDERS_LIST","EXPENSES_CATEGORIES","UNIT_TYPES","LEASE_OPTIONS","METER_TYPES","PAYMENT_FREQUENCY_OPTIONS","getContactTitles","getGendersList","getExpensesCategories","getUnitTypes","getPropertyBaths","baths","i","push","concat","getPropertyBeds","beds","getMeterTypes","getLeaseOptions","getPaymentOptions","getTransactionsFilterOptions","id","text","getLastMonthFromToDates","startOfMonth","subMonths","endOfMonth","getLastYearFromToDates","subYears","getYearToDateFromToDates","getCurrentMonthFromToDates","getLastThreeMonthsFromToDates","getMonthsInYear","currencyFormatter","Intl","NumberFormat","undefined","style","currency","EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","headCells","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","position","top","desc","a","b","withRouter","rows","selected","setSelected","deleteUrl","handleDelete","noEditCol","noDeleteCol","noDetailsCol","match","React","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","Box","borderRadius","borderColor","TableContainer","Table","stickyHeader","aria-labelledby","size","aria-label","length","target","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","stopPropagation","selectedIndex","newSelected","handleClick","tableCellIndex","tableCellData","component","scope","Tooltip","title","placement","IconButton","color","Link","to","url","fontSize","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","ExportStatementToExcelBtn","displayText","disabled","reportName","reportTitle","dataToPrint","type","variant","exportPropertyStatementDataToXSL","startIcon","ExportToExcelBtn","exportDataToXSL","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","PrintArrayToPdfBtn","printDataRows","setDate","setHours","month","addYears","TabPanel","children","other","hidden","m","isWithinInterval","dirtyInterval","interval","time","startTime","endTime","RangeError","DataGridTable","emptyRows","Math","min","Paper","headerName","rowIndex","field","colSpan","TenantInfoDisplayCard","commonStyles","avatar","avatarSrc","subheader","cardContent","fullHeightWidthContainer","elevation","src","content","contentIndex","gutterBottom","name","Card","ref","_props$raised","raised","_objectWithoutProperties","_extends","clsx","withStyles","CardContent","_props$component","Component","paddingBottom","CardHeader","action","_props$disableTypogra","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","Typography","display","alignItems","flex","marginRight","alignSelf","marginTop","MEDIA_COMPONENTS","CardMedia","image","isMediaComponent","composedStyle","backgroundImage","media","img","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","TRANSACTIONS_FILTER_OPTIONS","TenantChargesStatementPage","tenantDetails","tenantTransactionCharges","handleItemDelete","tenantChargesItems","setTenantChargesItems","filteredChargeItems","setFilteredChargeItems","chargeType","setChargeTypeFilter","periodFilter","setPeriodFilter","CHARGE_TYPES","Array","from","Set","chargeItem","JSON","stringify","charge_label","charge_type","parse","totalRentCharges","filter","charge","reduce","total","currentValue","parseFloat","charge_amount","totalOtherCharges","totalRentPayments","payment","payed_amount","totalOtherPayments","useEffect","dateRange","startOfPeriod","endOfPeriod","chargesForCurrentMonth","chargeItemDate","charge_date","handleSearchFormSubmit","preventDefault","filteredStatements","Grid","container","justify","item","sm","first_name","last_name","includes","Button","printInvoice","form","onSubmit","md","xs","TextField","fullWidth","select","InputLabelProps","shrink","filterOption","MenuItem","resetSearchForm","format","chargesColumns","paymentsColumns","TenantDetailsPage","transactions","transactionsCharges","tenantUnit","emergencyContact","emergency_contact_name","emergency_contact_relationship","emergency_contact_phone_number","emergency_contact_email","tabValue","setTabValue","currentMonthCharges","currentMonthPayments","paymentItem","paymentItemDate","payment_date","pageTitle","AppBar","Tabs","newValue","Tab","IndividualTenantChargesStatement","contact_avatar_url","id_number","phone_number","address","work_mobile_number","home_phone_number","contact_email","unit_image_url","unit_type","sqft","rent_amount","rent_cycle","pageSize","connect","state","ownProps","currentTenantActiveLease","leases","terminated","find","tenants","isArray","params","contactId","unitInLease","propertyUnits","unit_id","tenant_id","charge1","charge2","chargeDetails","chargePayments","charge_id","payed_status","payment_amount","balance","assign","contacts","dispatch","itemId"],"mappings":"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","file":"static/js/11.654888b5.chunk.js","sourcesContent":["import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import { endOfMonth, endOfYear, startOfToday, eachMonthOfInterval, startOfMonth, startOfYear, subMonths, subYears } from \"date-fns\";\n\nconst monthsInYear = eachMonthOfInterval({\n\tstart: startOfYear(startOfToday()),\n\tend: endOfYear(startOfToday()),\n})\n//general contact titles\nconst TITLES_LIST = [\"Mr\", \"Prof\", \"Hon\", \"Sir\", \"Mrs\", \"Miss\", \"Dr\", \"Madam\", \"Other\"]\nconst GENDERS_LIST = [\"Male\", \"Female\", \"Unspecified\"];\nconst EXPENSES_CATEGORIES = [\n\t'Security Deposit Refund',\n\t'Water Deposit Refund',\n\t'Management Fees',\n\t'Utilities',\n\t'Taxes',\n\t'Mortgage',\n\t'Office',\n\t'Maintenance & Cleaning',\n\t'Advertising',\n\t'Insurance',\n\t'Legal & Other Professional Fees',\n\t'Auto & Travel',\n\t'Supplies',\n\t'Other Refund',\n\t'Repairs',\n\t'Other'\n]\nconst PROPRERTY_TYPES = [\n\t\"Residential\",\n\t\"Condo/Townhouse\",\n\t\"Multi-family\",\n\t\"Single-family\",\n]\nconst UNIT_TYPES = [\n\t\"Bed Sitter\",\n\t\"One Bedroom\",\n\t\"Two Bedroom\",\n\t\"Single Room\",\n\t\"Double Room\",\n\t\"Shop\",\n\t\"Other\",\n];\nconst LEASE_OPTIONS = [\n\t\"Fixed\",\n\t\"Fixed w/rollover\",\n];\nconst METER_TYPES = [\"Electric\", \"Sewer\", \"Water\"];\nconst FREQUENCY_OPTIONS = [\"Per Day\", \"Week\", \"Month\", \"Quarter\", \"Half Year\", \"Year\"];\nconst PAYMENT_FREQUENCY_OPTIONS = [\"Daily\", \"Weekly\", \"Monthly\", \"Quarterly\", \"Half-Yearly\", \"Yearly\"];\n\n//functions to get the above values\nexport function getContactTitles() {\n\treturn TITLES_LIST;\n}\n\nexport function getGendersList() {\n\treturn GENDERS_LIST;\n}\n\nexport function getExpensesCategories() {\n\treturn EXPENSES_CATEGORIES;\n}\n\n//general property types\nexport function getPropertyTypes() {\n\treturn PROPRERTY_TYPES;\n}\n\n//general unit types\nexport function getUnitTypes() {\n\treturn UNIT_TYPES;\n}\n\nexport function getPropertyBaths() {\n\tconst baths = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbaths.push(i);\n\t}\n\treturn baths.concat(\"5+\");\n}\n\nexport function getPropertyBeds() {\n\tconst beds = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbeds.push(i);\n\t}\n\treturn beds;\n}\n\nexport function getFrequencyOptions() {\n\treturn FREQUENCY_OPTIONS;\n}\n\nexport function getMeterTypes() {\n\treturn METER_TYPES;\n}\n\nexport function getLeaseOptions() {\n\treturn LEASE_OPTIONS;\n}\n\nexport function getPaymentOptions() {\n\treturn PAYMENT_FREQUENCY_OPTIONS;\n}\n\nexport function getTransactionsFilterOptions() {\n\treturn [\n\t\t{ id: 'month-to-date', text: 'Month To Date' }, { id: 'last-month', text: 'Last Month' },\n\t\t{ id: '3-months-to-date', text: '3 Months To Date' }, { id: 'year-to-date', text: 'Year To Date' },\n\t\t{ id: 'last-year', text: 'Last Year' },];\n}\n\nexport function getLastMonthFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 1)), endOfMonth(subMonths(startOfToday(), 1))]\n}\n\nexport function getLastYearFromToDates() {\n\treturn [startOfYear(subYears(startOfToday(), 1)), endOfYear(subYears(startOfToday(), 1))]\n}\n\nexport function getYearToDateFromToDates() {\n\treturn [startOfYear(startOfToday()), startOfToday()]\n}\n\nexport function getCurrentMonthFromToDates() {\n\treturn [startOfMonth(startOfToday()), endOfMonth(startOfToday())]\n}\n\nexport function getLastThreeMonthsFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 2)), endOfMonth(startOfToday())]\n}\n\nexport function getMonthsInYear() {\n\treturn monthsInYear\n}\n\n// Create our number formatter.\nexport const currencyFormatter = new Intl.NumberFormat(undefined, {\n\tstyle: 'decimal',\n\tcurrency: 'KES',\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        headCells,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ \"aria-label\": \"select all\" }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding={headCell.disablePadding ? \"none\" : \"default\"}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={order}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default useStyles;\n","\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => desc(a, b, orderBy)\n        : (a, b) => -desc(a, b, orderBy);\n}\n\nexport { desc, stableSort, getSorting };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport TableBody from '@material-ui/core/TableBody';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableCell from '@material-ui/core/TableCell';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport { withRouter } from \"react-router-dom\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport useStyles from \"./tableStyles\";\nimport { stableSort, getSorting } from \"./tablesSortingFunctions\";\n\nfunction CommonTable(props) {\n    const {\n        rows,\n        headCells,\n        selected,\n        setSelected,\n        deleteUrl,\n        handleDelete,\n        noEditCol,\n        noDeleteCol,\n        noDetailsCol,\n    } = props;\n    const { match } = props;\n    const classes = useStyles();\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"Beds\");\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(50);\n\n    const handleRequestSort = (event, property) => {\n        const isDesc = orderBy === property && order === \"desc\";\n        setOrder(isDesc ? \"asc\" : \"desc\");\n        setOrderBy(property);\n    };\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        event.stopPropagation();\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\">\n            <TableContainer>\n                <Table\n                    stickyHeader\n                    className={classes.table}\n                    aria-labelledby=\"tableTitle\"\n                    size={\"medium\"}\n                    aria-label=\"enhanced table\"\n                >\n                    <EnhancedTableHead\n                        classes={classes}\n                        numSelected={selected.length}\n                        order={order}\n                        orderBy={orderBy}\n                        onSelectAllClick={handleSelectAllClick}\n                        headCells={headCells}\n                        onRequestSort={handleRequestSort}\n                        rowCount={rows.length}\n                    />\n                    <TableBody>\n                        {stableSort(rows, getSorting(order, orderBy))\n                            .slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage\n                            )\n                            .map((row, index) => {\n                                const isItemSelected = isSelected(row.id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        // onClick={() => {if(typeof tableRowOnClickHandler === 'function') tableRowOnClickHandler(row.id) }}\n                                        hover\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        key={row.id}\n                                        selected={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                onClick={(event) =>\n                                                    handleClick(event, row.id)\n                                                }\n                                                checked={isItemSelected}\n                                                inputProps={{\n                                                    \"aria-labelledby\": labelId,\n                                                }}\n                                            />\n                                        </TableCell>\n                                        {headCells.map(\n                                            (headCell, tableCellIndex) => {\n                                                const tableCellData =\n                                                    row[headCell.id];\n                                                return (\n                                                    headCell.id === 'edit' ?\n                                                        (\n                                                            noEditCol ? null : (\n                                                                <TableCell\n                                                                    key={`edit${tableCellIndex}`}\n                                                                    component=\"th\"\n                                                                    scope=\"row\"\n                                                                    sortDirection={false}\n                                                                >\n                                                                    <Tooltip\n                                                                        title=\"Edit\"\n                                                                        placement=\"bottom\"\n                                                                    >\n                                                                        <IconButton\n                                                                            color=\"primary\"\n                                                                            size=\"small\"\n                                                                            component={Link}\n                                                                            to={`${match.url}/${row.id}/edit`}\n                                                                        >\n                                                                            <EditIcon fontSize=\"default\" />\n                                                                        </IconButton>\n                                                                    </Tooltip>\n                                                                </TableCell>\n                                                            )\n                                                        )\n                                                        : headCell.id === 'delete' ?\n                                                            (\n                                                                noDeleteCol ? null : (\n                                                                    <TableCell\n                                                                        key={`delete${tableCellIndex}`}\n                                                                        component=\"th\"\n                                                                        scope=\"row\"\n                                                                        sortDirection={false}\n                                                                    >\n                                                                        <Tooltip\n                                                                            title=\"Delete\"\n                                                                            placement=\"bottom\"\n                                                                        >\n                                                                            <IconButton\n                                                                                onClick={(event) => {\n                                                                                    handleDelete(\n                                                                                        row.id,\n                                                                                        deleteUrl\n                                                                                    );\n                                                                                }}\n                                                                                color=\"primary\"\n                                                                                size=\"small\"\n                                                                            >\n                                                                                <DeleteIcon fontSize=\"default\" />\n                                                                            </IconButton>\n                                                                        </Tooltip>\n                                                                    </TableCell>\n                                                                )\n                                                            )\n                                                            : headCell.id === 'details' ?\n                                                                (\n                                                                    !noDetailsCol ? null : (\n                                                                        <TableCell\n                                                                            key={`details${tableCellIndex}`}\n                                                                            component=\"th\"\n                                                                            scope=\"row\"\n                                                                            sortDirection={false}\n                                                                        >\n                                                                            <Tooltip\n                                                                                title=\"Details\"\n                                                                                placement=\"bottom\"\n                                                                            >\n                                                                                <IconButton\n                                                                                    color=\"primary\"\n                                                                                    size=\"small\"\n                                                                                    component={Link}\n                                                                                    to={`${match.url}/${row.id}/details`}\n                                                                                >\n                                                                                    <DetailsIcon fontSize=\"default\" />\n                                                                                </IconButton>\n                                                                            </Tooltip>\n                                                                        </TableCell>\n                                                                    )\n                                                                )\n                                                                :\n                                                                <TableCell\n                                                                    key={tableCellIndex}\n                                                                    component=\"th\"\n                                                                    id={labelId}\n                                                                    scope=\"row\"\n                                                                    padding=\"none\"\n                                                                >\n                                                                    {typeof tableCellData ===\n                                                                        \"boolean\"\n                                                                        ? tableCellData\n                                                                            ? \"Yes\"\n                                                                            : \"No\"\n                                                                        : tableCellData}\n                                                                </TableCell>\n                                                );\n                                            }\n                                        )}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[50, 100, 200, 300]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </Box>\n    );\n}\n\nexport default withRouter(CommonTable);\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport exportDataToXSL, { exportPropertyStatementDataToXSL } from \"../assets/PrintingHelper\";\nimport PropTypes from 'prop-types';\n\nfunction ExportToExcelBtn(props) {\n\tconst { disabled, reportName, reportTitle, headCells, dataToPrint } = props\n\treturn (\n\t\t<Button\n\t\t\ttype=\"button\"\n\t\t\taria-label=\"Export to Excel\"\n\t\t\tvariant=\"contained\"\n\t\t\tsize=\"medium\"\n\t\t\tcolor=\"primary\"\n\t\t\tdisabled={disabled}\n\t\t\tonClick={() => exportDataToXSL(reportName, reportTitle, headCells, dataToPrint, reportName)}\n\t\t\tstartIcon={<ImportExportIcon />}\n\t\t>\n\t\t\tExcel\n\t\t</Button >\n\t);\n}\n\nExportToExcelBtn.propTypes = {\n\treportName: PropTypes.string.isRequired,\n\treportTitle: PropTypes.string.isRequired,\n\theadCells: PropTypes.array.isRequired,\n\tdataToPrint: PropTypes.array.isRequired,\n}\n\nexport default ExportToExcelBtn;\n\nexport function ExportStatementToExcelBtn(props) {\n\tconst { displayText, disabled, reportName, reportTitle, headCells, dataToPrint } = props\n\treturn (\n\t\t<Button\n\t\t\ttype=\"button\"\n\t\t\taria-label=\"Export to Excel\"\n\t\t\tvariant=\"contained\"\n\t\t\tsize=\"medium\"\n\t\t\tcolor=\"primary\"\n\t\t\tdisabled={disabled}\n\t\t\tonClick={() => exportPropertyStatementDataToXSL(reportName, reportTitle, headCells, dataToPrint, reportName)}\n\t\t\tstartIcon={<ImportExportIcon />}\n\t\t>\n\t\t\t{ displayText ? displayText : \"Excel\"}\n\t\t</Button >\n\t);\n}\n\nExportStatementToExcelBtn.propTypes = {\n\treportName: PropTypes.string.isRequired,\n\treportTitle: PropTypes.string.isRequired,\n\theadCells: PropTypes.array.isRequired,\n\tdataToPrint: PropTypes.array.isRequired,\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\"\n}), 'Undo');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\"\n}), 'Print');\n\nexports.default = _default;","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport { printDataRows } from \"../assets/PrintingHelper\";\nimport PropTypes from 'prop-types';\n\nfunction PrintArrayToPdfBtn (props) {\n    const { disabled, reportName, reportTitle, headCells, dataToPrint } = props\n    return (\n        <Button\n            type=\"button\"\n            aria-label=\"Print to Pdf\"\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            disabled={disabled}\n            onClick={() => printDataRows(reportName, reportTitle, headCells, dataToPrint)}\n            startIcon={<PrintIcon />}\n        >\n            Pdf\n        </Button>\n    );\n}\n\nPrintArrayToPdfBtn.propTypes = {\n    reportName: PropTypes.string.isRequired,\n    reportTitle: PropTypes.string.isRequired,\n    headCells: PropTypes.array.isRequired,\n    dataToPrint: PropTypes.array.isRequired,\n}\n\nexport default PrintArrayToPdfBtn;\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addYears from '../addYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nexport default function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box m={2}>{children}</Box>}\n        </div>\n    );\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isWithinRange` to `isWithinInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   isWithinRange(\n *     new Date(2014, 0, 3),\n *     new Date(2014, 0, 1), new Date(2014, 0, 7)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   isWithinInterval(\n *     new Date(2014, 0, 3),\n *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\n\nexport default function isWithinInterval(dirtyDate, dirtyInterval) {\n  requiredArgs(2, arguments);\n  var interval = dirtyInterval || {};\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  return time >= startTime && time <= endTime;\n}","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n\nexport default function DataGridTable({ headCells, rows }) {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div>\n            <TableContainer component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            {headCells.map((headCell, index) => (\n                                <TableCell key={index}>\n                                    {headCell.headerName}\n                                </TableCell>\n\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row, rowIndex) => (\n                                <TableRow key={rowIndex}>\n                                    {\n                                        headCells.map((headCell, tableCellIndex) =>\n                                            <TableCell component=\"th\" scope=\"row\" key={tableCellIndex}>\n                                                {row[headCell.field]}\n                                            </TableCell>\n                                        )\n                                    }\n                                </TableRow>\n                            ))}\n                        {emptyRows > 0 && (\n                            <TableRow style={{ height: (53) * emptyRows }}>\n                                <TableCell colSpan={6} />\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </div>\n    );\n}","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { commonStyles } from \"../components/commonStyles\";\n\nlet TenantInfoDisplayCard = (props) => {\n    const classes = commonStyles();\n    const {title, avatar, avatarSrc, subheader, cardContent} = props\n    return (\n        <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n            <CardHeader\n                avatar={\n                    <Avatar aria-label=\"contact avatar\" src={avatarSrc ? avatarSrc : ''} className={classes.avatar}>\n                        {avatar}\n                    </Avatar>\n                }\n                title={title}\n                subheader={subheader}\n            />\n            <CardContent>\n               {\n                   cardContent.map((content, contentIndex) => \n                   <Typography key={contentIndex} gutterBottom variant=\"body2\">\n                    {content.name} : {content.value}\n                   </Typography>)\n               }\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TenantInfoDisplayCard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import React, { useEffect, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { getCurrentMonthFromToDates, getLastMonthFromToDates, getLastThreeMonthsFromToDates, getLastYearFromToDates, getTransactionsFilterOptions, currencyFormatter, getYearToDateFromToDates } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nimport { printInvoice } from \"../assets/PrintingHelper\";\n\nconst TRANSACTIONS_FILTER_OPTIONS = getTransactionsFilterOptions()\n\nconst headCells = [\n    { id: \"charge_label\", numeric: false, disablePadding: true, label: \"Charge Type\" },\n    { id: \"charge_date\", numeric: false, disablePadding: true, label: \"Charge Date\", },\n    { id: \"due_date\", numeric: false, disablePadding: true, label: \"Due Date\", },\n    { id: \"charge_amount\", numeric: false, disablePadding: true, label: \"Charge Amount\", },\n    { id: \"payed_status\", numeric: false, disablePadding: true, label: \"Payments Made\" },\n    { id: \"payed_amount\", numeric: false, disablePadding: true, label: \"Total Amounts Paid\" },\n    { id: \"balance\", numeric: false, disablePadding: true, label: \"Balance\" },\n];\n\nlet TenantChargesStatementPage = ({\n    tenantDetails,\n    tenantTransactionCharges,\n    handleItemDelete,\n    classes,\n}) => {\n    let [tenantChargesItems, setTenantChargesItems] = useState([]);\n    let [filteredChargeItems, setFilteredChargeItems] = useState([]);\n    let [chargeType, setChargeTypeFilter] = useState(\"\");\n    let [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n    const [selected, setSelected] = useState([]);\n    const CHARGE_TYPES = Array.from(new Set(tenantChargesItems\n        .map((chargeItem) => (JSON.stringify({ label: chargeItem.charge_label, value: chargeItem.charge_type })))))\n        .map(chargeType => JSON.parse(chargeType))\n\n    const totalRentCharges = filteredChargeItems.filter(charge => charge.charge_type === 'rent')\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.charge_amount) || 0\n        }, 0)\n\n    const totalOtherCharges = filteredChargeItems.filter(charge => charge.charge_type !== 'rent')\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.charge_amount) || 0\n        }, 0)\n\n    const totalRentPayments = filteredChargeItems.filter(payment => payment.charge_type === 'rent')\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.payed_amount) || 0\n        }, 0)\n\n    const totalOtherPayments = filteredChargeItems.filter(payment => payment.charge_type !== 'rent')\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.payed_amount) || 0\n        }, 0)\n\n    useEffect(() => {\n        const dateRange = getCurrentMonthFromToDates()\n        const startOfPeriod = dateRange[0]\n        const endOfPeriod = dateRange[1]\n        const chargesForCurrentMonth = tenantTransactionCharges.filter((chargeItem) => {\n            const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date())\n            return isWithinInterval(chargeItemDate, { start: startOfPeriod, end: endOfPeriod })\n        })\n        setTenantChargesItems(chargesForCurrentMonth);\n        setFilteredChargeItems(chargesForCurrentMonth);\n    }, [tenantTransactionCharges]);\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the tenantTransactionCharges according to the search criteria here\n        let filteredStatements = tenantTransactionCharges\n        let dateRange = []\n        let startOfPeriod;\n        let endOfPeriod;\n        switch (periodFilter) {\n            case 'last-month':\n                dateRange = getLastMonthFromToDates()\n                startOfPeriod = dateRange[0]\n                endOfPeriod = dateRange[1]\n                break;\n            case 'year-to-date':\n                dateRange = getYearToDateFromToDates()\n                startOfPeriod = dateRange[0]\n                endOfPeriod = dateRange[1]\n                break;\n            case 'last-year':\n                dateRange = getLastYearFromToDates()\n                startOfPeriod = dateRange[0]\n                endOfPeriod = dateRange[1]\n                break;\n            case 'month-to-date':\n                dateRange = getCurrentMonthFromToDates()\n                startOfPeriod = dateRange[0]\n                endOfPeriod = dateRange[1]\n                break;\n            case '3-months-to-date':\n                dateRange = getLastThreeMonthsFromToDates()\n                startOfPeriod = dateRange[0]\n                endOfPeriod = dateRange[1]\n                break;\n            default:\n                dateRange = getLastMonthFromToDates()\n                startOfPeriod = dateRange[0]\n                endOfPeriod = dateRange[1]\n        }\n        filteredStatements = filteredStatements.filter((chargeItem) => {\n            const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date())\n            return isWithinInterval(chargeItemDate, { start: startOfPeriod, end: endOfPeriod })\n        })\n        filteredStatements = filteredStatements.filter(({ charge_type }) =>\n            !chargeType ? true : charge_type === chargeType\n        )\n        setFilteredChargeItems(filteredStatements);\n    };\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setFilteredChargeItems(tenantChargesItems);\n        setChargeTypeFilter(\"\");\n        setPeriodFilter(\"month-to-date\");\n    };\n\n    return (\n        <Grid container spacing={2} justify=\"center\" direction=\"column\">\n            <Grid item sm={12}>\n                <Typography variant=\"h6\">Tenant Charges Statement - {tenantDetails.first_name} {tenantDetails.last_name} </Typography>\n            </Grid>\n            <Grid item container spacing={2} alignItems=\"center\" direction=\"row\">\n                <Grid item>\n                    <ExportToExcelBtn\n                        disabled={!selected.length}\n                        reportName={`${tenantDetails.first_name} ${tenantDetails.last_name} Charges Record`}\n                        reportTitle={'Tenant Charges Data'}\n                        headCells={headCells}\n                        dataToPrint={tenantChargesItems.filter(({ id }) => selected.includes(id))}\n                    />\n                </Grid>\n                <Grid item>\n                    <PrintArrayToPdf\n                        disabled={!selected.length}\n                        reportName={'Tenant Charges Data'}\n                        reportTitle={`${tenantDetails.first_name} ${tenantDetails.last_name} Charges Record`}\n                        headCells={headCells}\n                        dataToPrint={tenantChargesItems.filter(({ id }) => selected.includes(id))}\n                    />\n                </Grid>\n                <Grid item>\n                    <Button\n                        aria-label=\"Print Invoice\"\n                        variant=\"contained\"\n                        size=\"medium\"\n                        color=\"primary\"\n                        disabled={!selected.length}\n                        onClick={() => {\n                            printInvoice(\n                                tenantDetails,\n                                tenantChargesItems.filter(({ id }) => selected.includes(id))\n                            )\n                        }}\n                        startIcon={<PrintIcon />}>\n                        Print Invoice\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid item container>\n                <Grid item sm={12}>\n                    <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\">\n                        <form\n                            className={classes.form}\n                            id=\"contactSearchForm\"\n                            onSubmit={handleSearchFormSubmit}\n                        >\n                            <Grid\n                                container\n                                justify=\"center\"\n                                direction=\"column\"\n                            >\n                                <Grid item container spacing={2} justify=\"center\" direction=\"row\">\n                                    <Grid item md={6} xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            select\n                                            id=\"period_filter\"\n                                            name=\"period_filter\"\n                                            label=\"Period\"\n                                            value={periodFilter}\n                                            onChange={(event) => {\n                                                setPeriodFilter(\n                                                    event.target.value\n                                                );\n                                            }}\n                                            InputLabelProps={{ shrink: true }}\n                                        >\n                                            {TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => (\n                                                <MenuItem\n                                                    key={index}\n                                                    value={filterOption.id}\n                                                >\n                                                    {filterOption.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item md={6} xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            select\n                                            variant=\"outlined\"\n                                            name=\"chargeType\"\n                                            label=\"Charge Type\"\n                                            id=\"chargeType\"\n                                            onChange={(event) => {\n                                                setChargeTypeFilter(\n                                                    event.target.value\n                                                );\n                                            }}\n                                            value={chargeType}\n                                        >\n                                            {CHARGE_TYPES.map(\n                                                (charge_type, index) => (\n                                                    <MenuItem\n                                                        key={index}\n                                                        value={charge_type.value}\n                                                    >\n                                                        {charge_type.label}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </TextField>\n                                    </Grid>\n                                </Grid>\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    item\n                                    justify=\"flex-end\"\n                                    alignItems=\"center\"\n                                    direction=\"row\"\n                                    key={1}\n                                >\n                                    <Grid item>\n                                        <Button\n                                            onClick={(event) => handleSearchFormSubmit(event)}\n                                            type=\"submit\"\n                                            form=\"contactSearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<SearchIcon />}\n                                        >\n                                            SEARCH\n                                    </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            onClick={(event) => resetSearchForm(event)}\n                                            type=\"reset\"\n                                            form=\"contactSearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<UndoIcon />}\n                                        >\n                                            RESET\n                                    </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Box>\n                </Grid>\n            </Grid>\n            <Grid item container>\n                <Grid item sm={12}>\n                    <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\" className={classes.form}>\n                        <Grid container direction=\"row\" spacing={1}>\n                            <Grid item container md={4} sm={12}>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Total Rent Charges: {currencyFormatter.format(totalRentCharges)}\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Total Other Charges: {currencyFormatter.format(totalOtherCharges)}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid item container md={4} sm={12}>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Total Rent Payments: {currencyFormatter.format(totalRentPayments)}\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Total Other Payments: {currencyFormatter.format(totalOtherPayments)}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid item container md={4} sm={12}>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Outstanding Rent Balances: {currencyFormatter.format((totalRentCharges - totalRentPayments))}\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Other Charges Outstanding Balances: {currencyFormatter.format((totalOtherPayments - totalOtherPayments))}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Grid>\n            </Grid>\n            <Grid item container xs={12}>\n                <Grid item xs={12}>\n                    <CommonTable\n                        selected={selected}\n                        setSelected={setSelected}\n                        rows={filteredChargeItems}\n                        headCells={headCells}\n                        noEditCol\n                        noDeleteCol\n                        deleteUrl={'transactions-charges'}\n                        handleDelete={handleItemDelete}\n                    />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default TenantChargesStatementPage;\n","import React from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport { handleDelete } from \"../actions/actions\";\nimport IndividualTenantChargesStatement from \"./IndividualTenantChargesStatement\";\nimport TabPanel from \"../components/TabPanel\";\nimport DataGridTable from '../components/DataGridTable'\nimport TenantInfoDisplayCard from \"../components/TenantInfoDisplayCard\";\nimport { commonStyles } from '../components/commonStyles'\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { startOfToday, startOfMonth, endOfMonth, parse, isWithinInterval } from \"date-fns\";\n\nconst chargesColumns = [\n    { field: 'charge_label', headerName: 'Charge Type', width: 200 },\n    { field: 'charge_date', headerName: 'Date Charged', width: 200 },\n    { field: 'charge_amount', headerName: 'Amount', type: \"number\", width: 90 },\n]\n\nconst paymentsColumns = [\n    { field: 'payment_label', headerName: 'Payment For', width: 200 },\n    { field: 'payment_date', headerName: 'Date Made', width: 200 },\n    { field: 'payment_amount', headerName: 'Amount', type: \"number\", width: 90 },\n]\n\nlet TenantDetailsPage = ({\n    transactions,\n    transactionsCharges,\n    tenantUnit,\n    tenantDetails,\n    handleItemDelete,\n}) => {\n    const classes = commonStyles()\n    const emergencyContact = {\n        emergency_contact_name: tenantDetails.emergency_contact_name,\n        emergency_contact_relationship: tenantDetails.emergency_contact_relationship,\n        emergency_contact_phone_number: tenantDetails.emergency_contact_phone_number,\n        emergency_contact_email: tenantDetails.emergency_contact_email,\n    }\n    const [tabValue, setTabValue] = React.useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n    const currentMonthCharges = transactionsCharges.filter((chargeItem) => {\n        const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date())\n        return isWithinInterval(chargeItemDate, { start: startOfMonth(startOfToday()), end: endOfMonth(startOfToday()) })\n    })\n    const currentMonthPayments = transactions.filter((paymentItem) => {\n        const paymentItemDate = parse(paymentItem.payment_date, 'yyyy-MM-dd', new Date())\n        return isWithinInterval(paymentItemDate, { start: startOfMonth(startOfToday()), end: endOfMonth(startOfToday()) })\n    })\n\n    return (\n        <Layout pageTitle=\"Tenant Summary\">\n            <AppBar position=\"static\">\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Tenant Details\" />\n                    <Tab label=\"Rent &amp; Other Charges\" />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={tabValue} index={1}>\n                <IndividualTenantChargesStatement tenantTransactionCharges={transactionsCharges}\n                    tenantDetails={tenantDetails} handleItemDelete={handleItemDelete} classes={classes} />\n            </TabPanel>\n            <TabPanel value={tabValue} index={0}>\n                <Grid container justify=\"center\" direction=\"column\" spacing={2}>\n                    <Grid item key={0}>\n                        <Typography variant=\"h6\">Tenant Details</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        item\n                        alignItems=\"stretch\"\n                        spacing={2}\n                    >\n                        <Grid item xs={12} md>\n                            <TenantInfoDisplayCard title=\"Tenant Details\"\n                                subheader=\"Personal Info\"\n                                avatarSrc={tenantDetails.contact_avatar_url}\n                                cardContent={[\n                                    { name: 'Name', value: `${tenantDetails.title} ${tenantDetails.first_name} ${tenantDetails.last_name}` },\n                                    { name: 'ID Number', value: tenantDetails.id_number || '-' },\n                                    { name: 'Personal Phone Number', value: tenantDetails.phone_number || tenantUnit.address || '-' },\n                                    { name: 'Work Phone Number', value: tenantDetails.work_mobile_number || '-' },\n                                    { name: 'Home Phone Number', value: tenantDetails.home_phone_number || '-' },\n                                    { name: 'Email', value: tenantDetails.contact_email || '-' },\n                                    { name: 'Emergency Contact Name', value: emergencyContact.emergency_contact_name },\n                                    { name: 'Emergency Contact Relationship', value: emergencyContact.emergency_contact_relationship },\n                                    { name: 'Emergency Contact Phone Number', value: emergencyContact.emergency_contact_phone_number || '-' },\n                                    { name: 'Emergency Contact Email', value: emergencyContact.emergency_contact_email || '-' },\n                                ]}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md>\n                            <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                <CardMedia\n                                    height=\"200\"\n                                    component=\"img\"\n                                    image={tenantUnit.unit_image_url}\n                                    title=\"Unit Image\"\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Unit: {tenantUnit.ref}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Unit Type: {tenantUnit.unit_type}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Beds: {tenantUnit.beds}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Baths: {tenantUnit.baths}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Unit Sqft: {tenantUnit.sqft}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Rent Amount: {tenantUnit.rent_amount}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Rent Cycle: {tenantUnit.rent_cycle}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"row\" item alignItems=\"stretch\" spacing={2}>\n                        <Grid item xs={12} md>\n                            <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                <CardContent>\n                                    <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                        Recent Charges History\n                                    </Typography>\n                                    <div style={{ height: 400, width: '100%' }}>\n                                        <DataGridTable rows={currentMonthCharges} headCells={chargesColumns} pageSize={5} />\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={12} md>\n                            <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                <CardContent>\n                                    <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                        Recent Payments History\n                                    </Typography>\n                                    <div style={{ height: 400, width: '100%' }}>\n                                        <DataGridTable rows={currentMonthPayments} headCells={paymentsColumns} pageSize={5} />\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </TabPanel>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const currentTenantActiveLease = state.leases.filter(({ terminated }) => terminated !== true)\n        .find(({ tenants }) => Array.isArray(tenants) ? tenants.includes(ownProps.match.params.contactId) : false) || {}\n    const unitInLease = state.propertyUnits.find(({ id }) => id === currentTenantActiveLease.unit_id) || {}\n    return {\n        transactionsCharges: state.transactionsCharges\n            .filter((charge) => charge.tenant_id === ownProps.match.params.contactId).sort((charge1, charge2) => charge2.charge_date > charge1.charge_date)\n            .map((charge) => {\n                const chargeDetails = {}\n                //get payments with this charge id\n                const chargePayments = state.transactions.filter((payment) => payment.charge_id === charge.id)\n                chargeDetails.payed_status = chargePayments.length ? true : false;\n                const payed_amount = chargePayments.reduce((total, currentValue) => {\n                    return total + parseFloat(currentValue.payment_amount) || 0\n                }, 0)\n                chargeDetails.payed_amount = payed_amount\n                chargeDetails.balance = parseFloat(charge.charge_amount) - payed_amount\n                return Object.assign({}, charge, chargeDetails);\n            })\n            .sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) -\n                parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n        tenantUnit: Object.assign({}, unitInLease, currentTenantActiveLease),\n        transactions: state.transactions.filter((payment) => payment.tenant_id === ownProps.match.params.contactId),\n        tenantDetails: state.contacts.find(({ id }) => id === ownProps.match.params.contactId) || {}\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nTenantDetailsPage = connect(mapStateToProps, mapDispatchToProps)(TenantDetailsPage);\n\nexport default withRouter(TenantDetailsPage);\n"],"sourceRoot":""}