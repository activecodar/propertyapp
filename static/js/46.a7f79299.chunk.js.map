{"version":3,"sources":["components/CustomCircularProgress.js","../node_modules/@material-ui/icons/Save.js","../node_modules/@material-ui/icons/Cancel.js","components/notices/NoticeInputForm.js","Routes/NoticePage.js"],"names":["useStyles","makeStyles","theme","root","display","alignItems","height","width","wrapper","margin","spacing","position","buttonProgress","color","green","top","left","marginTop","marginLeft","CustomCircularProgress","open","dialogTitle","classes","maxWidth","aria-labelledby","container","direction","item","lg","className","size","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","defaultDate","format","startOfToday","VacatingNoticeSchema","Yup","shape","lease_details","typeError","required","notification_date","vacating_date","NoticeInputForm","props","activeLeases","submitForm","history","commonStyles","noticeToEdit","noticeValues","id","lease_id","find","initialValues","enableReinitialize","validationSchema","onSubmit","values","a","resetForm","setStatus","vacatingNotice","unit_id","property_id","tenant_id","tenants","goBack","sent","msg","status","handleSubmit","touched","errors","handleChange","setFieldValue","handleBlur","isSubmitting","form","method","Grid","justify","CustomSnackbar","variant","message","Typography","component","sm","Autocomplete","onChange","event","newValue","style","options","autoHighlight","getOptionLabel","option","tenant_name","unit_ref","renderOption","Fragment","renderInput","params","TextField","label","error","helperText","inputProps","fullWidth","disabled","InputLabelProps","shrink","name","lease_type","start_date","type","onBlur","buttonBox","Button","startIcon","onClick","disableElevation","NoticePage","activeMappedLeases","leaseToEnd","queryString","parse","location","search","lease","pageTitle","key","PageHeading","text","connect","state","ownProps","notices","match","noticeId","leases","filter","terminated","map","tenantDetails","contacts","Array","isArray","includes","assign","first_name","last_name","unitDetails","propertyUnits","ref","dispatch","itemUrl","handleItemFormSubmit","withRouter"],"mappings":"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","file":"static/js/46.a7f79299.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 80,\n        width: 120,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n        height: 50,\n        width: 50,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CustomCircularProgress({ open, dialogTitle }) {\n    const classes = useStyles();\n    \n    return (\n        <Dialog maxWidth={\"md\"} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <Grid container alignItems=\"center\" direction=\"column\">\n                    <Grid item lg>\n                        <Typography>{dialogTitle || \"Saving...\"}</Typography>\n                    </Grid>\n                    <Grid item lg>\n                        <div className={classes.root}>\n                            <div className={classes.wrapper}>\n                                {open && <CircularProgress size={50} className={classes.buttonProgress} />}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n        </Dialog>\n\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomSnackbar from '../CustomSnackbar'\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport * as Yup from \"yup\";\nimport { format, startOfToday } from \"date-fns\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\n\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd')\n\nconst VacatingNoticeSchema = Yup.object().shape({\n  lease_details: Yup.object().typeError(\"Rental agreement is required\")\n    .required(\"Rental agreement is required\"),\n  notification_date: Yup.date().required(\"Vacating Date Required\"),\n  vacating_date: Yup.date().required(\"Move Out Date is Required\"),\n});\n\nconst NoticeInputForm = (props) => {\n  const { activeLeases, submitForm, history } = props;\n  const classes = commonStyles();\n  const noticeToEdit = props.noticeToEdit || {}\n\n  let noticeValues = {\n    id: noticeToEdit.id,\n    notification_date: noticeToEdit.notification_date || defaultDate,\n    vacating_date: noticeToEdit.vacating_date || defaultDate,\n    lease_id: noticeToEdit.lease_id || '',\n    lease_details: activeLeases.find(({ id }) => id === noticeToEdit.lease_id) || null,\n  };\n\n  return (\n    <Formik\n      initialValues={noticeValues}\n      enableReinitialize\n      validationSchema={VacatingNoticeSchema}\n      onSubmit={async (values, { resetForm, setStatus }) => {\n        try {\n          const vacatingNotice = {\n            id: values.id,\n            lease_id: values.lease_details.id,\n            vacating_date: values.vacating_date,\n            notification_date: values.notification_date,\n            unit_id: values.lease_details.unit_id,\n            property_id: values.lease_details.property_id,\n            tenant_id: values.lease_details.tenants[0]\n          };\n          await submitForm(vacatingNotice, \"notices\")\n          resetForm({});\n          if (values.id) {\n            history.goBack()\n          }\n          setStatus({ sent: true, msg: \"Notice saved successfully!\" })\n        } catch (error) {\n          setStatus({ sent: false, msg: `Error! ${error}.` })\n        }\n      }}\n    >\n      {({\n        values,\n        status,\n        handleSubmit,\n        touched,\n        errors,\n        handleChange,\n        setFieldValue,\n        handleBlur,\n        isSubmitting,\n      }) => (\n        <form\n          className={classes.form}\n          method=\"post\"\n          id=\"noticeInputForm\"\n          onSubmit={handleSubmit}\n        >\n          <Grid\n            container\n            spacing={2}\n            justify=\"center\"\n            alignItems=\"stretch\"\n            direction=\"column\"\n          >\n            {\n              status && status.msg && (\n                <CustomSnackbar\n                  variant={status.sent ? \"success\" : \"error\"}\n                  message={status.msg}\n                />\n              )\n            }\n            {\n              isSubmitting && (<CustomCircularProgress open={true} />)\n            }\n            <Grid item>\n              <Typography color=\"textSecondary\" component=\"p\">\n                Recording every tenant's intention to move out will automatically end the agreement\n                on the last move-out date.\n                </Typography>\n            </Grid>\n            <Grid item container spacing={2} direction=\"row\">\n              <Grid item sm>\n                <Autocomplete\n                  id=\"lease_details\"\n                  value={values.lease_details}\n                  onChange={(event, newValue) => {\n                    setFieldValue(\"lease_details\", newValue);\n                  }}\n                  style={{ width: \"100%\" }}\n                  options={activeLeases}\n                  autoHighlight\n                  getOptionLabel={(option) => option ? `${option.tenant_name} ${option.unit_ref}` : ''}\n                  renderOption={(option) => (\n                    <React.Fragment>\n                      {option.tenant_name} {option.unit_ref}\n                    </React.Fragment>\n                  )}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Tenants\"\n                      variant=\"outlined\"\n                      error={errors.lease_details && touched.lease_details}\n                      helperText={touched.lease_details && errors.lease_details}\n                      inputProps={{\n                        ...params.inputProps,\n                      }}\n                    />\n                  )}\n                />\n              </Grid>\n              <Grid item sm>\n                <TextField\n                  fullWidth\n                  disabled\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  id=\"unit\"\n                  name=\"unit\"\n                  label=\"Unit\"\n                  value={values.lease_details ? values.lease_details.unit_ref : ''}\n                />\n              </Grid>\n            </Grid>\n            <Grid item container spacing={2} direction=\"row\">\n              <Grid item sm>\n                <TextField\n                  disabled\n                  fullWidth\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  id=\"lease_type\"\n                  name=\"type\"\n                  label=\"Agreement Type\"\n                  value={values.lease_details ? values.lease_details.lease_type : \"\"}\n                />\n              </Grid>\n              <Grid item sm>\n                <TextField\n                  disabled\n                  fullWidth\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  id=\"lease_start\"\n                  name=\"lease_start\"\n                  label=\"Start - End\"\n                  value={values.lease_details ? `${values.lease_details.start_date} - ${values.vacating_date}` : ''}\n                />\n              </Grid>\n            </Grid>\n            <Grid item container spacing={2} direction=\"row\">\n              <Grid item sm>\n                <TextField\n                  fullWidth\n                  type=\"date\"\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  id=\"notification_date\"\n                  name=\"notification_date\"\n                  label=\"Notification Date\"\n                  value={values.notification_date}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={\"notification_date\" in errors}\n                  helperText={errors.notification_date}\n                />\n              </Grid>\n              <Grid item sm>\n                <TextField\n                  fullWidth\n                  type=\"date\"\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  id=\"vacating_date\"\n                  name=\"vacating_date\"\n                  label=\"Move Out Date\"\n                  value={values.vacating_date}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={\"vacating_date\" in errors}\n                  helperText={errors.vacating_date}\n                />\n              </Grid>\n            </Grid>\n            <Grid item container direction=\"row\" className={classes.buttonBox}>\n              <Grid item>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  size=\"medium\"\n                  startIcon={<CancelIcon />}\n                  onClick={() => history.goBack()}\n                  disableElevation\n                >\n                  Cancel\n                  </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  size=\"medium\"\n                  startIcon={<SaveIcon />}\n                  form=\"noticeInputForm\"\n                  disabled={isSubmitting}\n                >\n                  Move Out\n                  </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </form>\n      )\n      }\n    </Formik >\n  );\n};\n\nexport default NoticeInputForm;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport NoticeInputForm from \"../components/notices/NoticeInputForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { handleItemFormSubmit } from '../actions/actions'\nimport queryString from 'query-string';\n\nlet NoticePage = (props) => {\n    const { noticeToEdit, history, activeMappedLeases, submitForm } = props;\n    const params = queryString.parse(props.location.search)\n    var leaseToEnd = params.lease;\n    if (leaseToEnd) {\n        noticeToEdit.lease_id = leaseToEnd\n    }\n    let pageTitle = noticeToEdit.id ? \"Edit Intent To Move Out\" : \"Record Intent To Move Out\";\n\n    return (\n        <Layout pageTitle=\"Notice Details\">\n            <Grid container justify=\"center\" direction=\"column\">\n                <Grid item key={1}>\n                    <PageHeading  text={pageTitle} />\n                </Grid>\n                <Grid item key={2}>\n                    <NoticeInputForm\n                        history={history}\n                        submitForm={submitForm}\n                        activeLeases={activeMappedLeases}\n                        noticeToEdit={noticeToEdit}\n                    />\n                </Grid>\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        noticeToEdit: state.notices.find(({ id }) => id === ownProps.match.params.noticeId) || {},\n        activeMappedLeases: state.leases.filter(({ terminated }) => terminated !== true)\n        .map((lease) => {\n            const tenantDetails = state.contacts.find(({ id }) => Array.isArray(lease.tenants) ? lease.tenants.includes(id) : false) || {}\n            return Object.assign({}, lease, {tenant_name: `${tenantDetails.first_name} ${tenantDetails.last_name}`})\n        })\n        .map((lease) => {\n            const unitDetails = state.propertyUnits.find(({ id }) => lease.unit_id === id) || {}\n            return Object.assign({}, lease, {unit_ref: `${unitDetails.ref}`})\n        }),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        submitForm: (item, itemUrl) => dispatch(handleItemFormSubmit(item, itemUrl)),\n    };\n};\n\nNoticePage = connect(mapStateToProps, mapDispatchToProps)(NoticePage);\n\nexport default withRouter(NoticePage);\n"],"sourceRoot":""}