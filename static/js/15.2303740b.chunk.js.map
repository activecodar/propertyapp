{"version":3,"sources":["../node_modules/date-fns/esm/addMonths/index.js","assets/commonAssets.js","components/table/EnhancedTableHead.js","components/table/tableStyles.js","components/table/tablesSortingFunctions.js","components/table/commonTable.js","components/ExportToExcelBtn.js","../node_modules/@material-ui/icons/Undo.js","../node_modules/@material-ui/icons/Print.js","components/PrintArrayToPdfBtn.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/subMonths/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/addYears/index.js","../node_modules/date-fns/esm/subYears/index.js","components/TabPanel.js","../node_modules/date-fns/esm/isWithinInterval/index.js","Routes/TenantsChargesStatement.js","Routes/TenantsStatements.js"],"names":["addMonths","dirtyDate","dirtyAmount","requiredArgs","arguments","date","toDate","amount","toInteger","isNaN","Date","NaN","dayOfMonth","getDate","endOfDesiredMonth","getTime","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","monthsInYear","eachMonthOfInterval","start","startOfYear","startOfToday","end","endOfYear","TITLES_LIST","GENDERS_LIST","EXPENSES_CATEGORIES","UNIT_TYPES","LEASE_OPTIONS","METER_TYPES","PAYMENT_FREQUENCY_OPTIONS","getContactTitles","getGendersList","getExpensesCategories","getUnitTypes","getPropertyBaths","baths","i","push","concat","getPropertyBeds","beds","getMeterTypes","getLeaseOptions","getPaymentOptions","getTransactionsFilterOptions","id","text","getLastMonthFromToDates","startOfMonth","subMonths","endOfMonth","getLastYearFromToDates","subYears","getYearToDateFromToDates","getCurrentMonthFromToDates","getLastThreeMonthsFromToDates","getMonthsInYear","currencyFormatter","Intl","NumberFormat","undefined","style","currency","EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","headCells","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","position","top","desc","a","b","withRouter","rows","selected","setSelected","deleteUrl","handleDelete","noEditCol","noDeleteCol","noDetailsCol","match","React","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","Box","borderRadius","borderColor","TableContainer","Table","stickyHeader","aria-labelledby","size","aria-label","length","target","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","stopPropagation","selectedIndex","newSelected","handleClick","tableCellIndex","tableCellData","component","scope","Tooltip","title","placement","IconButton","color","Link","to","url","fontSize","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","ExportStatementToExcelBtn","displayText","disabled","reportName","reportTitle","dataToPrint","type","variant","exportPropertyStatementDataToXSL","startIcon","ExportToExcelBtn","exportDataToXSL","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","PrintArrayToPdfBtn","printDataRows","setDate","setHours","month","addYears","TabPanel","children","other","hidden","m","isWithinInterval","dirtyInterval","interval","time","startTime","endTime","RangeError","TRANSACTIONS_FILTER_OPTIONS","TenantStatementsPage","transactionsCharges","properties","contacts","tenantChargesItems","setTenantChargesItems","filteredChargeItems","setFilteredChargeItems","contactFilter","setContactFilter","periodFilter","setPeriodFilter","fromDateFilter","setFromDateFilter","toDateFilter","setToDateFilter","propertyFilter","setPropertyFilter","useEffect","dateRange","startOfPeriod","endOfPeriod","chargesForCurrentMonth","filter","chargeItem","chargeItemDate","parse","charge_date","handleSearchFormSubmit","preventDefault","filteredStatements","property_id","tenant_id","Grid","container","justify","item","PageHeading","alignItems","includes","xs","form","onSubmit","lg","TextField","fullWidth","name","InputLabelProps","shrink","md","select","MenuItem","ref","filterOption","Autocomplete","options","getOptionSelected","option","newValue","getOptionLabel","tenant","first_name","last_name","renderInput","params","Button","resetSearchForm","TenantsPaymentsStatement","lazy","transactions","commonStyles","tabValue","setTabValue","pageTitle","AppBar","Tabs","Tab","TenantsChargesStatement","connect","state","charge","find","contact","tenantUnit","propertyUnits","unit_id","assign","tenant_name","tenant_id_number","id_number","unit_ref","charge1","charge2","transaction","payment1","payment2","payment_date"],"mappings":"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","file":"static/js/15.2303740b.chunk.js","sourcesContent":["import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import { endOfMonth, endOfYear, startOfToday, eachMonthOfInterval, startOfMonth, startOfYear, subMonths, subYears } from \"date-fns\";\n\nconst monthsInYear = eachMonthOfInterval({\n\tstart: startOfYear(startOfToday()),\n\tend: endOfYear(startOfToday()),\n})\n//general contact titles\nconst TITLES_LIST = [\"Mr\", \"Prof\", \"Hon\", \"Sir\", \"Mrs\", \"Miss\", \"Dr\", \"Madam\", \"Other\"]\nconst GENDERS_LIST = [\"Male\", \"Female\", \"Unspecified\"];\nconst EXPENSES_CATEGORIES = [\n\t'Security Deposit Refund',\n\t'Water Deposit Refund',\n\t'Management Fees',\n\t'Utilities',\n\t'Taxes',\n\t'Mortgage',\n\t'Office',\n\t'Maintenance & Cleaning',\n\t'Advertising',\n\t'Insurance',\n\t'Legal & Other Professional Fees',\n\t'Auto & Travel',\n\t'Supplies',\n\t'Other Refund',\n\t'Repairs',\n\t'Other'\n]\nconst PROPRERTY_TYPES = [\n\t\"Residential\",\n\t\"Condo/Townhouse\",\n\t\"Multi-family\",\n\t\"Single-family\",\n]\nconst UNIT_TYPES = [\n\t\"Bed Sitter\",\n\t\"One Bedroom\",\n\t\"Two Bedroom\",\n\t\"Single Room\",\n\t\"Double Room\",\n\t\"Shop\",\n\t\"Other\",\n];\nconst LEASE_OPTIONS = [\n\t\"Fixed\",\n\t\"Fixed w/rollover\",\n];\nconst METER_TYPES = [\"Electric\", \"Sewer\", \"Water\"];\nconst FREQUENCY_OPTIONS = [\"Per Day\", \"Week\", \"Month\", \"Quarter\", \"Half Year\", \"Year\"];\nconst PAYMENT_FREQUENCY_OPTIONS = [\"Daily\", \"Weekly\", \"Monthly\", \"Quarterly\", \"Half-Yearly\", \"Yearly\"];\n\n//functions to get the above values\nexport function getContactTitles() {\n\treturn TITLES_LIST;\n}\n\nexport function getGendersList() {\n\treturn GENDERS_LIST;\n}\n\nexport function getExpensesCategories() {\n\treturn EXPENSES_CATEGORIES;\n}\n\n//general property types\nexport function getPropertyTypes() {\n\treturn PROPRERTY_TYPES;\n}\n\n//general unit types\nexport function getUnitTypes() {\n\treturn UNIT_TYPES;\n}\n\nexport function getPropertyBaths() {\n\tconst baths = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbaths.push(i);\n\t}\n\treturn baths.concat(\"5+\");\n}\n\nexport function getPropertyBeds() {\n\tconst beds = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbeds.push(i);\n\t}\n\treturn beds;\n}\n\nexport function getFrequencyOptions() {\n\treturn FREQUENCY_OPTIONS;\n}\n\nexport function getMeterTypes() {\n\treturn METER_TYPES;\n}\n\nexport function getLeaseOptions() {\n\treturn LEASE_OPTIONS;\n}\n\nexport function getPaymentOptions() {\n\treturn PAYMENT_FREQUENCY_OPTIONS;\n}\n\nexport function getTransactionsFilterOptions() {\n\treturn [\n\t\t{ id: 'month-to-date', text: 'Month To Date' }, { id: 'last-month', text: 'Last Month' },\n\t\t{ id: '3-months-to-date', text: '3 Months To Date' }, { id: 'year-to-date', text: 'Year To Date' },\n\t\t{ id: 'last-year', text: 'Last Year' },];\n}\n\nexport function getLastMonthFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 1)), endOfMonth(subMonths(startOfToday(), 1))]\n}\n\nexport function getLastYearFromToDates() {\n\treturn [startOfYear(subYears(startOfToday(), 1)), endOfYear(subYears(startOfToday(), 1))]\n}\n\nexport function getYearToDateFromToDates() {\n\treturn [startOfYear(startOfToday()), startOfToday()]\n}\n\nexport function getCurrentMonthFromToDates() {\n\treturn [startOfMonth(startOfToday()), endOfMonth(startOfToday())]\n}\n\nexport function getLastThreeMonthsFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 2)), endOfMonth(startOfToday())]\n}\n\nexport function getMonthsInYear() {\n\treturn monthsInYear\n}\n\n// Create our number formatter.\nexport const currencyFormatter = new Intl.NumberFormat(undefined, {\n\tstyle: 'decimal',\n\tcurrency: 'KES',\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        headCells,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ \"aria-label\": \"select all\" }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding={headCell.disablePadding ? \"none\" : \"default\"}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={order}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default useStyles;\n","\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => desc(a, b, orderBy)\n        : (a, b) => -desc(a, b, orderBy);\n}\n\nexport { desc, stableSort, getSorting };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport TableBody from '@material-ui/core/TableBody';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableCell from '@material-ui/core/TableCell';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport { withRouter } from \"react-router-dom\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport useStyles from \"./tableStyles\";\nimport { stableSort, getSorting } from \"./tablesSortingFunctions\";\n\nfunction CommonTable(props) {\n    const {\n        rows,\n        headCells,\n        selected,\n        setSelected,\n        deleteUrl,\n        handleDelete,\n        noEditCol,\n        noDeleteCol,\n        noDetailsCol,\n    } = props;\n    const { match } = props;\n    const classes = useStyles();\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"Beds\");\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(50);\n\n    const handleRequestSort = (event, property) => {\n        const isDesc = orderBy === property && order === \"desc\";\n        setOrder(isDesc ? \"asc\" : \"desc\");\n        setOrderBy(property);\n    };\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        event.stopPropagation();\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\">\n            <TableContainer>\n                <Table\n                    stickyHeader\n                    className={classes.table}\n                    aria-labelledby=\"tableTitle\"\n                    size={\"medium\"}\n                    aria-label=\"enhanced table\"\n                >\n                    <EnhancedTableHead\n                        classes={classes}\n                        numSelected={selected.length}\n                        order={order}\n                        orderBy={orderBy}\n                        onSelectAllClick={handleSelectAllClick}\n                        headCells={headCells}\n                        onRequestSort={handleRequestSort}\n                        rowCount={rows.length}\n                    />\n                    <TableBody>\n                        {stableSort(rows, getSorting(order, orderBy))\n                            .slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage\n                            )\n                            .map((row, index) => {\n                                const isItemSelected = isSelected(row.id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        // onClick={() => {if(typeof tableRowOnClickHandler === 'function') tableRowOnClickHandler(row.id) }}\n                                        hover\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        key={row.id}\n                                        selected={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                onClick={(event) =>\n                                                    handleClick(event, row.id)\n                                                }\n                                                checked={isItemSelected}\n                                                inputProps={{\n                                                    \"aria-labelledby\": labelId,\n                                                }}\n                                            />\n                                        </TableCell>\n                                        {headCells.map(\n                                            (headCell, tableCellIndex) => {\n                                                const tableCellData =\n                                                    row[headCell.id];\n                                                return (\n                                                    headCell.id === 'edit' ?\n                                                        (\n                                                            noEditCol ? null : (\n                                                                <TableCell\n                                                                    key={`edit${tableCellIndex}`}\n                                                                    component=\"th\"\n                                                                    scope=\"row\"\n                                                                    sortDirection={false}\n                                                                >\n                                                                    <Tooltip\n                                                                        title=\"Edit\"\n                                                                        placement=\"bottom\"\n                                                                    >\n                                                                        <IconButton\n                                                                            color=\"primary\"\n                                                                            size=\"small\"\n                                                                            component={Link}\n                                                                            to={`${match.url}/${row.id}/edit`}\n                                                                        >\n                                                                            <EditIcon fontSize=\"default\" />\n                                                                        </IconButton>\n                                                                    </Tooltip>\n                                                                </TableCell>\n                                                            )\n                                                        )\n                                                        : headCell.id === 'delete' ?\n                                                            (\n                                                                noDeleteCol ? null : (\n                                                                    <TableCell\n                                                                        key={`delete${tableCellIndex}`}\n                                                                        component=\"th\"\n                                                                        scope=\"row\"\n                                                                        sortDirection={false}\n                                                                    >\n                                                                        <Tooltip\n                                                                            title=\"Delete\"\n                                                                            placement=\"bottom\"\n                                                                        >\n                                                                            <IconButton\n                                                                                onClick={(event) => {\n                                                                                    handleDelete(\n                                                                                        row.id,\n                                                                                        deleteUrl\n                                                                                    );\n                                                                                }}\n                                                                                color=\"primary\"\n                                                                                size=\"small\"\n                                                                            >\n                                                                                <DeleteIcon fontSize=\"default\" />\n                                                                            </IconButton>\n                                                                        </Tooltip>\n                                                                    </TableCell>\n                                                                )\n                                                            )\n                                                            : headCell.id === 'details' ?\n                                                                (\n                                                                    !noDetailsCol ? null : (\n                                                                        <TableCell\n                                                                            key={`details${tableCellIndex}`}\n                                                                            component=\"th\"\n                                                                            scope=\"row\"\n                                                                            sortDirection={false}\n                                                                        >\n                                                                            <Tooltip\n                                                                                title=\"Details\"\n                                                                                placement=\"bottom\"\n                                                                            >\n                                                                                <IconButton\n                                                                                    color=\"primary\"\n                                                                                    size=\"small\"\n                                                                                    component={Link}\n                                                                                    to={`${match.url}/${row.id}/details`}\n                                                                                >\n                                                                                    <DetailsIcon fontSize=\"default\" />\n                                                                                </IconButton>\n                                                                            </Tooltip>\n                                                                        </TableCell>\n                                                                    )\n                                                                )\n                                                                :\n                                                                <TableCell\n                                                                    key={tableCellIndex}\n                                                                    component=\"th\"\n                                                                    id={labelId}\n                                                                    scope=\"row\"\n                                                                    padding=\"none\"\n                                                                >\n                                                                    {typeof tableCellData ===\n                                                                        \"boolean\"\n                                                                        ? tableCellData\n                                                                            ? \"Yes\"\n                                                                            : \"No\"\n                                                                        : tableCellData}\n                                                                </TableCell>\n                                                );\n                                            }\n                                        )}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[50, 100, 200, 300]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </Box>\n    );\n}\n\nexport default withRouter(CommonTable);\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport exportDataToXSL, { exportPropertyStatementDataToXSL } from \"../assets/PrintingHelper\";\nimport PropTypes from 'prop-types';\n\nfunction ExportToExcelBtn(props) {\n\tconst { disabled, reportName, reportTitle, headCells, dataToPrint } = props\n\treturn (\n\t\t<Button\n\t\t\ttype=\"button\"\n\t\t\taria-label=\"Export to Excel\"\n\t\t\tvariant=\"contained\"\n\t\t\tsize=\"medium\"\n\t\t\tcolor=\"primary\"\n\t\t\tdisabled={disabled}\n\t\t\tonClick={() => exportDataToXSL(reportName, reportTitle, headCells, dataToPrint, reportName)}\n\t\t\tstartIcon={<ImportExportIcon />}\n\t\t>\n\t\t\tExcel\n\t\t</Button >\n\t);\n}\n\nExportToExcelBtn.propTypes = {\n\treportName: PropTypes.string.isRequired,\n\treportTitle: PropTypes.string.isRequired,\n\theadCells: PropTypes.array.isRequired,\n\tdataToPrint: PropTypes.array.isRequired,\n}\n\nexport default ExportToExcelBtn;\n\nexport function ExportStatementToExcelBtn(props) {\n\tconst { displayText, disabled, reportName, reportTitle, headCells, dataToPrint } = props\n\treturn (\n\t\t<Button\n\t\t\ttype=\"button\"\n\t\t\taria-label=\"Export to Excel\"\n\t\t\tvariant=\"contained\"\n\t\t\tsize=\"medium\"\n\t\t\tcolor=\"primary\"\n\t\t\tdisabled={disabled}\n\t\t\tonClick={() => exportPropertyStatementDataToXSL(reportName, reportTitle, headCells, dataToPrint, reportName)}\n\t\t\tstartIcon={<ImportExportIcon />}\n\t\t>\n\t\t\t{ displayText ? displayText : \"Excel\"}\n\t\t</Button >\n\t);\n}\n\nExportStatementToExcelBtn.propTypes = {\n\treportName: PropTypes.string.isRequired,\n\treportTitle: PropTypes.string.isRequired,\n\theadCells: PropTypes.array.isRequired,\n\tdataToPrint: PropTypes.array.isRequired,\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\"\n}), 'Undo');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\"\n}), 'Print');\n\nexports.default = _default;","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport { printDataRows } from \"../assets/PrintingHelper\";\nimport PropTypes from 'prop-types';\n\nfunction PrintArrayToPdfBtn (props) {\n    const { disabled, reportName, reportTitle, headCells, dataToPrint } = props\n    return (\n        <Button\n            type=\"button\"\n            aria-label=\"Print to Pdf\"\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            disabled={disabled}\n            onClick={() => printDataRows(reportName, reportTitle, headCells, dataToPrint)}\n            startIcon={<PrintIcon />}\n        >\n            Pdf\n        </Button>\n    );\n}\n\nPrintArrayToPdfBtn.propTypes = {\n    reportName: PropTypes.string.isRequired,\n    reportTitle: PropTypes.string.isRequired,\n    headCells: PropTypes.array.isRequired,\n    dataToPrint: PropTypes.array.isRequired,\n}\n\nexport default PrintArrayToPdfBtn;\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addYears from '../addYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nexport default function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box m={2}>{children}</Box>}\n        </div>\n    );\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isWithinRange` to `isWithinInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   isWithinRange(\n *     new Date(2014, 0, 3),\n *     new Date(2014, 0, 1), new Date(2014, 0, 7)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   isWithinInterval(\n *     new Date(2014, 0, 3),\n *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\n\nexport default function isWithinInterval(dirtyDate, dirtyInterval) {\n  requiredArgs(2, arguments);\n  var interval = dirtyInterval || {};\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  return time >= startTime && time <= endTime;\n}","import Grid from \"@material-ui/core/Grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, TextField, Button, MenuItem } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PageHeading from \"../components/PageHeading\";\nimport { getCurrentMonthFromToDates, getLastMonthFromToDates, getLastThreeMonthsFromToDates, getLastYearFromToDates, getTransactionsFilterOptions, getYearToDateFromToDates } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\n\nconst headCells = [\n    { id: \"tenant_name\", numeric: false, disablePadding: true, label: \"Tenant\" },\n    { id: \"tenant_id_number\", numeric: false, disablePadding: true, label: \"Tenant ID\" },\n    { id: \"unit_ref\", numeric: false, disablePadding: true, label: \"Unit Ref/Number\" },\n    { id: \"charge_label\", numeric: false, disablePadding: true, label: \"Charge Name/Type\" },\n    { id: \"charge_date\", numeric: false, disablePadding: true, label: \"Charge Date\", },\n    { id: \"due_date\", numeric: false, disablePadding: true, label: \"Due Date\", },\n    { id: \"charge_amount\", numeric: false, disablePadding: true, label: \"Charge Amount\", },\n];\n\nconst TRANSACTIONS_FILTER_OPTIONS = getTransactionsFilterOptions()\n\nlet TenantStatementsPage = ({\n    transactionsCharges,\n    properties,\n    contacts,\n    classes\n}) => {\n    const [tenantChargesItems, setTenantChargesItems] = useState([]);\n    const [filteredChargeItems, setFilteredChargeItems] = useState([]);\n    const [contactFilter, setContactFilter] = useState(null);\n    const [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n    const [fromDateFilter, setFromDateFilter] = useState(\"\");\n    const [toDateFilter, setToDateFilter] = useState(\"\");\n    const [propertyFilter, setPropertyFilter] = useState(\"all\");\n    const [selected, setSelected] = useState([]);\n\n    useEffect(() => {\n        const dateRange = getCurrentMonthFromToDates()\n        const startOfPeriod = dateRange[0]\n        const endOfPeriod = dateRange[1]\n        const chargesForCurrentMonth = transactionsCharges.filter((chargeItem) => {\n            const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date())\n            return isWithinInterval(chargeItemDate, { start: startOfPeriod, end: endOfPeriod })\n        })\n        setTenantChargesItems(chargesForCurrentMonth);\n        setFilteredChargeItems(chargesForCurrentMonth);\n    }, [transactionsCharges]);\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the transactionsCharges according to the search criteria here\n        let statementsWithinDateRange = [];\n        let dateRange = []\n        let startOfPeriod;\n        let endOfPeriod;\n        switch (periodFilter) {\n            case 'last-month':\n                dateRange = getLastMonthFromToDates()\n                startOfPeriod = dateRange[0]\n                endOfPeriod = dateRange[1]\n                break;\n            case 'year-to-date':\n                dateRange = getYearToDateFromToDates()\n                startOfPeriod = dateRange[0]\n                endOfPeriod = dateRange[1]\n                break;\n            case 'last-year':\n                dateRange = getLastYearFromToDates()\n                startOfPeriod = dateRange[0]\n                endOfPeriod = dateRange[1]\n                break;\n            case 'month-to-date':\n                dateRange = getCurrentMonthFromToDates()\n                startOfPeriod = dateRange[0]\n                endOfPeriod = dateRange[1]\n                break;\n            case '3-months-to-date':\n                dateRange = getLastThreeMonthsFromToDates()\n                startOfPeriod = dateRange[0]\n                endOfPeriod = dateRange[1]\n                break;\n            default:\n                dateRange = getLastMonthFromToDates()\n                startOfPeriod = dateRange[0]\n                endOfPeriod = dateRange[1]\n        }\n        statementsWithinDateRange = transactionsCharges.filter((chargeItem) => {\n            const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date())\n            return isWithinInterval(chargeItemDate, { start: startOfPeriod, end: endOfPeriod })\n        })\n        const filteredStatements = statementsWithinDateRange\n            .filter(({ charge_date }) => !fromDateFilter ? true : charge_date >= fromDateFilter)\n            .filter(({ charge_date }) => !toDateFilter ? true : charge_date <= toDateFilter)\n            .filter(({ property_id }) => propertyFilter === \"all\" ? true : property_id === propertyFilter)\n            .filter(({ tenant_id }) => !contactFilter ? true : tenant_id === contactFilter.id)\n\n\n        setFilteredChargeItems(filteredStatements);\n    };\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setFilteredChargeItems(tenantChargesItems);\n        setPropertyFilter(\"all\");\n        setPeriodFilter(\"month-to-date\");\n        setContactFilter(null);\n        setFromDateFilter(\"\");\n        setToDateFilter(\"\");\n    };\n\n    return (\n        <Grid\n            container\n            spacing={3}\n            justify=\"center\" direction=\"column\"\n        >\n            <Grid item key={2}>\n                <PageHeading text={\"Tenants Charges Statement\"} />\n            </Grid>\n            <Grid\n                container\n                spacing={2}\n                item\n                alignItems=\"center\"\n                direction=\"row\"\n                key={1}\n            >\n                <Grid item>\n                    <PrintArrayToPdf\n                        disabled={!selected.length}\n                        reportName={'Tenants Payments Records'}\n                        reportTitle={'Tenants Payments Data'}\n                        headCells={headCells}\n                        dataToPrint={tenantChargesItems.filter(({ id }) => selected.includes(id))}\n                    />\n                </Grid>\n                <Grid item>\n                    <ExportToExcelBtn\n                        disabled={!selected.length}\n                        reportName={'Tenants Charges Records'}\n                        reportTitle={'Tenants Charges Records'}\n                        headCells={headCells}\n                        dataToPrint={tenantChargesItems.filter(({ id }) => selected.includes(id))}\n                    />\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Box\n                    border={1}\n                    borderRadius=\"borderRadius\"\n                    borderColor=\"grey.400\"\n                >\n                    <form\n                        className={classes.form}\n                        id=\"contactSearchForm\"\n                        onSubmit={handleSearchFormSubmit}\n                    >\n                        <Grid\n                            container\n                            spacing={2}\n                            justify=\"center\"\n                            direction=\"row\"\n                        >\n                            <Grid\n                                container\n                                item\n                                xs={12} lg={6}\n                                spacing={1}\n                                justify=\"center\"\n                                direction=\"row\"\n                            >\n                                <Grid item xs={12} lg={6}>\n                                    <TextField\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        type=\"date\"\n                                        id=\"from_date_filter\"\n                                        name=\"from_date_filter\"\n                                        label=\"From Date\"\n                                        value={fromDateFilter}\n                                        onChange={(event) => {\n                                            setFromDateFilter(\n                                                event.target.value\n                                            );\n                                        }}\n                                        InputLabelProps={{ shrink: true }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} lg={6}>\n                                    <TextField\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        type=\"date\"\n                                        name=\"to_date_filter\"\n                                        label=\"To Date\"\n                                        id=\"to_date_filter\"\n                                        onChange={(event) => {\n                                            setToDateFilter(event.target.value);\n                                        }}\n                                        value={toDateFilter}\n                                        InputLabelProps={{ shrink: true }}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid item md={6} xs={12}>\n                                <TextField\n                                    fullWidth\n                                    select\n                                    variant=\"outlined\"\n                                    name=\"propertyFilter\"\n                                    label=\"Property\"\n                                    id=\"propertyFilter\"\n                                    onChange={(event) => {\n                                        setPropertyFilter(\n                                            event.target.value\n                                        );\n                                    }}\n                                    value={propertyFilter}\n                                >\n                                    <MenuItem key={\"all\"} value={\"all\"}>All Properties</MenuItem>\n                                    {properties.map(\n                                        (property, index) => (\n                                            <MenuItem\n                                                key={index}\n                                                value={property.id}\n                                            >\n                                                {property.ref}\n                                            </MenuItem>\n                                        )\n                                    )}\n                                </TextField>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            container\n                            spacing={2}\n                            justify=\"center\"\n                            direction=\"row\"\n                        >\n                            <Grid item md={6} xs={12}>\n                                <TextField\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    select\n                                    id=\"period_filter\"\n                                    name=\"period_filter\"\n                                    label=\"Period\"\n                                    value={periodFilter}\n                                    onChange={(event) => {\n                                        setPeriodFilter(\n                                            event.target.value\n                                        );\n                                    }}\n                                    InputLabelProps={{ shrink: true }}\n                                >\n                                    {TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => (\n                                        <MenuItem\n                                            key={index}\n                                            value={filterOption.id}\n                                        >\n                                            {filterOption.text}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                            <Grid item xs={12} lg={6}>\n                                <Autocomplete\n                                    id=\"contact_filter\"\n                                    options={contacts}\n                                    getOptionSelected={(option, value) => option.id === value.id}\n                                    name=\"contact_filter\"\n                                    onChange={(event, newValue) => {\n                                        setContactFilter(newValue);\n                                    }}\n                                    value={contactFilter}\n                                    getOptionLabel={(tenant) => tenant ? `${tenant.first_name} ${tenant.last_name}` : ''}\n                                    style={{ width: \"100%\" }}\n                                    renderInput={(params) => <TextField {...params} label=\"Tenant\" variant=\"outlined\" />}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            container\n                            spacing={2}\n                            item\n                            justify=\"flex-end\"\n                            alignItems=\"center\"\n                            direction=\"row\"\n                            key={1}\n                        >\n                            <Grid item>\n                                <Button\n                                    onClick={(event) => handleSearchFormSubmit(event)}\n                                    type=\"submit\"\n                                    form=\"contactSearchForm\"\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    size=\"medium\"\n                                    startIcon={<SearchIcon />}\n                                >\n                                    SEARCH\n                                    </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    onClick={(event) => resetSearchForm(event)}\n                                    type=\"reset\"\n                                    form=\"contactSearchForm\"\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    size=\"medium\"\n                                    startIcon={<UndoIcon />}\n                                >\n                                    RESET\n                                    </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Box>\n            </Grid>\n            <Grid item xs={12}>\n                <CommonTable\n                    selected={selected}\n                    setSelected={setSelected}\n                    rows={filteredChargeItems}\n                    headCells={headCells}\n                    noEditCol\n                    noDeleteCol\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\n\nexport default TenantStatementsPage;\n","import React, { lazy } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport TabPanel from \"../components/TabPanel\";\nimport { commonStyles } from '../components/commonStyles'\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport TenantsChargesStatement from \"./TenantsChargesStatement\";\nimport { parse } from \"date-fns\";\nconst TenantsPaymentsStatement = lazy(() => import('./TenantsPaymentsStatement'));\n\nlet TenantStatementsPage = ({\n    transactions,\n    transactionsCharges,\n    contacts,\n    properties,\n}) => {\n    const classes = commonStyles()\n    const [tabValue, setTabValue] = React.useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n    return (\n        <Layout pageTitle=\"Tenants Statements\">\n            <AppBar position=\"static\">\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Tenants Charges Statement\" />\n                    <Tab label=\"Tenants Payments Statement\" />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={tabValue} index={0}>\n                <TenantsChargesStatement contacts={contacts} transactionsCharges={transactionsCharges} properties={properties} classes={classes} />\n            </TabPanel>\n            <TabPanel value={tabValue} index={1}>\n                <TenantsPaymentsStatement contacts={contacts} transactions={transactions} properties={properties} classes={classes} />\n            </TabPanel>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        transactionsCharges: state.transactionsCharges\n            .map(charge => {\n                const tenant = state.contacts.find((contact) => contact.id === charge.tenant_id) || {};\n                const tenantUnit = state.propertyUnits.find(({ id }) => id === charge.unit_id) || {};\n                return Object.assign({}, charge, {\n                    tenant_name: `${tenant.first_name} ${tenant.last_name}`,\n                    tenant_id_number: tenant.id_number,\n                    unit_ref: tenantUnit.ref\n                })\n            })\n            .sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) -\n                parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n        transactions: state.transactions\n            .map(transaction => {\n                const tenant = state.contacts.find(({ id }) => id === transaction.tenant_id) || {};\n                const tenantUnit = state.propertyUnits.find(({ id }) => id === transaction.unit_id) || {};\n                return Object.assign({}, transaction, {\n                    tenant_name: `${tenant.first_name} ${tenant.last_name}`,\n                    tenant_id_number: tenant.id_number,\n                    unit_ref: tenantUnit.ref\n                })\n            })\n            .sort((payment1, payment2) => parse(payment2.payment_date, 'yyyy-MM-dd', new Date()) -\n                parse(payment1.payment_date, 'yyyy-MM-dd', new Date())),\n        contacts: state.contacts,\n        properties: state.properties,\n    };\n};\n\nTenantStatementsPage = connect(mapStateToProps)(TenantStatementsPage);\n\nexport default withRouter(TenantStatementsPage);\n"],"sourceRoot":""}