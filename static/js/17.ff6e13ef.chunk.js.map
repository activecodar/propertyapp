{"version":3,"sources":["components/table/EnhancedTableHead.js","components/table/tableStyles.js","components/table/tablesSortingFunctions.js","components/table/commonTable.js","components/ExportToExcelBtn.js","../node_modules/@material-ui/icons/Add.js","../node_modules/@material-ui/icons/Print.js","components/PrintArrayToPdfBtn.js","components/TabPanel.js","../node_modules/@material-ui/core/colors/grey.js","components/DataGridTable.js","../node_modules/@material-ui/core/colors/red.js","../node_modules/@material-ui/core/colors/teal.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","Routes/UserProfilePage.js"],"names":["EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","headCells","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","id","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","position","top","desc","a","b","withRouter","rows","selected","setSelected","deleteUrl","handleDelete","noEditCol","noDeleteCol","noDetailsCol","match","React","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","Box","borderRadius","borderColor","TableContainer","Table","stickyHeader","aria-labelledby","size","aria-label","length","target","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","stopPropagation","selectedIndex","newSelected","concat","handleClick","tableCellIndex","tableCellData","component","scope","Tooltip","title","placement","IconButton","color","Link","to","url","fontSize","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","ExportStatementToExcelBtn","displayText","disabled","reportName","reportTitle","dataToPrint","type","variant","exportPropertyStatementDataToXSL","startIcon","ExportToExcelBtn","exportDataToXSL","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","PrintArrayToPdfBtn","printDataRows","TabPanel","children","other","hidden","m","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","DataGridTable","emptyRows","Math","min","Paper","headerName","rowIndex","field","style","colSpan","Card","ref","_props$raised","raised","_objectWithoutProperties","_extends","clsx","elevation","withStyles","name","CardContent","_props$component","Component","paddingBottom","legendOpts","display","fullWidth","reverse","labels","fontColor","GREY","propertiesColumns","UserDetailsPage","totalPortfolioFloorArea","totalAssetsRentValue","activeLeasesNumber","propertyUnits","properties","userDetails","managementFees","handleItemDelete","commonStyles","tabValue","setTabValue","managementFeesItems","setManagementFeesItems","filteredManagementFeesItems","setFilteredManagementFeesItems","propertyFilter","setPropertyFilter","useEffect","totalPropertyUnits","rentalUnitsOccupancyData","datasets","push","data","backgroundColor","RED","rentalUnitsDistributionData","unitTypes","Array","from","Set","unit","unit_type","filter","_unit_type","TEAL","pageTitle","newValue","container","justify","item","xs","md","alignItems","fullHeightWidthContainer","alt","src","user_avatar_url","largeAvatar","gutterBottom","first_name","last_name","id_number","phone_number","work_mobile_number","home_phone_number","primary_email","legend","includes","form","onSubmit","preventDefault","select","connect","state","ownProps","propertiesAssignedToUser","assigned_to","params","userId","assign","units","property_id","floorArea","reduce","total","currentValue","parseFloat","sqm","totalPropertiesFloorArea","idsOfPropertiesAssignedToUser","totalActiveLeases","leases","terminated","user_id","rent_amount","users","find","dispatch","itemId"],"mappings":"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","file":"static/js/17.ff6e13ef.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        headCells,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ \"aria-label\": \"select all\" }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding={headCell.disablePadding ? \"none\" : \"default\"}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={order}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default useStyles;\n","\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => desc(a, b, orderBy)\n        : (a, b) => -desc(a, b, orderBy);\n}\n\nexport { desc, stableSort, getSorting };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport TableBody from '@material-ui/core/TableBody';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableCell from '@material-ui/core/TableCell';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport { withRouter } from \"react-router-dom\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport useStyles from \"./tableStyles\";\nimport { stableSort, getSorting } from \"./tablesSortingFunctions\";\n\nfunction CommonTable(props) {\n    const {\n        rows,\n        headCells,\n        selected,\n        setSelected,\n        deleteUrl,\n        handleDelete,\n        noEditCol,\n        noDeleteCol,\n        noDetailsCol,\n    } = props;\n    const { match } = props;\n    const classes = useStyles();\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"Beds\");\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(50);\n\n    const handleRequestSort = (event, property) => {\n        const isDesc = orderBy === property && order === \"desc\";\n        setOrder(isDesc ? \"asc\" : \"desc\");\n        setOrderBy(property);\n    };\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        event.stopPropagation();\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\">\n            <TableContainer>\n                <Table\n                    stickyHeader\n                    className={classes.table}\n                    aria-labelledby=\"tableTitle\"\n                    size={\"medium\"}\n                    aria-label=\"enhanced table\"\n                >\n                    <EnhancedTableHead\n                        classes={classes}\n                        numSelected={selected.length}\n                        order={order}\n                        orderBy={orderBy}\n                        onSelectAllClick={handleSelectAllClick}\n                        headCells={headCells}\n                        onRequestSort={handleRequestSort}\n                        rowCount={rows.length}\n                    />\n                    <TableBody>\n                        {stableSort(rows, getSorting(order, orderBy))\n                            .slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage\n                            )\n                            .map((row, index) => {\n                                const isItemSelected = isSelected(row.id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        // onClick={() => {if(typeof tableRowOnClickHandler === 'function') tableRowOnClickHandler(row.id) }}\n                                        hover\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        key={row.id}\n                                        selected={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                onClick={(event) =>\n                                                    handleClick(event, row.id)\n                                                }\n                                                checked={isItemSelected}\n                                                inputProps={{\n                                                    \"aria-labelledby\": labelId,\n                                                }}\n                                            />\n                                        </TableCell>\n                                        {headCells.map(\n                                            (headCell, tableCellIndex) => {\n                                                const tableCellData =\n                                                    row[headCell.id];\n                                                return (\n                                                    headCell.id === 'edit' ?\n                                                        (\n                                                            noEditCol ? null : (\n                                                                <TableCell\n                                                                    key={`edit${tableCellIndex}`}\n                                                                    component=\"th\"\n                                                                    scope=\"row\"\n                                                                    sortDirection={false}\n                                                                >\n                                                                    <Tooltip\n                                                                        title=\"Edit\"\n                                                                        placement=\"bottom\"\n                                                                    >\n                                                                        <IconButton\n                                                                            color=\"primary\"\n                                                                            size=\"small\"\n                                                                            component={Link}\n                                                                            to={`${match.url}/${row.id}/edit`}\n                                                                        >\n                                                                            <EditIcon fontSize=\"default\" />\n                                                                        </IconButton>\n                                                                    </Tooltip>\n                                                                </TableCell>\n                                                            )\n                                                        )\n                                                        : headCell.id === 'delete' ?\n                                                            (\n                                                                noDeleteCol ? null : (\n                                                                    <TableCell\n                                                                        key={`delete${tableCellIndex}`}\n                                                                        component=\"th\"\n                                                                        scope=\"row\"\n                                                                        sortDirection={false}\n                                                                    >\n                                                                        <Tooltip\n                                                                            title=\"Delete\"\n                                                                            placement=\"bottom\"\n                                                                        >\n                                                                            <IconButton\n                                                                                onClick={(event) => {\n                                                                                    handleDelete(\n                                                                                        row.id,\n                                                                                        deleteUrl\n                                                                                    );\n                                                                                }}\n                                                                                color=\"primary\"\n                                                                                size=\"small\"\n                                                                            >\n                                                                                <DeleteIcon fontSize=\"default\" />\n                                                                            </IconButton>\n                                                                        </Tooltip>\n                                                                    </TableCell>\n                                                                )\n                                                            )\n                                                            : headCell.id === 'details' ?\n                                                                (\n                                                                    !noDetailsCol ? null : (\n                                                                        <TableCell\n                                                                            key={`details${tableCellIndex}`}\n                                                                            component=\"th\"\n                                                                            scope=\"row\"\n                                                                            sortDirection={false}\n                                                                        >\n                                                                            <Tooltip\n                                                                                title=\"Details\"\n                                                                                placement=\"bottom\"\n                                                                            >\n                                                                                <IconButton\n                                                                                    color=\"primary\"\n                                                                                    size=\"small\"\n                                                                                    component={Link}\n                                                                                    to={`${match.url}/${row.id}/details`}\n                                                                                >\n                                                                                    <DetailsIcon fontSize=\"default\" />\n                                                                                </IconButton>\n                                                                            </Tooltip>\n                                                                        </TableCell>\n                                                                    )\n                                                                )\n                                                                :\n                                                                <TableCell\n                                                                    key={tableCellIndex}\n                                                                    component=\"th\"\n                                                                    id={labelId}\n                                                                    scope=\"row\"\n                                                                    padding=\"none\"\n                                                                >\n                                                                    {typeof tableCellData ===\n                                                                        \"boolean\"\n                                                                        ? tableCellData\n                                                                            ? \"Yes\"\n                                                                            : \"No\"\n                                                                        : tableCellData}\n                                                                </TableCell>\n                                                );\n                                            }\n                                        )}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[50, 100, 200, 300]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </Box>\n    );\n}\n\nexport default withRouter(CommonTable);\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport exportDataToXSL, { exportPropertyStatementDataToXSL } from \"../assets/PrintingHelper\";\nimport PropTypes from 'prop-types';\n\nfunction ExportToExcelBtn(props) {\n\tconst { disabled, reportName, reportTitle, headCells, dataToPrint } = props\n\treturn (\n\t\t<Button\n\t\t\ttype=\"button\"\n\t\t\taria-label=\"Export to Excel\"\n\t\t\tvariant=\"contained\"\n\t\t\tsize=\"medium\"\n\t\t\tcolor=\"primary\"\n\t\t\tdisabled={disabled}\n\t\t\tonClick={() => exportDataToXSL(reportName, reportTitle, headCells, dataToPrint, reportName)}\n\t\t\tstartIcon={<ImportExportIcon />}\n\t\t>\n\t\t\tExcel\n\t\t</Button >\n\t);\n}\n\nExportToExcelBtn.propTypes = {\n\treportName: PropTypes.string.isRequired,\n\treportTitle: PropTypes.string.isRequired,\n\theadCells: PropTypes.array.isRequired,\n\tdataToPrint: PropTypes.array.isRequired,\n}\n\nexport default ExportToExcelBtn;\n\nexport function ExportStatementToExcelBtn(props) {\n\tconst { displayText, disabled, reportName, reportTitle, headCells, dataToPrint } = props\n\treturn (\n\t\t<Button\n\t\t\ttype=\"button\"\n\t\t\taria-label=\"Export to Excel\"\n\t\t\tvariant=\"contained\"\n\t\t\tsize=\"medium\"\n\t\t\tcolor=\"primary\"\n\t\t\tdisabled={disabled}\n\t\t\tonClick={() => exportPropertyStatementDataToXSL(reportName, reportTitle, headCells, dataToPrint, reportName)}\n\t\t\tstartIcon={<ImportExportIcon />}\n\t\t>\n\t\t\t{ displayText ? displayText : \"Excel\"}\n\t\t</Button >\n\t);\n}\n\nExportStatementToExcelBtn.propTypes = {\n\treportName: PropTypes.string.isRequired,\n\treportTitle: PropTypes.string.isRequired,\n\theadCells: PropTypes.array.isRequired,\n\tdataToPrint: PropTypes.array.isRequired,\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\"\n}), 'Print');\n\nexports.default = _default;","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport { printDataRows } from \"../assets/PrintingHelper\";\nimport PropTypes from 'prop-types';\n\nfunction PrintArrayToPdfBtn (props) {\n    const { disabled, reportName, reportTitle, headCells, dataToPrint } = props\n    return (\n        <Button\n            type=\"button\"\n            aria-label=\"Print to Pdf\"\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            disabled={disabled}\n            onClick={() => printDataRows(reportName, reportTitle, headCells, dataToPrint)}\n            startIcon={<PrintIcon />}\n        >\n            Pdf\n        </Button>\n    );\n}\n\nPrintArrayToPdfBtn.propTypes = {\n    reportName: PropTypes.string.isRequired,\n    reportTitle: PropTypes.string.isRequired,\n    headCells: PropTypes.array.isRequired,\n    dataToPrint: PropTypes.array.isRequired,\n}\n\nexport default PrintArrayToPdfBtn;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nexport default function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box m={2}>{children}</Box>}\n        </div>\n    );\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar grey = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#d5d5d5',\n  A200: '#aaaaaa',\n  A400: '#303030',\n  A700: '#616161'\n};\nvar _default = grey;\nexports.default = _default;","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n\nexport default function DataGridTable({ headCells, rows }) {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div>\n            <TableContainer component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            {headCells.map((headCell, index) => (\n                                <TableCell key={index}>\n                                    {headCell.headerName}\n                                </TableCell>\n\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row, rowIndex) => (\n                                <TableRow key={rowIndex}>\n                                    {\n                                        headCells.map((headCell, tableCellIndex) =>\n                                            <TableCell component=\"th\" scope=\"row\" key={tableCellIndex}>\n                                                {row[headCell.field]}\n                                            </TableCell>\n                                        )\n                                    }\n                                </TableRow>\n                            ))}\n                        {emptyRows > 0 && (\n                            <TableRow style={{ height: (53) * emptyRows }}>\n                                <TableCell colSpan={6} />\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </div>\n    );\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar red = {\n  50: '#ffebee',\n  100: '#ffcdd2',\n  200: '#ef9a9a',\n  300: '#e57373',\n  400: '#ef5350',\n  500: '#f44336',\n  600: '#e53935',\n  700: '#d32f2f',\n  800: '#c62828',\n  900: '#b71c1c',\n  A100: '#ff8a80',\n  A200: '#ff5252',\n  A400: '#ff1744',\n  A700: '#d50000'\n};\nvar _default = red;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar teal = {\n  50: '#e0f2f1',\n  100: '#b2dfdb',\n  200: '#80cbc4',\n  300: '#4db6ac',\n  400: '#26a69a',\n  500: '#009688',\n  600: '#00897b',\n  700: '#00796b',\n  800: '#00695c',\n  900: '#004d40',\n  A100: '#a7ffeb',\n  A200: '#64ffda',\n  A400: '#1de9b6',\n  A700: '#00bfa5'\n};\nvar _default = teal;\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport DataGridTable from '../components/DataGridTable';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport InfoDisplayPaper from \"../components/InfoDisplayPaper\";\nimport { commonStyles } from '../components/commonStyles'\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport TabPanel from \"../components/TabPanel\";\nimport Button from '@material-ui/core/Button';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Link } from \"react-router-dom\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport { handleDelete } from \"../actions/actions\";\nimport { Doughnut } from 'react-chartjs-2';\nimport TEAL from '@material-ui/core/colors/teal';\nimport RED from '@material-ui/core/colors/red';\nimport GREY from \"@material-ui/core/colors/grey\";\n\n\nconst legendOpts = {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    labels: {\n        fontColor: GREY[800],\n        fontSize: 14,\n    }\n};\n\nconst headCells = [\n    { id: \"from_date\", numeric: false, disablePadding: true, label: \"From Date\" },\n    { id: \"to_date\", numeric: false, disablePadding: true, label: \"To Date\" },\n    { id: \"property_ref\", numeric: false, disablePadding: true, label: \"Property\" },\n    { id: \"date_collected\", numeric: false, disablePadding: true, label: \"Date Collected\" },\n    { id: \"fees_amount\", numeric: false, disablePadding: true, label: \"Amount Collected\" },\n    { id: \"edit\", numeric: false, disablePadding: true, label: \"Edit\" },\n    { id: \"delete\", numeric: false, disablePadding: true, label: \"Delete\" },\n];\n\nconst propertiesColumns = [\n    { field: 'ref', headerName: 'Property Name/Ref' },\n    { field: \"address\", headerName: \"Property Address\" },\n    { field: \"city\", headerName: \"Location\" },\n    { field: \"units\", headerName: \"Number of Units\" },\n    { field: \"floorArea\", headerName: \"Floor Area\" },\n];\n\n\nlet UserDetailsPage = ({\n    totalPortfolioFloorArea,\n    totalAssetsRentValue,\n    activeLeasesNumber,\n    propertyUnits,\n    properties,\n    userDetails,\n    managementFees,\n    match,\n    handleItemDelete\n}) => {\n    const classes = commonStyles()\n    const [tabValue, setTabValue] = React.useState(0);\n    const [managementFeesItems, setManagementFeesItems] = useState([])\n    const [filteredManagementFeesItems, setFilteredManagementFeesItems] = useState([])\n    const [propertyFilter, setPropertyFilter] = useState(\"all\");\n    const [selected, setSelected] = useState([]);\n\n    useEffect(() => {\n        setManagementFeesItems(managementFees)\n        setFilteredManagementFeesItems(managementFees)\n    }, [managementFees])\n\n    const totalPropertyUnits = propertyUnits.length\n\n    //get occupancy graph data\n    const rentalUnitsOccupancyData = { datasets: [] }\n    rentalUnitsOccupancyData.labels = ['Occupied Units', 'Vacant Units']\n    rentalUnitsOccupancyData.datasets.push(\n        {\n            data: [activeLeasesNumber, (propertyUnits.length - activeLeasesNumber)],\n            backgroundColor: [RED[800], RED[200]]\n        })\n    //get the number of the different units by category\n    const rentalUnitsDistributionData = { datasets: [] }\n    const unitTypes = Array.from(new Set(propertyUnits.map(unit => unit.unit_type)))\n    rentalUnitsDistributionData.labels = unitTypes\n    rentalUnitsDistributionData.datasets.push({\n        data: unitTypes\n            .map(unit_type => {\n                return propertyUnits.filter((property) => property.unit_type === unit_type).length\n            }),\n        backgroundColor: unitTypes.map((_unit_type, key) => TEAL[(key + 1) * 100])\n    })\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the management fees according to the search criteria here\n\n    };\n\n    return (\n        <Layout pageTitle=\"User Profile\">\n            <AppBar position=\"static\">\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"User Profile\" />\n                    <Tab label=\"Management Revenue\" />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={tabValue} index={0}>\n                <Grid container justify=\"center\" direction=\"column\" spacing={2}>\n                    <Grid item xs={12} >\n                        <Typography variant=\"h6\">User Details</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        item\n                        justify=\"center\"\n                        spacing={4}\n                    >\n                        <Grid container item direction=\"column\" xs={12} md={4} spacing={2} justify=\"center\" alignItems=\"stretch\">\n                            <Grid item md>\n                                <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                    <CardContent>\n                                        <Grid container spacing={2} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                                            <Grid item>\n                                                <Avatar\n                                                    alt=\"User Image\"\n                                                    src={userDetails.user_avatar_url}\n                                                    className={classes.largeAvatar}\n                                                />\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                                    {userDetails.title} {userDetails.first_name} {userDetails.last_name}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                    <CardContent>\n                                        <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                            Contact Info\n                                    </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            ID Number: {userDetails.id_number || '-'}\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            Personal Phone Number: {userDetails.phone_number || '-'}\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            Work Phone Number: {userDetails.work_mobile_number || '-'}\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            Home Phone Number: {userDetails.home_phone_number || '-'}\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            Email: {userDetails.primary_email || '-'}\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                        <Grid item container xs={12} md={8}>\n                            <Grid item xs={12}>\n                                <Card variant=\"outlined\" elevation={1}>\n                                    <CardContent>\n                                        <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                            Property Portfolio\n                                    </Typography>\n                                        <DataGridTable rows={properties} headCells={propertiesColumns} />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"row\" item alignItems=\"stretch\" justify=\"center\" spacing={4}>\n                        <Grid item xs={12} md={4} container spacing={2} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                            <InfoDisplayPaper xs={12} title={\"Total Rental Units\"} value={totalPropertyUnits} />\n                            <InfoDisplayPaper xs={12} title={\"Total Floor Area\"} value={totalPortfolioFloorArea} />\n                            <InfoDisplayPaper xs={12} title={\"Total Units Rent Value\"} value={totalAssetsRentValue} />\n                            <InfoDisplayPaper xs={12} title={\"Total Active Rental Agreements\"} value={activeLeasesNumber} />\n                        </Grid>\n                        <Grid container item xs={12} md={8} spacing={2} direction=\"row\" alignItems=\"stretch\" justify=\"center\">\n                            <Grid item xs={12} md>\n                                <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                    <CardContent>\n                                        <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                            Current Unit Occupancy\n                                        </Typography>\n                                        <Doughnut height={300} data={rentalUnitsOccupancyData} legend={legendOpts} />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={12} md>\n                                <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                    <CardContent>\n                                        <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                            Unit Types Distribution\n                                        </Typography>\n                                        <Doughnut height={300} data={rentalUnitsDistributionData} legend={legendOpts} />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </TabPanel>\n            <TabPanel value={tabValue} index={1}>\n                <Grid\n                    container\n                    spacing={3}\n                    justify=\"space-evenly\"\n                    alignItems=\"center\"\n                >\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\">Management Fees</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        spacing={2}\n                        item\n                        alignItems=\"center\"\n                        direction=\"row\"\n                        key={1}\n                    >\n                        <Grid item>\n                            <Button\n                                type=\"button\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                startIcon={<AddIcon />}\n                                component={Link}\n                                to={`${match.url}/management-fees/new`}\n                            >\n                                Collect Fees\n                        </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                type=\"button\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                startIcon={<EditIcon />}\n                                disabled={!selected.length}\n                                component={Link}\n                                to={`${match.url}/management-fees/${selected[0]}/edit`}\n                            >\n                                Edit\n                        </Button>\n                        </Grid>\n                        <Grid item>\n                            <PrintArrayToPdf\n                                disabled={!selected.length}\n                                reportName={'Rental Units Records'}\n                                reportTitle={'Rental Units Data'}\n                                headCells={headCells}\n                                dataToPrint={managementFeesItems.filter(({ id }) => selected.includes(id))}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ExportToExcelBtn\n                                disabled={!selected.length}\n                                reportName={'Rental Units Records'}\n                                reportTitle={'Rental Units Data'}\n                                headCells={headCells}\n                                dataToPrint={managementFeesItems.filter(({ id }) => selected.includes(id))}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Box\n                            border={1}\n                            borderRadius=\"borderRadius\"\n                            borderColor=\"grey.400\"\n                        >\n                            <form\n                                className={classes.form}\n                                id=\"managementFeesSearchForm\"\n                                onSubmit={handleSearchFormSubmit}\n                            >\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    direction=\"row\"\n                                >\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            select\n                                            variant=\"outlined\"\n                                            name=\"property_filter\"\n                                            label=\"Property\"\n                                            id=\"property_filter\"\n                                            onChange={(event) => {\n                                                setPropertyFilter(\n                                                    event.target.value\n                                                );\n                                            }}\n                                            value={propertyFilter}\n                                        >\n                                            <MenuItem key={\"all\"} value={\"all\"}>All Properties</MenuItem>\n                                            {properties.map(\n                                                (property, index) => (\n                                                    <MenuItem\n                                                        key={index}\n                                                        value={property.id}\n                                                    >\n                                                        {property.ref}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            type=\"submit\"\n                                            form=\"managementFeesSearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<SearchIcon />}\n                                        >\n                                            SEARCH\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <CommonTable\n                            selected={selected}\n                            setSelected={setSelected}\n                            rows={filteredManagementFeesItems}\n                            headCells={headCells}\n                            deleteUrl={'management-fees'}\n                            handleDelete={handleItemDelete}\n                        />\n                    </Grid>\n                </Grid>\n            </TabPanel>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const propertiesAssignedToUser = state.properties\n        .filter(({ assigned_to }) => assigned_to === ownProps.match.params.userId)\n        .map(property => Object.assign(\n            property,\n            {\n                units: state.propertyUnits.filter(({ property_id }) => property_id === property.id).length,\n                floorArea: state.propertyUnits.reduce((total, currentValue) => {\n                    return total + parseFloat(currentValue.sqm) || 0\n                }, 0)\n            }));\n    const totalPropertiesFloorArea = propertiesAssignedToUser\n        .reduce((total, currentValue) => total + parseFloat(currentValue.floorArea) || 0, 0)\n    //map ids of properties assigned to user to enable for a quick search\n    const idsOfPropertiesAssignedToUser = propertiesAssignedToUser.map(({ id }) => id)\n    //get all active leases assigned to user's properties\n    const totalActiveLeases = state.leases\n        .filter(({ property_id }) => idsOfPropertiesAssignedToUser.includes(property_id))\n        .filter(({ terminated }) => terminated !== true);\n    return {\n        totalPortfolioFloorArea: totalPropertiesFloorArea,\n        managementFees: state.managementFees\n            .filter(({ user_id }) => user_id === ownProps.match.params.userId),\n        properties: propertiesAssignedToUser,\n        activeLeasesNumber: totalActiveLeases.length,\n        totalAssetsRentValue: totalActiveLeases\n            .reduce((total, currentValue) => total + parseFloat(currentValue.rent_amount) || 0, 0),\n        propertyUnits: state.propertyUnits\n            .filter(({ property_id }) => idsOfPropertiesAssignedToUser.includes(property_id)),\n        userDetails: state.users.find(({ id }) => id === ownProps.match.params.userId) || {}\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nUserDetailsPage = connect(mapStateToProps, mapDispatchToProps)(UserDetailsPage);\n\nexport default withRouter(UserDetailsPage);\n"],"sourceRoot":""}