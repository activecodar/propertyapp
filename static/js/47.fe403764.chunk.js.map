{"version":3,"sources":["components/CustomCircularProgress.js","../node_modules/@material-ui/icons/Save.js","../node_modules/@material-ui/icons/Cancel.js","components/payments/PaymentInputForm.js","Routes/PaymentPage.js"],"names":["useStyles","makeStyles","theme","root","display","alignItems","height","width","wrapper","margin","spacing","position","buttonProgress","color","green","top","left","marginTop","marginLeft","CustomCircularProgress","open","dialogTitle","classes","maxWidth","aria-labelledby","container","direction","item","lg","className","size","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","defaultDate","format","startOfToday","PaymentSchema","Yup","shape","tenant_id","trim","required","memo","max","charge_balance","typeError","payment_amount","positive","payment_date","withRouter","props","commonStyles","history","chargeToAddPayment","tenantLease","handleItemSubmit","paymentValues","charge_id","id","unit_id","charge_amount","balance","charge_label","charge_type","property_id","initialValues","enableReinitialize","validationSchema","onSubmit","values","a","resetForm","setStatus","chargePayment","payment_label","payment_type","securityDepositAfterCharge","parseFloat","security_deposit","leaseToEdit","security_deposit_charge_id","payed","goBack","sent","msg","status","handleSubmit","touched","errors","handleChange","handleBlur","isSubmitting","form","method","Grid","CustomSnackbar","variant","message","Typography","TextField","fullWidth","type","name","label","onChange","onBlur","InputLabelProps","shrink","error","helperText","multiline","rows","justify","buttonBox","Button","startIcon","onClick","disableElevation","disabled","PaymentPage","pageTitle","location","leases","contactWithCharge","unitWithCharge","queryString","parse","search","charge_deposit","filter","terminated","find","ref","first_name","last_name","key","PageHeading","text","connect","state","ownProps","transactionsCharges","match","params","chargeId","propertyUnits","totalPaymentsToCharge","transactions","payment","reduce","total","currentValue","payed_amount","contacts","contact","dispatch","url","handleItemFormSubmit"],"mappings":"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","file":"static/js/47.fe403764.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 80,\n        width: 120,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n        height: 50,\n        width: 50,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CustomCircularProgress({ open, dialogTitle }) {\n    const classes = useStyles();\n    \n    return (\n        <Dialog maxWidth={\"md\"} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <Grid container alignItems=\"center\" direction=\"column\">\n                    <Grid item lg>\n                        <Typography>{dialogTitle || \"Saving...\"}</Typography>\n                    </Grid>\n                    <Grid item lg>\n                        <div className={classes.root}>\n                            <div className={classes.wrapper}>\n                                {open && <CircularProgress size={50} className={classes.buttonProgress} />}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n        </Dialog>\n\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CustomSnackbar from '../CustomSnackbar'\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport * as Yup from \"yup\";\nimport { withRouter } from \"react-router-dom\";\nimport { format, startOfToday } from \"date-fns\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\n\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd')\nconst PaymentSchema = Yup.object().shape({\n\ttenant_id: Yup.string().trim().required('Tenant is required'),\n\tmemo: Yup.string().trim().max(50, \"Memo details should be less than 50 characters\").default(''),\n\tcharge_balance: Yup.number().typeError('Charge Balance must be a number').required(\"Charge balance is required\"),\n\tpayment_amount: Yup.number().typeError('Amount must be a number')\n\t\t.positive(\"Amount must be a positive number\")\n\t\t.max(Yup.ref('charge_balance'), 'Payment Amount Cannot be greater than remaining balance')\n\t\t.required(\"Payment amount is required\"),\n\tpayment_date: Yup.date().required('Payment Date is Required'),\n});\n\n\nlet PaymentInputForm = (props) => {\n\tconst classes = commonStyles();\n\tconst { history, chargeToAddPayment, tenantLease, handleItemSubmit } = props\n\tconst paymentValues = {\n\t\tcharge_id: chargeToAddPayment.id,\n\t\tunit_id: chargeToAddPayment.unit_id,\n\t\tcharge_amount: chargeToAddPayment.charge_amount || 0,\n\t\tcharge_balance: chargeToAddPayment.balance || 0,\n\t\tcharge_label: chargeToAddPayment.charge_label || 0,\n\t\tcharge_type: chargeToAddPayment.charge_type || 0,\n\t\tpayment_amount: \"\",\n\t\tmemo: \"\",\n\t\tpayment_date: defaultDate,\n\t\ttenant_id: chargeToAddPayment.tenant_id,\n\t\tproperty_id: chargeToAddPayment.property_id,\n\t\ttenantLease: tenantLease,\n\t};\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={paymentValues}\n\t\t\tenableReinitialize validationSchema={PaymentSchema}\n\t\t\tonSubmit={async (values, { resetForm, setStatus }) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst chargePayment = {\n\t\t\t\t\t\tcharge_id: values.charge_id,\n\t\t\t\t\t\tpayment_amount: values.payment_amount,\n\t\t\t\t\t\tmemo: values.memo,\n\t\t\t\t\t\tpayment_date: values.payment_date,\n\t\t\t\t\t\ttenant_id: values.tenant_id,\n\t\t\t\t\t\tunit_id: values.unit_id,\n\t\t\t\t\t\tproperty_id: values.property_id,\n\t\t\t\t\t\tpayment_label: values.charge_label,\n\t\t\t\t\t\tpayment_type: values.charge_type,\n\t\t\t\t\t};\n\t\t\t\t\tif (values.tenantLease) {\n\t\t\t\t\t\t// charge the payment on the security deposit\n\t\t\t\t\t\tconst securityDepositAfterCharge = parseFloat(values.tenantLease.security_deposit) - parseFloat(values.payment_amount)\n\t\t\t\t\t\tconst leaseToEdit = {\n\t\t\t\t\t\t\tid: values.tenantLease.id,\n\t\t\t\t\t\t\tsecurity_deposit: securityDepositAfterCharge\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait handleItemSubmit(leaseToEdit, 'leases')\n\t\t\t\t\t\tchargePayment.security_deposit_charge_id = values.tenantLease.id\n\t\t\t\t\t}\n\t\t\t\t\tawait handleItemSubmit(chargePayment, 'charge-payments')\n\t\t\t\t\tawait handleItemSubmit({ id: values.charge_id, payed: true }, 'transactions-charges')\n\t\t\t\t\tresetForm({});\n\t\t\t\t\thistory.goBack()\n\t\t\t\t\tsetStatus({ sent: true, msg: \"Details saved successfully!\" })\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetStatus({ sent: false, msg: `Error! ${error}.` })\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{({\n\t\t\t\tvalues,\n\t\t\t\tstatus,\n\t\t\t\thandleSubmit,\n\t\t\t\ttouched,\n\t\t\t\terrors,\n\t\t\t\thandleChange,\n\t\t\t\thandleBlur,\n\t\t\t\tisSubmitting,\n\t\t\t}) => (\n\t\t\t\t<form\n\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\tid=\"paymentInputForm\"\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t>\n\t\t\t\t\t<Grid container spacing={2} direction=\"column\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus && status.msg && (\n\t\t\t\t\t\t\t\t<CustomSnackbar\n\t\t\t\t\t\t\t\t\tvariant={status.sent ? \"success\" : \"error\"}\n\t\t\t\t\t\t\t\t\tmessage={status.msg}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisSubmitting && (<CustomCircularProgress open={true} />)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\"> Charge Details : {values.charge_label}</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Total Charge Amount : {values.charge_amount}</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Charge Balance: {values.charge_balance}</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tid=\"payment_date\"\n\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\tname=\"payment_date\"\n\t\t\t\t\t\t\t\tlabel=\"Payment Date\"\n\t\t\t\t\t\t\t\tvalue={values.payment_date}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\t\t\terror={errors.payment_date && touched.payment_date}\n\t\t\t\t\t\t\t\thelperText={touched.payment_date && errors.payment_date}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tname=\"payment_amount\"\n\t\t\t\t\t\t\t\tid=\"payment_amount\"\n\t\t\t\t\t\t\t\tlabel=\"Payment Amount\"\n\t\t\t\t\t\t\t\tvalue={values.payment_amount}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\terror={errors.payment_amount && touched.payment_amount}\n\t\t\t\t\t\t\t\thelperText={touched.payment_amount && errors.payment_amount}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tname=\"memo\"\n\t\t\t\t\t\t\t\tid=\"memo\"\n\t\t\t\t\t\t\t\tlabel=\"Payment Details/Memo\"\n\t\t\t\t\t\t\t\tvalue={values.memo}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\terror={errors.memo && touched.memo}\n\t\t\t\t\t\t\t\thelperText={\"Include details for the payments here (max 50)\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tclassName={classes.buttonBox}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\tstartIcon={<CancelIcon />}\n\t\t\t\t\t\t\t\t\tonClick={() => history.goBack()}\n\t\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\t\tform=\"paymentInputForm\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSave Payment\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t)\n\t\t\t}\n\t\t</Formik >\n\t);\n};\n\n\nexport default withRouter(PaymentInputForm);","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport { handleItemFormSubmit } from '../actions/actions'\nimport PaymentInputForm from \"../components/payments/PaymentInputForm\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from 'query-string';\n\nlet PaymentPage = ({ history, location, chargeToAddPayment, leases, contactWithCharge, unitWithCharge, handleItemSubmit }) => {\n\t// Get the action to complete.\n\tlet pageTitle;\n\tlet tenantLease;\n\t//get params\n\tconst params = queryString.parse(location.search)\n\tif (params.charge_deposit) {\n\t\ttenantLease = leases.filter(({ terminated }) => terminated !== true)\n\t\t\t.find(({ unit_id }) => unit_id === chargeToAddPayment.unit_id) || {}\n\t\tpageTitle = `Charge on Deposit for - ${unitWithCharge.ref} • ${contactWithCharge.first_name} ${contactWithCharge.last_name}`;\n\t} else {\n\t\tpageTitle = `Receive Payment for - ${unitWithCharge.ref} • ${contactWithCharge.first_name} ${contactWithCharge.last_name}`;\n\n\t}\n\treturn (\n\t\t<Layout pageTitle=\"Payment Details\">\n\t\t\t<Grid container justify=\"center\" direction=\"column\">\n\t\t\t\t<Grid item key={2}>\n\t\t\t\t\t<PageHeading text={pageTitle} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\titem\n\t\t\t\t\tkey={3}\n\t\t\t\t>\n\t\t\t\t\t<PaymentInputForm\n\t\t\t\t\t\tchargeToAddPayment={chargeToAddPayment}\n\t\t\t\t\t\ttenantLease={tenantLease}\n\t\t\t\t\t\thandleItemSubmit={handleItemSubmit}\n\t\t\t\t\t\thistory={history}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Layout>\n\t);\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst chargeToAddPayment = state.transactionsCharges.find(({ id }) => id === ownProps.match.params.chargeId) || {};\n\tconst unitWithCharge = state.propertyUnits.find(({ id }) => id === chargeToAddPayment.unit_id) || {};\n\tconst chargePayments = state.transactions.filter((payment) => payment.charge_id === chargeToAddPayment.id)\n\tconst totalPaymentsToCharge = chargePayments.reduce((total, currentValue) =>\n\t\ttotal + parseFloat(currentValue.payment_amount) || 0, 0);\n\tchargeToAddPayment.payed_amount = totalPaymentsToCharge\n\tchargeToAddPayment.balance = parseFloat(chargeToAddPayment.charge_amount) - totalPaymentsToCharge\n\tconst contactWithCharge = state.contacts.find((contact) => contact.id === chargeToAddPayment.tenant_id) || {}\n\n\treturn {\n\t\tunitWithCharge: unitWithCharge,\n\t\tcontactWithCharge: contactWithCharge,\n\t\tchargeToAddPayment: chargeToAddPayment,\n\t\tleases: state.leases,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\thandleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n\t}\n};\n\nPaymentPage = connect(mapStateToProps, mapDispatchToProps)(PaymentPage);\n\nexport default withRouter(PaymentPage);\n"],"sourceRoot":""}