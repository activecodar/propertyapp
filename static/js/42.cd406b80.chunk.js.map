{"version":3,"sources":["assets/commonAssets.js","components/CustomCircularProgress.js","../node_modules/@material-ui/icons/Delete.js","components/ImageCropper.js","components/property/PropertyInputForm.js","Routes/PropertyPage.js"],"names":["monthsInYear","eachMonthOfInterval","start","startOfYear","startOfToday","end","endOfYear","TITLES_LIST","GENDERS_LIST","EXPENSES_CATEGORIES","UNIT_TYPES","LEASE_OPTIONS","METER_TYPES","PAYMENT_FREQUENCY_OPTIONS","getContactTitles","getGendersList","getExpensesCategories","getUnitTypes","getPropertyBaths","baths","i","push","concat","getPropertyBeds","beds","getMeterTypes","getLeaseOptions","getPaymentOptions","getTransactionsFilterOptions","id","text","getLastMonthFromToDates","startOfMonth","subMonths","endOfMonth","getLastYearFromToDates","subYears","getYearToDateFromToDates","getCurrentMonthFromToDates","getLastThreeMonthsFromToDates","getMonthsInYear","currencyFormatter","Intl","NumberFormat","undefined","style","currency","useStyles","makeStyles","theme","root","display","alignItems","height","width","wrapper","margin","spacing","position","buttonProgress","color","green","top","left","marginTop","marginLeft","CustomCircularProgress","open","dialogTitle","classes","maxWidth","aria-labelledby","container","direction","item","lg","className","size","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","ImageCropper","selectedFile","setCroppedImageData","cropHeight","cropWidth","useState","cropper","setCropper","image","setImage","fileToLoad","reader","FileReader","onloadend","result","readAsDataURL","handleClose","onClose","initialAspectRatio","src","viewMode","guides","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","onInitialized","instance","cropBoxResizable","data","justify","variant","onClick","disableElevation","croppedImageData","getCroppedCanvas","toDataURL","getCropData","PropertySchema","Yup","shape","ref","trim","required","assigned_to","address","postal_code","city","property_units","of","unit_type","sqm","typeError","integer","min","PROPERTY_BEDS","PROPERTY_BATHS","PropertyInputForm","props","commonStyles","history","users","handleItemSubmit","propertyToEdit","propertyValues","owner","property_image_url","UnitInputComponent","remove","replace","form","errors","touched","values","handleChange","handleBlur","propertyUnitErrors","propertyUnitTouched","layout","map","property_unit","propertyUnitIndex","indexInErrors","indexInTouched","Grid","key","xs","TextField","label","type","name","onChange","onBlur","error","helperText","fullWidth","defaultValue","select","unitTypeIndex","MenuItem","property_bed","bedNumberIndex","property_bath","bathNumberIndex","file_to_load_url","croppedImage","assign","Box","event","currentTarget","files","accept","fileInputDisplayNone","htmlFor","IconButton","aria-label","component","Button","initialValues","enableReinitialize","validationSchema","onSubmit","a","resetForm","setStatus","property","property_image","deleteUploadedFileByUrl","uploadFilesToFirebase","fileDownloadUrl","propertyId","property_id","grace_period","late_fees_charges_activated","automatically_end_agreement_on_move_out_date","management_fee_type","management_fee_flat_fee","forEach","fileUploadPath","unit_image_url","propertyUnitToSave","property_ref","goBack","sent","msg","status","handleSubmit","isSubmitting","setFieldValue","method","CustomSnackbar","message","Typography","user","index","first_name","last_name","paragraph","buttonBox","startIcon","disabled","connect","state","properties","propertiesMediaFiles","mediaFiles","currentUser","dispatch","handleItemDelete","itemId","url","handleDelete","handleItemFormSubmit","withRouter","PropertyPage","pageTitle","PageHeading","ownProps","find","match","params"],"mappings":"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","file":"static/js/42.cd406b80.chunk.js","sourcesContent":["import { endOfMonth, endOfYear, startOfToday, eachMonthOfInterval, startOfMonth, startOfYear, subMonths, subYears } from \"date-fns\";\n\nconst monthsInYear = eachMonthOfInterval({\n\tstart: startOfYear(startOfToday()),\n\tend: endOfYear(startOfToday()),\n})\n//general contact titles\nconst TITLES_LIST = [\"Mr\", \"Prof\", \"Hon\", \"Sir\", \"Mrs\", \"Miss\", \"Dr\", \"Madam\", \"Other\"]\nconst GENDERS_LIST = [\"Male\", \"Female\", \"Unspecified\"];\nconst EXPENSES_CATEGORIES = [\n\t'Security Deposit Refund',\n\t'Water Deposit Refund',\n\t'Management Fees',\n\t'Utilities',\n\t'Taxes',\n\t'Mortgage',\n\t'Office',\n\t'Maintenance & Cleaning',\n\t'Advertising',\n\t'Insurance',\n\t'Legal & Other Professional Fees',\n\t'Auto & Travel',\n\t'Supplies',\n\t'Other Refund',\n\t'Repairs',\n\t'Other'\n]\nconst PROPRERTY_TYPES = [\n\t\"Residential\",\n\t\"Condo/Townhouse\",\n\t\"Multi-family\",\n\t\"Single-family\",\n]\nconst UNIT_TYPES = [\n\t\"Bed Sitter\",\n\t\"One Bedroom\",\n\t\"Two Bedroom\",\n\t\"Single Room\",\n\t\"Double Room\",\n\t\"Shop\",\n\t\"Other\",\n];\nconst LEASE_OPTIONS = [\n\t\"Fixed\",\n\t\"Fixed w/rollover\",\n];\nconst METER_TYPES = [\"Electric\", \"Sewer\", \"Water\"];\nconst FREQUENCY_OPTIONS = [\"Per Day\", \"Week\", \"Month\", \"Quarter\", \"Half Year\", \"Year\"];\nconst PAYMENT_FREQUENCY_OPTIONS = [\"Daily\", \"Weekly\", \"Monthly\", \"Quarterly\", \"Half-Yearly\", \"Yearly\"];\n\n//functions to get the above values\nexport function getContactTitles() {\n\treturn TITLES_LIST;\n}\n\nexport function getGendersList() {\n\treturn GENDERS_LIST;\n}\n\nexport function getExpensesCategories() {\n\treturn EXPENSES_CATEGORIES;\n}\n\n//general property types\nexport function getPropertyTypes() {\n\treturn PROPRERTY_TYPES;\n}\n\n//general unit types\nexport function getUnitTypes() {\n\treturn UNIT_TYPES;\n}\n\nexport function getPropertyBaths() {\n\tconst baths = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbaths.push(i);\n\t}\n\treturn baths.concat(\"5+\");\n}\n\nexport function getPropertyBeds() {\n\tconst beds = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbeds.push(i);\n\t}\n\treturn beds;\n}\n\nexport function getFrequencyOptions() {\n\treturn FREQUENCY_OPTIONS;\n}\n\nexport function getMeterTypes() {\n\treturn METER_TYPES;\n}\n\nexport function getLeaseOptions() {\n\treturn LEASE_OPTIONS;\n}\n\nexport function getPaymentOptions() {\n\treturn PAYMENT_FREQUENCY_OPTIONS;\n}\n\nexport function getTransactionsFilterOptions() {\n\treturn [\n\t\t{ id: 'month-to-date', text: 'Month To Date' }, { id: 'last-month', text: 'Last Month' },\n\t\t{ id: '3-months-to-date', text: '3 Months To Date' }, { id: 'year-to-date', text: 'Year To Date' },\n\t\t{ id: 'last-year', text: 'Last Year' },];\n}\n\nexport function getLastMonthFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 1)), endOfMonth(subMonths(startOfToday(), 1))]\n}\n\nexport function getLastYearFromToDates() {\n\treturn [startOfYear(subYears(startOfToday(), 1)), endOfYear(subYears(startOfToday(), 1))]\n}\n\nexport function getYearToDateFromToDates() {\n\treturn [startOfYear(startOfToday()), startOfToday()]\n}\n\nexport function getCurrentMonthFromToDates() {\n\treturn [startOfMonth(startOfToday()), endOfMonth(startOfToday())]\n}\n\nexport function getLastThreeMonthsFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 2)), endOfMonth(startOfToday())]\n}\n\nexport function getMonthsInYear() {\n\treturn monthsInYear\n}\n\n// Create our number formatter.\nexport const currencyFormatter = new Intl.NumberFormat(undefined, {\n\tstyle: 'decimal',\n\tcurrency: 'KES',\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 80,\n        width: 120,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n        height: 50,\n        width: 50,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CustomCircularProgress({ open, dialogTitle }) {\n    const classes = useStyles();\n    \n    return (\n        <Dialog maxWidth={\"md\"} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <Grid container alignItems=\"center\" direction=\"column\">\n                    <Grid item lg>\n                        <Typography>{dialogTitle || \"Saving...\"}</Typography>\n                    </Grid>\n                    <Grid item lg>\n                        <div className={classes.root}>\n                            <div className={classes.wrapper}>\n                                {open && <CircularProgress size={50} className={classes.buttonProgress} />}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n        </Dialog>\n\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import React, { useState } from 'react'\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nimport PropTypes from 'prop-types';\n\nconst ImageCropper = ({ open, selectedFile, setCroppedImageData, cropHeight, cropWidth }) => {\n\n    const [cropper, setCropper] = useState()\n    const [image, setImage] = useState()\n\n    const fileToLoad = selectedFile;\n\n    const reader = new FileReader();\n    reader.onloadend = () => {\n        setImage(reader.result)\n    };\n    reader.readAsDataURL(fileToLoad);\n\n    const getCropData = () => {\n        if (typeof cropper !== \"undefined\") {\n            const croppedImageData = cropper.getCroppedCanvas().toDataURL()\n            fileToLoad.data = croppedImageData\n            setCroppedImageData(fileToLoad)\n\n        }\n    };\n\n    const handleClose = () => {\n        setCroppedImageData(\"\")\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogContent>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Cropper\n                            style={{ height: \"100%\", width: \"100%\" }}\n                            initialAspectRatio={cropWidth === cropHeight ? 1 : (16 / 9)}\n                            src={image}\n                            viewMode={0.5}\n                            guides={true}\n                            minCropBoxHeight={cropHeight}\n                            minCropBoxWidth={cropWidth}\n                            background={false}\n                            responsive={true}\n                            autoCropArea={0.5}\n                            checkOrientation={false}\n                            onInitialized={(instance) => {\n                                setCropper(instance);\n                            }}\n                            cropBoxResizable={false}\n                            data={{height: cropHeight, width: cropWidth}}\n                        />\n                    </Grid>\n                    <Grid item container justify=\"center\" direction=\"row\" spacing={2}>\n                        <Grid item>\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                onClick={() => handleClose()}\n                                disableElevation\n                            >\n                                Cancel\n\t\t\t\t\t        </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                onClick={() => getCropData()}\n                            >\n                                Crop Image\n\t\t\t\t\t        </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n        </Dialog >\n    )\n}\n\nImageCropper.propTypes = {\n    cropHeight: PropTypes.number.isRequired,\n    cropWidth: PropTypes.number.isRequired,\n}\n\nexport default ImageCropper;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Box from \"@material-ui/core/Box\";\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport CustomCircularProgress from \"../CustomCircularProgress\";\nimport CustomSnackbar from '../CustomSnackbar'\nimport { connect } from \"react-redux\";\nimport { Formik, FieldArray } from \"formik\";\nimport {\n\thandleItemFormSubmit,\n\thandleDelete, uploadFilesToFirebase, deleteUploadedFileByUrl\n} from \"../../actions/actions\";\nimport { commonStyles } from \"../../components/commonStyles\";\nimport ImageCropper from '../ImageCropper';\nimport { withRouter } from \"react-router-dom\";\nimport {\n\tgetPropertyBeds,\n\tgetPropertyBaths, getUnitTypes\n} from \"../../assets/commonAssets.js\";\nimport * as Yup from \"yup\";\n\nconst PropertySchema = Yup.object().shape({\n\tref: Yup.string().trim().required(\"Property Name/Ref/Number is Required\"),\n\tassigned_to: Yup.string().trim().required(\"Who will be the primary manager for this property\"),\n\taddress: Yup.string().trim().required('Property Address is Required'),\n\tpostal_code: Yup.string().trim().default(''),\n\tcity: Yup.string().default(''),\n\tproperty_units: Yup.array().of(Yup.object().shape({\n\t\tunit_type: Yup.string().trim().required(\"Unit Type is required\"),\n\t\tbeds: Yup.string().trim().required(\"Beds is required\").default(''),\n\t\tref: Yup.string().trim().required(\"Unit Ref/Number is required\"),\n\t\tbaths: Yup.string().trim().default(''),\n\t\tsqm: Yup.number().typeError('Square Footage must be a number').integer().min(0),\n\t}))\n});\n\nconst UNIT_TYPES = getUnitTypes();\nconst PROPERTY_BEDS = getPropertyBeds();\nconst PROPERTY_BATHS = getPropertyBaths();\n\nlet PropertyInputForm = (props) => {\n\tconst classes = commonStyles();\n\tconst { history, users, handleItemSubmit } = props\n\tlet propertyToEdit = props.propertyToEdit || {};\n\tconst propertyValues = {\n\t\tid: propertyToEdit.id,\n\t\tassigned_to: propertyToEdit.assigned_to || \"\",\n\t\tcity: propertyToEdit.city || \"\",\n\t\tpostal_code: propertyToEdit.postal_code || \"\",\n\t\taddress: propertyToEdit.address || \"\",\n\t\tref: propertyToEdit.ref || \"\",\n\t\tproperty_units: [],\n\t\towner: propertyToEdit.owner || \"\",\n\t\tproperty_image_url: propertyToEdit.property_image_url || \"\",\n\t};\n\tconst UnitInputComponent = ({ remove, push, replace, form }) => {\n\t\tconst { errors, touched, values, handleChange, handleBlur } = form\n\t\tconst propertyUnitErrors = errors['property_units']\n\t\tconst propertyUnitTouched = touched['property_units']\n\t\tconst layout = values.property_units.map((property_unit, propertyUnitIndex) => {\n\t\t\tconst indexInErrors = propertyUnitErrors && propertyUnitErrors[propertyUnitIndex];\n\t\t\tconst indexInTouched = propertyUnitTouched && propertyUnitTouched[propertyUnitIndex];\n\t\t\treturn (\n\t\t\t\t<Grid key={`property_unit-${propertyUnitIndex}`} container item direction=\"row\" alignItems=\"center\" spacing={2}>\n\t\t\t\t\t<Grid xs item key={`property_units[${propertyUnitIndex}].ref`}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Unit Number/Ref\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={property_unit.ref}\n\t\t\t\t\t\t\tname={`property_units.${propertyUnitIndex}.ref`}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={(indexInErrors && 'ref' in indexInErrors) && (indexInTouched && indexInTouched.ref)}\n\t\t\t\t\t\t\thelperText={(indexInTouched && indexInTouched.ref) && (indexInErrors && indexInErrors.ref)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid xs item key={`property_units[${propertyUnitIndex}].unit_type`}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tlabel=\"Unit Type\"\n\t\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\tvalue={property_unit.unit_type}\n\t\t\t\t\t\t\tname={`property_units.${propertyUnitIndex}.unit_type`}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={(indexInErrors && 'unit_type' in indexInErrors) && (indexInTouched && indexInTouched.unit_type)}\n\t\t\t\t\t\t\thelperText={(indexInTouched && indexInTouched.unit_type) && (indexInErrors && indexInErrors.unit_type)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{UNIT_TYPES.map((unit_type, unitTypeIndex) => (\n\t\t\t\t\t\t\t\t<MenuItem key={unitTypeIndex} value={unit_type}>\n\t\t\t\t\t\t\t\t\t{unit_type}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TextField>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid xs item key={`property_units[${propertyUnitIndex}].beds`}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tlabel=\"Beds/Rooms\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\tvalue={property_unit.beds}\n\t\t\t\t\t\t\tname={`property_units.${propertyUnitIndex}.beds`}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={(indexInErrors && 'beds' in indexInErrors) && (indexInTouched && indexInTouched.beds)}\n\t\t\t\t\t\t\thelperText={(indexInTouched && indexInTouched.beds) && (indexInErrors && indexInErrors.beds)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{PROPERTY_BEDS.map((property_bed, bedNumberIndex) => (\n\t\t\t\t\t\t\t\t<MenuItem key={bedNumberIndex} value={property_bed}>\n\t\t\t\t\t\t\t\t\t{property_bed}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TextField>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid xs item key={`property_units[${propertyUnitIndex}].baths`}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tlabel=\"Baths\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\tvalue={property_unit.baths}\n\t\t\t\t\t\t\tname={`property_units.${propertyUnitIndex}.baths`}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={(indexInErrors && 'baths' in indexInErrors) && (indexInTouched && indexInTouched.baths)}\n\t\t\t\t\t\t\thelperText={(indexInTouched && indexInTouched.baths) && (indexInErrors && indexInErrors.baths)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{PROPERTY_BATHS.map((property_bath, bathNumberIndex) => (\n\t\t\t\t\t\t\t\t<MenuItem key={bathNumberIndex} value={property_bath}>\n\t\t\t\t\t\t\t\t\t{property_bath}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TextField>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item key={`property_units[${propertyUnitIndex}].image`}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproperty_unit.file_to_load_url &&\n\t\t\t\t\t\t\t<ImageCropper open={true} selectedFile={property_unit.file_to_load_url}\n\t\t\t\t\t\t\t\tsetCroppedImageData={(croppedImage) => {\n\t\t\t\t\t\t\t\t\treplace(propertyUnitIndex, Object.assign({}, property_unit, { file_to_load_url: '', image: croppedImage }));\n\t\t\t\t\t\t\t\t}} cropHeight={200} cropWidth={300} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<input onChange={(event) => {\n\t\t\t\t\t\t\t\tconst selectedFile = event.currentTarget.files[0]\n\t\t\t\t\t\t\t\t//remove the object then push a copy of it with added image object\n\t\t\t\t\t\t\t\treplace(propertyUnitIndex, Object.assign({}, property_unit, { file_to_load_url: selectedFile }));\n\t\t\t\t\t\t\t}} accept=\"image/*\" className={classes.fileInputDisplayNone} id={`icon-button-file-${propertyUnitIndex}`} type=\"file\" />\n\t\t\t\t\t\t\t<label htmlFor={`icon-button-file-${propertyUnitIndex}`}>\n\t\t\t\t\t\t\t\t<IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n\t\t\t\t\t\t\t\t\t<PhotoCamera />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Box>{property_unit.image ? property_unit.image.name : \"No Image\"}</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid xs item key={`property_units[${propertyUnitIndex}].sqm`}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Sqm\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={property_unit.sqm}\n\t\t\t\t\t\t\tname={`property_units.${propertyUnitIndex}.sqm`}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={(indexInErrors && 'sqm' in indexInErrors) && (indexInTouched && indexInTouched.sqm)}\n\t\t\t\t\t\t\thelperText={(indexInTouched && indexInTouched.sqm) && (indexInErrors && indexInErrors.sqm)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item key={`property_units[${propertyUnitIndex}].delete`}>\n\t\t\t\t\t\t<IconButton aria-label=\"delete\"\n\t\t\t\t\t\t\tonClick={() => { remove(propertyUnitIndex) }}\n\t\t\t\t\t\t\tsize=\"medium\">\n\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>)\n\n\t\t})\n\t\treturn <Grid item container spacing={4} direction=\"column\">\n\t\t\t{layout}\n\t\t\t<Grid item>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tonClick={() => push({ ref: '', unit_type: '', beds: '', baths: '', sqm: '', image: '' })}\n\t\t\t\t\tdisableElevation>\n\t\t\t\t\tAdd Unit\n\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t}\n\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={propertyValues}\n\t\t\tenableReinitialize validationSchema={PropertySchema}\n\t\t\tonSubmit={async (values, { resetForm, setStatus }) => {\n\t\t\t\ttry {\n\t\t\t\t\tlet property = {\n\t\t\t\t\t\tid: values.id,\n\t\t\t\t\t\tassigned_to: values.assigned_to,\n\t\t\t\t\t\tcity: values.city,\n\t\t\t\t\t\tpostal_code: values.postal_code,\n\t\t\t\t\t\taddress: values.address,\n\t\t\t\t\t\tref: values.ref,\n\t\t\t\t\t\towner: values.owner,\n\t\t\t\t\t};\n\t\t\t\t\t//first upload the image to firebase\n\t\t\t\t\tif (values.property_image && values.property_image.data) {\n\t\t\t\t\t\t//if the user had previously uploaded an image\n\t\t\t\t\t\t// then delete it here and replace the url with new uploaded image\n\t\t\t\t\t\tif (values.property_image_url) {\n\t\t\t\t\t\t\t//delete file from storage\n\t\t\t\t\t\t\tawait deleteUploadedFileByUrl(values.property_image_url);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//upload the first and only image in the contact images array\n\t\t\t\t\t\tvar fileDownloadUrl = await uploadFilesToFirebase(values.property_image)\n\t\t\t\t\t\tproperty.property_image_url = fileDownloadUrl;\n\t\t\t\t\t}\n\t\t\t\t\tconst propertyId = await handleItemSubmit(property, \"properties\")\n\t\t\t\t\t//create some property settings if first time property being created\n\t\t\t\t\tif (!values.id) {\n\t\t\t\t\t\tawait handleItemSubmit(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tproperty_id: propertyId, grace_period: 0, late_fees_charges_activated: false,\n\t\t\t\t\t\t\t\tautomatically_end_agreement_on_move_out_date: true, management_fee_type: \"flat_fee\",\n\t\t\t\t\t\t\t\tmanagement_fee_flat_fee: 0\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"property-settings\")\n\t\t\t\t\t}\n\t\t\t\t\tvalues.property_units.forEach(async (property_unit) => {\n\t\t\t\t\t\t//check if the unit has an image to upload\n\t\t\t\t\t\tif (property_unit.image && property_unit.image.data) {\n\t\t\t\t\t\t\t//upload the file to the database and assign the resulting file \n\t\t\t\t\t\t\t// upload path to property_unit\n\t\t\t\t\t\t\tconst fileUploadPath = await uploadFilesToFirebase(property_unit.image)\n\t\t\t\t\t\t\tproperty_unit.unit_image_url = fileUploadPath\n\t\t\t\t\t\t\tdelete property_unit.image\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst propertyUnitToSave = Object.assign({}, property_unit, {\n\t\t\t\t\t\t\tproperty_id: propertyId,\n\t\t\t\t\t\t\tproperty_ref: values.ref,\n\t\t\t\t\t\t\tassigned_to: values.assigned_to\n\t\t\t\t\t\t})\n\t\t\t\t\t\tawait handleItemSubmit(propertyUnitToSave, 'property_units')\n\t\t\t\t\t})\n\t\t\t\t\tresetForm({});\n\t\t\t\t\tif (values.id) {\n\t\t\t\t\t\thistory.goBack()\n\t\t\t\t\t}\n\t\t\t\t\tsetStatus({ sent: true, msg: \"Details saved successfully!\" })\n\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetStatus({ sent: false, msg: `Error! ${error}.` })\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{({\n\t\t\t\tvalues,\n\t\t\t\tstatus,\n\t\t\t\thandleSubmit,\n\t\t\t\ttouched,\n\t\t\t\terrors,\n\t\t\t\thandleChange,\n\t\t\t\thandleBlur,\n\t\t\t\tisSubmitting,\n\t\t\t\tsetFieldValue\n\t\t\t}) => (\n\t\t\t\t<form\n\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\tid=\"propertyInputForm\"\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t>\n\t\t\t\t\t<Grid container spacing={2} direction=\"column\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus && status.msg && (\n\t\t\t\t\t\t\t\t<CustomSnackbar\n\t\t\t\t\t\t\t\t\tvariant={status.sent ? \"success\" : \"error\"}\n\t\t\t\t\t\t\t\t\tmessage={status.msg}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisSubmitting && (<CustomCircularProgress open={true} />)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"ref\"\n\t\t\t\t\t\t\t\tlabel=\"Property Name/Ref\"\n\t\t\t\t\t\t\t\tid=\"ref\"\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={values.ref}\n\t\t\t\t\t\t\t\terror={errors.ref && touched.ref}\n\t\t\t\t\t\t\t\thelperText={touched.ref && errors.ref}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Street Address</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tlabel=\"Address\"\n\t\t\t\t\t\t\t\tid=\"address\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"address\"\n\t\t\t\t\t\t\t\tvalue={values.address}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\terror={errors.address && touched.address}\n\t\t\t\t\t\t\t\thelperText={touched.address && errors.address}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tid=\"city\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"city\"\n\t\t\t\t\t\t\t\tlabel=\"City\"\n\t\t\t\t\t\t\t\tvalue={values.city}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"Postal Code\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tid=\"postal_code\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"postal_code\"\n\t\t\t\t\t\t\t\tvalue={values.postal_code}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\terror={errors.postal_code && touched.postal_code}\n\t\t\t\t\t\t\t\thelperText={touched.postal_code && errors.postal_code}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tid=\"owner\"\n\t\t\t\t\t\t\t\tname=\"owner\"\n\t\t\t\t\t\t\t\tlabel=\"Property Owner\"\n\t\t\t\t\t\t\t\tvalue={values.owner}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\thelperText=\"Who is the Property Owner\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{users.map((user, index) => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={user.id}>\n\t\t\t\t\t\t\t\t\t\t{user.first_name} {user.last_name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tname=\"assigned_to\"\n\t\t\t\t\t\t\t\tid=\"assigned_to\"\n\t\t\t\t\t\t\t\tlabel=\"Landlord\"\n\t\t\t\t\t\t\t\tvalue={values.assigned_to}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\terror={errors.assigned_to && touched.assigned_to}\n\t\t\t\t\t\t\t\thelperText={touched.assigned_to && errors.assigned_to}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{users.map((user, index) => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={user.id}>\n\t\t\t\t\t\t\t\t\t\t{user.first_name} {user.last_name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\t\t\tspacing={4}\n\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid key={1} item>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalues.file_to_load_url &&\n\t\t\t\t\t\t\t\t\t<ImageCropper open={true} selectedFile={values.file_to_load_url}\n\t\t\t\t\t\t\t\t\t\tsetCroppedImageData={(croppedImage) => {\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('file_to_load_url', '');\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('property_image', croppedImage);\n\t\t\t\t\t\t\t\t\t\t}} cropHeight={200} cropWidth={300} />\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Box>{values.property_image ? values.property_image.name : \"No Image\"}</Box>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid key={2} item>\n\t\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t\t<input onChange={(event) => {\n\t\t\t\t\t\t\t\t\t\tconst selectedFile = event.currentTarget.files[0]\n\t\t\t\t\t\t\t\t\t\t//remove the object then push a copy of it with added image object\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"file_to_load_url\", selectedFile);\n\t\t\t\t\t\t\t\t\t}} accept=\"image/*\" className={classes.fileInputDisplayNone} id={\"property-image-input\"} type=\"file\" />\n\t\t\t\t\t\t\t\t\t<label htmlFor={\"property-image-input\"}>\n\t\t\t\t\t\t\t\t\t\t<IconButton size=\"medium\" color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n\t\t\t\t\t\t\t\t\t\t\t<PhotoCamera />\n\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvalues.property_image_url ? <Button variant=\"contained\" onClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\tawait deleteUploadedFileByUrl(values.property_image_url)\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('property_image_url', '')\n\t\t\t\t\t\t\t\t\t\t}}>Delete Image</Button> : null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalues.id ? null : (\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" paragraph>Add Rental Units</Typography>\n\t\t\t\t\t\t\t\t\t<FieldArray\n\t\t\t\t\t\t\t\t\t\tname=\"property_units\"\n\t\t\t\t\t\t\t\t\t\tcomponent={UnitInputComponent}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tclassName={classes.buttonBox}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\tstartIcon={<CancelIcon />}\n\t\t\t\t\t\t\t\t\tonClick={() => history.goBack()}\n\t\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\t\tform=\"propertyInputForm\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{values.id ? \"Save Details\" : \"Create Property\"}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tproperties: state.properties,\n\t\tpropertiesMediaFiles: state.mediaFiles,\n\t\terror: state.error,\n\t\t// contacts: state.contacts.filter(({ id }) => !state.properties.find((property) => property.tenants.includes(id))),\n\t\tcurrentUser: state.currentUser,\n\t\tusers: state.users,\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\thandleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n\t\thandleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n\t};\n};\n\nPropertyInputForm = connect(mapStateToProps, mapDispatchToProps)(PropertyInputForm);\n\nexport default withRouter(PropertyInputForm);\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport PropertyInputForm from \"../components/property/PropertyInputForm\";\nimport { withRouter } from \"react-router-dom\";\n\nlet PropertyPage = ({propertyToEdit}) => {\n\n\tconst pageTitle = propertyToEdit.id ? \"Edit Property\" : \"Add Property\";\n\n\treturn (\n\t\t<Layout pageTitle={pageTitle}>\n\t\t\t<Grid container justify=\"center\" direction=\"column\">\n\t\t\t\t<Grid item key={2}>\n\t\t\t\t\t<PageHeading  text={pageTitle} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\titem\n\t\t\t\t\tkey={3}\n\t\t\t\t>\n\t\t\t\t\t<PropertyInputForm propertyToEdit={propertyToEdit} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Layout>\n\t);\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\tpropertyToEdit : state.properties.find(({ id }) => id === ownProps.match.params.propertyId) || {},\n\t};\n};\n\nPropertyPage = connect(mapStateToProps)(PropertyPage);\n\nexport default withRouter(PropertyPage);\n"],"sourceRoot":""}