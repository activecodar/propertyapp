{"version":3,"sources":["components/CustomCircularProgress.js","../node_modules/@material-ui/icons/Save.js","../node_modules/@material-ui/icons/Cancel.js","components/users/ManagementFeesInputForm.js","Routes/ManagementFeePage.js"],"names":["useStyles","makeStyles","theme","root","display","alignItems","height","width","wrapper","margin","spacing","position","buttonProgress","color","green","top","left","marginTop","marginLeft","CustomCircularProgress","open","dialogTitle","classes","maxWidth","aria-labelledby","container","direction","item","lg","className","size","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","defaultDate","format","startOfToday","ManagmentFeeSchema","Yup","shape","from_date","required","to_date","property_id","management_fees_notes","ManagmentFeeInputForm","props","properties","handleItemSubmit","transactions","history","commonStyles","managmentFeeToEdit","managmentFeeValues","id","fees_amount","initialValues","enableReinitialize","validationSchema","onSubmit","values","a","resetForm","setStatus","expense","goBack","sent","msg","status","handleSubmit","touched","errors","handleChange","handleBlur","isSubmitting","form","method","Grid","justify","CustomSnackbar","variant","message","TextField","fullWidth","select","name","label","onChange","error","helperText","map","property","index","MenuItem","key","ref","type","InputLabelProps","shrink","onBlur","multiline","rows","buttonBox","Button","startIcon","onClick","disableElevation","disabled","ManagementFeePage","managementFeeToEdit","pageTitle","PageHeading","text","ManagementFeesInputForm","connect","state","ownProps","managementFees","find","match","params","managementFeeId","dispatch","url","handleItemFormSubmit","withRouter"],"mappings":"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","file":"static/js/45.51c4fbef.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 80,\n        width: 120,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n        height: 50,\n        width: 50,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CustomCircularProgress({ open, dialogTitle }) {\n    const classes = useStyles();\n    \n    return (\n        <Dialog maxWidth={\"md\"} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <Grid container alignItems=\"center\" direction=\"column\">\n                    <Grid item lg>\n                        <Typography>{dialogTitle || \"Saving...\"}</Typography>\n                    </Grid>\n                    <Grid item lg>\n                        <div className={classes.root}>\n                            <div className={classes.wrapper}>\n                                {open && <CircularProgress size={50} className={classes.buttonProgress} />}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n        </Dialog>\n\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","import React from \"react\";\nimport CustomSnackbar from '../CustomSnackbar'\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport * as Yup from \"yup\";\nimport { format, startOfToday } from \"date-fns\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\n\n\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd')\n\nconst ManagmentFeeSchema = Yup.object().shape({\n  from_date: Yup.date().required(\"From Date Required\"),\n  to_date: Yup.date().required(\"To Date Required\"),\n  property_id: Yup.string().required(\"Property is Required\"),\n  management_fees_notes: Yup.string().default(\"\"),\n});\n\nconst ManagmentFeeInputForm = (props) => {\n  const { properties, transactions, handleItemSubmit, history } = props\n  const classes = commonStyles();\n  const managmentFeeToEdit = props.managmentFeeToEdit || {}\n  const managmentFeeValues = {\n    id: managmentFeeToEdit.id,\n    management_fees_notes: managmentFeeToEdit.management_fees_notes || '',\n    from_date: managmentFeeToEdit.from_date || defaultDate,\n    to_date: managmentFeeToEdit.to_date || defaultDate,\n    fees_amount: managmentFeeToEdit.fees_amount || '',\n    property_id: managmentFeeToEdit.property_id || '',\n  }\n\n  return (\n    <Formik\n      initialValues={managmentFeeValues}\n      enableReinitialize\n      validationSchema={ManagmentFeeSchema}\n      onSubmit={async (values, { resetForm, setStatus }) => {\n        try {\n          const expense = {\n            id: values.id,\n            fees_amount: values.fees_amount,\n            property_id: values.property_id,\n            from_date: values.from_date,\n            to_date: values.to_date,\n            management_fees_notes: values.management_fees_notes,\n          };\n          await handleItemSubmit(expense, \"management-fees\")\n          resetForm({});\n          if (values.id) {\n            history.goBack();\n          }\n          setStatus({ sent: true, msg: \"Fees Generated Successfully!\" })\n        } catch (error) {\n          setStatus({ sent: false, msg: `Error! ${error}.` })\n        }\n      }}\n    >\n      {({\n        values,\n        status,\n        handleSubmit,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        isSubmitting,\n      }) => (\n        <form\n          className={classes.form}\n          method=\"post\"\n          id=\"managementFeesInputForm\"\n          onSubmit={handleSubmit}\n        >\n          <Grid\n            container\n            spacing={2}\n            justify=\"center\"\n            alignItems=\"stretch\"\n            direction=\"column\"\n          >\n            {\n              status && status.msg && (\n                <CustomSnackbar\n                  variant={status.sent ? \"success\" : \"error\"}\n                  message={status.msg}\n                />\n              )\n            }\n            {\n              isSubmitting && (<CustomCircularProgress open={true} />)\n            }\n            <Grid item>\n              <TextField\n                fullWidth\n                select\n                variant=\"outlined\"\n                name=\"property_id\"\n                label=\"Property\"\n                id=\"property_id\"\n                onChange={handleChange}\n                value={values.property_id}\n                error={errors.property_id && touched.property_id}\n                helperText={touched.property_id && errors.property_id}\n\n              >\n                {properties.map((property, index) => (\n                  <MenuItem key={index} value={property.id}>\n                    {property.ref}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                type=\"date\"\n                InputLabelProps={{ shrink: true }}\n                variant=\"outlined\"\n                id=\"from_date\"\n                name=\"from_date\"\n                label=\"From Date\"\n                value={values.from_date}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.from_date && touched.from_date}\n                helperText={touched.from_date && errors.from_date}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                type=\"date\"\n                InputLabelProps={{ shrink: true }}\n                variant=\"outlined\"\n                id=\"to_date\"\n                name=\"to_date\"\n                label=\"To Date\"\n                value={values.to_date}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.to_date && touched.to_date}\n                helperText={touched.to_date && errors.to_date}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                multiline\n                rows={4}\n                variant=\"outlined\"\n                id=\"management_fees_notes\"\n                name=\"management_fees_notes\"\n                label=\"Notes\"\n                value={values.management_fees_notes}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                helperText=\"Any notes on fees collected?\"\n              />\n            </Grid>\n            <Grid item container direction=\"row\" className={classes.buttonBox}>\n              <Grid item>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  size=\"medium\"\n                  startIcon={<CancelIcon />}\n                  onClick={() => history.goBack()}\n                  disableElevation\n                >\n                  Cancel\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  size=\"medium\"\n                  startIcon={<SaveIcon />}\n                  form=\"managementFeesInputForm\"\n                  disabled={isSubmitting}\n                >\n                  Get Fees\n                  </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ManagmentFeeInputForm;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport ManagementFeesInputForm from \"../components/users/ManagementFeesInputForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { handleItemFormSubmit } from '../actions/actions'\n\nlet ManagementFeePage = ({ properties, transactions, managementFeeToEdit, handleItemSubmit, history }) => {\n    const pageTitle = managementFeeToEdit.id ? \"Edit Management Fee\" : \"Collect Management Fee\";\n    return (\n        <Layout pageTitle=\"Management Fee Details\">\n            <Grid container justify=\"center\" direction=\"column\">\n                <Grid item key={1}>\n                    <PageHeading  text={pageTitle} />\n                </Grid>\n                <Grid item key={2}>\n                    <ManagementFeesInputForm\n                        history={history}\n                        managementFeeToEdit={managementFeeToEdit}\n                        handleItemSubmit={handleItemSubmit}\n                        transactions={transactions}\n                        properties={properties}\n                    />\n                </Grid>\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        transactions: state.transactions,\n        properties: state.properties,\n        managementFeeToEdit: state.managementFees.find(({ id }) => id === ownProps.match.params.managementFeeId) || {},\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemSubmit: ( item, url) => dispatch(handleItemFormSubmit(item, url)),\n    }\n};\n\nManagementFeePage = connect(mapStateToProps, mapDispatchToProps)(ManagementFeePage);\n\nexport default withRouter(ManagementFeePage);\n"],"sourceRoot":""}