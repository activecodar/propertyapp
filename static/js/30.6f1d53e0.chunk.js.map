{"version":3,"sources":["assets/commonAssets.js","components/table/EnhancedTableHead.js","components/table/tableStyles.js","components/table/tablesSortingFunctions.js","components/table/commonTable.js","components/ExportToExcelBtn.js","components/CustomCircularProgress.js","components/PrintArrayToPdfBtn.js","components/TabPanel.js","components/ImportItemsBtn.js","components/TenantInfoDisplayCard.js","Routes/IndividualPropertyIncomeStament.js","Routes/PropertySummaryPage.js","components/property/PropertySettingsForm.js","Routes/PropertyDetails.js"],"names":["monthsInYear","eachMonthOfInterval","start","startOfYear","startOfToday","end","endOfYear","TITLES_LIST","GENDERS_LIST","EXPENSES_CATEGORIES","UNIT_TYPES","LEASE_OPTIONS","METER_TYPES","PAYMENT_FREQUENCY_OPTIONS","getContactTitles","getGendersList","getExpensesCategories","getUnitTypes","getPropertyBaths","baths","i","push","concat","getPropertyBeds","beds","getMeterTypes","getLeaseOptions","getPaymentOptions","getTransactionsFilterOptions","id","text","getLastMonthFromToDates","startOfMonth","subMonths","endOfMonth","getLastYearFromToDates","subYears","getYearToDateFromToDates","getCurrentMonthFromToDates","getLastThreeMonthsFromToDates","getMonthsInYear","currencyFormatter","Intl","NumberFormat","undefined","style","currency","EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","headCells","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","position","top","desc","a","b","withRouter","rows","selected","setSelected","deleteUrl","handleDelete","noEditCol","noDeleteCol","noDetailsCol","match","React","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","Box","borderRadius","borderColor","TableContainer","Table","stickyHeader","aria-labelledby","size","aria-label","length","target","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","stopPropagation","selectedIndex","newSelected","handleClick","tableCellIndex","tableCellData","component","scope","Tooltip","title","placement","IconButton","color","Link","to","url","fontSize","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","ExportStatementToExcelBtn","displayText","disabled","reportName","reportTitle","dataToPrint","type","variant","exportPropertyStatementDataToXSL","startIcon","ExportToExcelBtn","exportDataToXSL","display","alignItems","wrapper","buttonProgress","green","left","marginTop","marginLeft","CustomCircularProgress","open","dialogTitle","maxWidth","container","item","lg","PrintArrayToPdfBtn","printDataRows","TabPanel","children","other","hidden","m","connect","dispatch","handleItemSubmit","handleItemFormSubmit","savingUrl","baseObjectToAddProperties","accept","files","file","reader","FileReader","onload","e","fileData","result","readXlsxFile","forEach","dataItem","Object","assign","readAsBinaryString","htmlFor","TenantInfoDisplayCard","commonStyles","avatar","avatarSrc","subheader","cardContent","fullHeightWidthContainer","elevation","src","content","contentIndex","gutterBottom","name","TRANSACTIONS_FILTER_OPTIONS","PropertyIncomeStatement","transactions","expenses","propertyUnits","expensesItems","setExpensesItems","paymentItems","setPaymentItems","netIncomeObject","setNetIncomeObject","incomeStatements","setIncomeStatements","setHeadCells","expensesStatements","setExpensesStatements","propertyUnitFilter","setPropertyUnitFilter","fromFilter","setFromDateFilter","useEffect","eachPastMonthDate","Array","getMonth","keys","addMonths","reverse","headCellsForMonths","monthDate","format","incomeMappedByMonth","rentalIncomeObject","income_type","totalIncomeObject","totalRentalIncomeForPeriod","totalRentalIncome","filter","payment_type","payment","paymentDate","parse","payment_date","Date","isSameMonth","reduce","total","currentTransaction","parseFloat","payment_amount","otherIncomeObject","totalOtherIncomeForPeriod","totalOtherIncome","incomeObject","incomeAmount","expensesMappedByMonth","totalExpensesObject","expense_type","expenseObjectsInMonth","expense","expenseDate","expense_date","monthExpense","amount","expenseObject","Set","expenseType","expenseObjectByType","find","month","totalExpensesByTypeObject","expenseAmount","totalNetIncomeObject","handleSearchFormSubmit","preventDefault","filteredTransactions","unit_id","filteredExpenses","Grid","Typography","xs","form","onSubmit","justify","md","TextField","fullWidth","select","propertyUnit","MenuItem","ref","InputLabelProps","shrink","filterOption","Button","resetSearchForm","sm","flexDirection","p","bgcolor","textAlign","flexGrow","incomeStatement","incomeIndex","otherColumns","expenseStatement","legendOpts","labels","fontColor","GREY","PropertySummaryPage","propertyActiveLeasesNumber","propertyToShowDetails","users","curentMonthIncomeData","datasets","totalPaymentsByType","transactionsForCurrentMonth","isWithinInterval","totalCurrentMonthRentPayments","totalValue","currentValue","totalCurrentMonthOtherPayments","totalAmount","totalPayment","data","backgroundColor","GREEN","rentalUnitsOccupancyData","RED","rentalUnitsDistributionData","unitTypes","from","unit","unit_type","_unit_type","TEAL","propertyManager","user","assigned_to","first_name","last_name","propertyOwner","owner","Card","CardActionArea","CardMedia","image","property_image_url","CardContent","address","city","phone_number","home_phone_number","primary_email","legend","PropertySettingsSchema","Yup","shape","property_id","trim","required","grace_period","typeError","min","default","late_fee_amount","late_fee_frequency","late_fee_max_amount","management_fee_type","management_fee_income_percentage","when","is","then","unit_or_property_to_charge","management_fee_flat_fee","PropertySettingsInputForm","propertySettings","propertyValues","email_residents_on_charges_posted","late_fees_charges_activated","automatically_end_agreement_on_move_out_date","email_residents_on_late_fees","initialValues","enableReinitialize","validationSchema","values","resetForm","setStatus","propertySettingsValues","sent","msg","status","handleSubmit","touched","errors","handleChange","handleBlur","isSubmitting","method","CustomSnackbar","message","FormControl","error","FormControlLabel","control","Switch","labelPlacement","onBlur","helperText","FormLabel","RadioGroup","Radio","buttonBox","state","PROPERTY_TYPES","PropertyDetailsPage","handleItemDelete","propertyUnitsItems","setPropertyUnitItems","filteredPropertyItems","setFilteredPropertyUnitsItems","propertyRefFilter","setPropertyRefFilter","unitTypeFilter","setPropertyTypeFilter","occupiedStatusFilter","setOccupiedStatusFilter","tabValue","setTabValue","pageTitle","AppBar","Tabs","newValue","Tab","PropertySettingsForm","includes","ImportItemsBtn","filteredPropertyUnits","lease_id","ownProps","unitsInProperty","params","propertyId","propertyActiveLeases","leases","terminated","properties","property_unit","latestUnitLease","tenant","contacts","isArray","tenants","tenant_name","tenant_id_number","id_number","rent_amount","itemId"],"mappings":"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","file":"static/js/30.6f1d53e0.chunk.js","sourcesContent":["import { endOfMonth, endOfYear, startOfToday, eachMonthOfInterval, startOfMonth, startOfYear, subMonths, subYears } from \"date-fns\";\n\nconst monthsInYear = eachMonthOfInterval({\n\tstart: startOfYear(startOfToday()),\n\tend: endOfYear(startOfToday()),\n})\n//general contact titles\nconst TITLES_LIST = [\"Mr\", \"Prof\", \"Hon\", \"Sir\", \"Mrs\", \"Miss\", \"Dr\", \"Madam\", \"Other\"]\nconst GENDERS_LIST = [\"Male\", \"Female\", \"Unspecified\"];\nconst EXPENSES_CATEGORIES = [\n\t'Security Deposit Refund',\n\t'Water Deposit Refund',\n\t'Management Fees',\n\t'Utilities',\n\t'Taxes',\n\t'Mortgage',\n\t'Office',\n\t'Maintenance & Cleaning',\n\t'Advertising',\n\t'Insurance',\n\t'Legal & Other Professional Fees',\n\t'Auto & Travel',\n\t'Supplies',\n\t'Other Refund',\n\t'Repairs',\n\t'Other'\n]\nconst PROPRERTY_TYPES = [\n\t\"Residential\",\n\t\"Condo/Townhouse\",\n\t\"Multi-family\",\n\t\"Single-family\",\n]\nconst UNIT_TYPES = [\n\t\"Bed Sitter\",\n\t\"One Bedroom\",\n\t\"Two Bedroom\",\n\t\"Single Room\",\n\t\"Double Room\",\n\t\"Shop\",\n\t\"Other\",\n];\nconst LEASE_OPTIONS = [\n\t\"Fixed\",\n\t\"Fixed w/rollover\",\n];\nconst METER_TYPES = [\"Electric\", \"Sewer\", \"Water\"];\nconst FREQUENCY_OPTIONS = [\"Per Day\", \"Week\", \"Month\", \"Quarter\", \"Half Year\", \"Year\"];\nconst PAYMENT_FREQUENCY_OPTIONS = [\"Daily\", \"Weekly\", \"Monthly\", \"Quarterly\", \"Half-Yearly\", \"Yearly\"];\n\n//functions to get the above values\nexport function getContactTitles() {\n\treturn TITLES_LIST;\n}\n\nexport function getGendersList() {\n\treturn GENDERS_LIST;\n}\n\nexport function getExpensesCategories() {\n\treturn EXPENSES_CATEGORIES;\n}\n\n//general property types\nexport function getPropertyTypes() {\n\treturn PROPRERTY_TYPES;\n}\n\n//general unit types\nexport function getUnitTypes() {\n\treturn UNIT_TYPES;\n}\n\nexport function getPropertyBaths() {\n\tconst baths = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbaths.push(i);\n\t}\n\treturn baths.concat(\"5+\");\n}\n\nexport function getPropertyBeds() {\n\tconst beds = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbeds.push(i);\n\t}\n\treturn beds;\n}\n\nexport function getFrequencyOptions() {\n\treturn FREQUENCY_OPTIONS;\n}\n\nexport function getMeterTypes() {\n\treturn METER_TYPES;\n}\n\nexport function getLeaseOptions() {\n\treturn LEASE_OPTIONS;\n}\n\nexport function getPaymentOptions() {\n\treturn PAYMENT_FREQUENCY_OPTIONS;\n}\n\nexport function getTransactionsFilterOptions() {\n\treturn [\n\t\t{ id: 'month-to-date', text: 'Month To Date' }, { id: 'last-month', text: 'Last Month' },\n\t\t{ id: '3-months-to-date', text: '3 Months To Date' }, { id: 'year-to-date', text: 'Year To Date' },\n\t\t{ id: 'last-year', text: 'Last Year' },];\n}\n\nexport function getLastMonthFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 1)), endOfMonth(subMonths(startOfToday(), 1))]\n}\n\nexport function getLastYearFromToDates() {\n\treturn [startOfYear(subYears(startOfToday(), 1)), endOfYear(subYears(startOfToday(), 1))]\n}\n\nexport function getYearToDateFromToDates() {\n\treturn [startOfYear(startOfToday()), startOfToday()]\n}\n\nexport function getCurrentMonthFromToDates() {\n\treturn [startOfMonth(startOfToday()), endOfMonth(startOfToday())]\n}\n\nexport function getLastThreeMonthsFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 2)), endOfMonth(startOfToday())]\n}\n\nexport function getMonthsInYear() {\n\treturn monthsInYear\n}\n\n// Create our number formatter.\nexport const currencyFormatter = new Intl.NumberFormat(undefined, {\n\tstyle: 'decimal',\n\tcurrency: 'KES',\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        headCells,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ \"aria-label\": \"select all\" }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding={headCell.disablePadding ? \"none\" : \"default\"}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={order}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default useStyles;\n","\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => desc(a, b, orderBy)\n        : (a, b) => -desc(a, b, orderBy);\n}\n\nexport { desc, stableSort, getSorting };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport TableBody from '@material-ui/core/TableBody';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableCell from '@material-ui/core/TableCell';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport { withRouter } from \"react-router-dom\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport useStyles from \"./tableStyles\";\nimport { stableSort, getSorting } from \"./tablesSortingFunctions\";\n\nfunction CommonTable(props) {\n    const {\n        rows,\n        headCells,\n        selected,\n        setSelected,\n        deleteUrl,\n        handleDelete,\n        noEditCol,\n        noDeleteCol,\n        noDetailsCol,\n    } = props;\n    const { match } = props;\n    const classes = useStyles();\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"Beds\");\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(50);\n\n    const handleRequestSort = (event, property) => {\n        const isDesc = orderBy === property && order === \"desc\";\n        setOrder(isDesc ? \"asc\" : \"desc\");\n        setOrderBy(property);\n    };\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        event.stopPropagation();\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\">\n            <TableContainer>\n                <Table\n                    stickyHeader\n                    className={classes.table}\n                    aria-labelledby=\"tableTitle\"\n                    size={\"medium\"}\n                    aria-label=\"enhanced table\"\n                >\n                    <EnhancedTableHead\n                        classes={classes}\n                        numSelected={selected.length}\n                        order={order}\n                        orderBy={orderBy}\n                        onSelectAllClick={handleSelectAllClick}\n                        headCells={headCells}\n                        onRequestSort={handleRequestSort}\n                        rowCount={rows.length}\n                    />\n                    <TableBody>\n                        {stableSort(rows, getSorting(order, orderBy))\n                            .slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage\n                            )\n                            .map((row, index) => {\n                                const isItemSelected = isSelected(row.id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        // onClick={() => {if(typeof tableRowOnClickHandler === 'function') tableRowOnClickHandler(row.id) }}\n                                        hover\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        key={row.id}\n                                        selected={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                onClick={(event) =>\n                                                    handleClick(event, row.id)\n                                                }\n                                                checked={isItemSelected}\n                                                inputProps={{\n                                                    \"aria-labelledby\": labelId,\n                                                }}\n                                            />\n                                        </TableCell>\n                                        {headCells.map(\n                                            (headCell, tableCellIndex) => {\n                                                const tableCellData =\n                                                    row[headCell.id];\n                                                return (\n                                                    headCell.id === 'edit' ?\n                                                        (\n                                                            noEditCol ? null : (\n                                                                <TableCell\n                                                                    key={`edit${tableCellIndex}`}\n                                                                    component=\"th\"\n                                                                    scope=\"row\"\n                                                                    sortDirection={false}\n                                                                >\n                                                                    <Tooltip\n                                                                        title=\"Edit\"\n                                                                        placement=\"bottom\"\n                                                                    >\n                                                                        <IconButton\n                                                                            color=\"primary\"\n                                                                            size=\"small\"\n                                                                            component={Link}\n                                                                            to={`${match.url}/${row.id}/edit`}\n                                                                        >\n                                                                            <EditIcon fontSize=\"default\" />\n                                                                        </IconButton>\n                                                                    </Tooltip>\n                                                                </TableCell>\n                                                            )\n                                                        )\n                                                        : headCell.id === 'delete' ?\n                                                            (\n                                                                noDeleteCol ? null : (\n                                                                    <TableCell\n                                                                        key={`delete${tableCellIndex}`}\n                                                                        component=\"th\"\n                                                                        scope=\"row\"\n                                                                        sortDirection={false}\n                                                                    >\n                                                                        <Tooltip\n                                                                            title=\"Delete\"\n                                                                            placement=\"bottom\"\n                                                                        >\n                                                                            <IconButton\n                                                                                onClick={(event) => {\n                                                                                    handleDelete(\n                                                                                        row.id,\n                                                                                        deleteUrl\n                                                                                    );\n                                                                                }}\n                                                                                color=\"primary\"\n                                                                                size=\"small\"\n                                                                            >\n                                                                                <DeleteIcon fontSize=\"default\" />\n                                                                            </IconButton>\n                                                                        </Tooltip>\n                                                                    </TableCell>\n                                                                )\n                                                            )\n                                                            : headCell.id === 'details' ?\n                                                                (\n                                                                    !noDetailsCol ? null : (\n                                                                        <TableCell\n                                                                            key={`details${tableCellIndex}`}\n                                                                            component=\"th\"\n                                                                            scope=\"row\"\n                                                                            sortDirection={false}\n                                                                        >\n                                                                            <Tooltip\n                                                                                title=\"Details\"\n                                                                                placement=\"bottom\"\n                                                                            >\n                                                                                <IconButton\n                                                                                    color=\"primary\"\n                                                                                    size=\"small\"\n                                                                                    component={Link}\n                                                                                    to={`${match.url}/${row.id}/details`}\n                                                                                >\n                                                                                    <DetailsIcon fontSize=\"default\" />\n                                                                                </IconButton>\n                                                                            </Tooltip>\n                                                                        </TableCell>\n                                                                    )\n                                                                )\n                                                                :\n                                                                <TableCell\n                                                                    key={tableCellIndex}\n                                                                    component=\"th\"\n                                                                    id={labelId}\n                                                                    scope=\"row\"\n                                                                    padding=\"none\"\n                                                                >\n                                                                    {typeof tableCellData ===\n                                                                        \"boolean\"\n                                                                        ? tableCellData\n                                                                            ? \"Yes\"\n                                                                            : \"No\"\n                                                                        : tableCellData}\n                                                                </TableCell>\n                                                );\n                                            }\n                                        )}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[50, 100, 200, 300]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </Box>\n    );\n}\n\nexport default withRouter(CommonTable);\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport exportDataToXSL, { exportPropertyStatementDataToXSL } from \"../assets/PrintingHelper\";\nimport PropTypes from 'prop-types';\n\nfunction ExportToExcelBtn(props) {\n\tconst { disabled, reportName, reportTitle, headCells, dataToPrint } = props\n\treturn (\n\t\t<Button\n\t\t\ttype=\"button\"\n\t\t\taria-label=\"Export to Excel\"\n\t\t\tvariant=\"contained\"\n\t\t\tsize=\"medium\"\n\t\t\tcolor=\"primary\"\n\t\t\tdisabled={disabled}\n\t\t\tonClick={() => exportDataToXSL(reportName, reportTitle, headCells, dataToPrint, reportName)}\n\t\t\tstartIcon={<ImportExportIcon />}\n\t\t>\n\t\t\tExcel\n\t\t</Button >\n\t);\n}\n\nExportToExcelBtn.propTypes = {\n\treportName: PropTypes.string.isRequired,\n\treportTitle: PropTypes.string.isRequired,\n\theadCells: PropTypes.array.isRequired,\n\tdataToPrint: PropTypes.array.isRequired,\n}\n\nexport default ExportToExcelBtn;\n\nexport function ExportStatementToExcelBtn(props) {\n\tconst { displayText, disabled, reportName, reportTitle, headCells, dataToPrint } = props\n\treturn (\n\t\t<Button\n\t\t\ttype=\"button\"\n\t\t\taria-label=\"Export to Excel\"\n\t\t\tvariant=\"contained\"\n\t\t\tsize=\"medium\"\n\t\t\tcolor=\"primary\"\n\t\t\tdisabled={disabled}\n\t\t\tonClick={() => exportPropertyStatementDataToXSL(reportName, reportTitle, headCells, dataToPrint, reportName)}\n\t\t\tstartIcon={<ImportExportIcon />}\n\t\t>\n\t\t\t{ displayText ? displayText : \"Excel\"}\n\t\t</Button >\n\t);\n}\n\nExportStatementToExcelBtn.propTypes = {\n\treportName: PropTypes.string.isRequired,\n\treportTitle: PropTypes.string.isRequired,\n\theadCells: PropTypes.array.isRequired,\n\tdataToPrint: PropTypes.array.isRequired,\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 80,\n        width: 120,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n        height: 50,\n        width: 50,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CustomCircularProgress({ open, dialogTitle }) {\n    const classes = useStyles();\n    \n    return (\n        <Dialog maxWidth={\"md\"} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <Grid container alignItems=\"center\" direction=\"column\">\n                    <Grid item lg>\n                        <Typography>{dialogTitle || \"Saving...\"}</Typography>\n                    </Grid>\n                    <Grid item lg>\n                        <div className={classes.root}>\n                            <div className={classes.wrapper}>\n                                {open && <CircularProgress size={50} className={classes.buttonProgress} />}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n        </Dialog>\n\n    );\n}\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport { printDataRows } from \"../assets/PrintingHelper\";\nimport PropTypes from 'prop-types';\n\nfunction PrintArrayToPdfBtn (props) {\n    const { disabled, reportName, reportTitle, headCells, dataToPrint } = props\n    return (\n        <Button\n            type=\"button\"\n            aria-label=\"Print to Pdf\"\n            variant=\"contained\"\n            size=\"medium\"\n            color=\"primary\"\n            disabled={disabled}\n            onClick={() => printDataRows(reportName, reportTitle, headCells, dataToPrint)}\n            startIcon={<PrintIcon />}\n        >\n            Pdf\n        </Button>\n    );\n}\n\nPrintArrayToPdfBtn.propTypes = {\n    reportName: PropTypes.string.isRequired,\n    reportTitle: PropTypes.string.isRequired,\n    headCells: PropTypes.array.isRequired,\n    dataToPrint: PropTypes.array.isRequired,\n}\n\nexport default PrintArrayToPdfBtn;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nexport default function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box m={2}>{children}</Box>}\n        </div>\n    );\n}","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { readXlsxFile } from \"../assets/PrintingHelper\";\nimport PropTypes from 'prop-types';\nimport { handleItemFormSubmit } from '../actions/actions'\nimport { connect } from \"react-redux\";\n\nfunction ImportItemsBtn(props) {\n    const { disabled, text, savingUrl, baseObjectToAddProperties, handleItemSubmit } = props\n    return (\n        <div>\n            <input\n                accept=\".xls,.xlsx, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel\"\n                style={{ display: \"none\" }}\n                id=\"contained-button-file\"\n                type=\"file\"\n                onChange={(event) => {\n                    const files = event.target.files\n                    if (files.length) {\n                        const file = files[0];\n                        const reader = new FileReader();\n                        reader.onload = function (e) {\n                            var fileData = e.target.result;\n                            const dataToSave = readXlsxFile(fileData)\n                            dataToSave.forEach(async dataItem => {\n                                if (baseObjectToAddProperties) {\n                                    Object.assign(dataItem, baseObjectToAddProperties)\n                                }\n                                await handleItemSubmit(dataItem, savingUrl)\n                            })\n                        };\n                        reader.readAsBinaryString(file)\n                    }\n                }}\n            />\n            <label htmlFor=\"contained-button-file\">\n                <Button variant=\"contained\" color=\"primary\" component=\"span\"\n                    disabled={disabled} startIcon={<CloudUploadIcon />}>\n                    {text ? text : \"Upload\"}\n                </Button>\n            </label>\n        </div>\n    );\n}\n\nImportItemsBtn.propTypes = {\n    savingUrl: PropTypes.string.isRequired,\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(ImportItemsBtn);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { commonStyles } from \"../components/commonStyles\";\n\nlet TenantInfoDisplayCard = (props) => {\n    const classes = commonStyles();\n    const {title, avatar, avatarSrc, subheader, cardContent} = props\n    return (\n        <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n            <CardHeader\n                avatar={\n                    <Avatar aria-label=\"contact avatar\" src={avatarSrc ? avatarSrc : ''} className={classes.avatar}>\n                        {avatar}\n                    </Avatar>\n                }\n                title={title}\n                subheader={subheader}\n            />\n            <CardContent>\n               {\n                   cardContent.map((content, contentIndex) => \n                   <Typography key={contentIndex} gutterBottom variant=\"body2\">\n                    {content.name} : {content.value}\n                   </Typography>)\n               }\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TenantInfoDisplayCard;\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport { ExportStatementToExcelBtn } from \"../components/ExportToExcelBtn\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { getTransactionsFilterOptions, currencyFormatter, getLastYearFromToDates, getYearToDateFromToDates, getLastMonthFromToDates } from \"../assets/commonAssets\";\nimport { startOfToday, parse, subMonths, addMonths, getMonth, format, isSameMonth } from 'date-fns'\n\nconst TRANSACTIONS_FILTER_OPTIONS = getTransactionsFilterOptions()\n\nlet PropertyIncomeStatement = ({\n    transactions,\n    expenses,\n    propertyUnits,\n}) => {\n    const classes = commonStyles();\n    let [expensesItems, setExpensesItems] = useState([]);\n    let [paymentItems, setPaymentItems] = useState([]);\n    let [netIncomeObject, setNetIncomeObject] = useState({});\n    let [incomeStatements, setIncomeStatements] = useState([]);\n    let [headCells, setHeadCells] = useState([]);\n    let [expensesStatements, setExpensesStatements] = useState([]);\n    let [propertyUnitFilter, setPropertyUnitFilter] = useState(\"\");\n    let [fromFilter, setFromDateFilter] = useState('month-to-date');\n\n    useEffect(() => {\n        //go back [numMonths] months from current date\n        let eachPastMonthDate;\n        switch (fromFilter) {\n            case 'last-month':\n                eachPastMonthDate = [getLastMonthFromToDates()[0]]\n                break;\n            case 'year-to-date':\n                eachPastMonthDate = [...Array((getMonth(startOfToday()) + 1)).keys()].map((value) => addMonths(getYearToDateFromToDates()[0], value))\n                break;\n            case 'last-year':\n                eachPastMonthDate = [...Array(12).keys()].map((value) => addMonths(getLastYearFromToDates()[0], value))\n                break;\n            case 'month-to-date':\n                eachPastMonthDate = [...Array(1).keys()].reverse().map((value) => subMonths(startOfToday(), value))\n                break;\n            case '3-months-to-date':\n                eachPastMonthDate = [...Array(3).keys()].reverse().map((value) => subMonths(startOfToday(), value))\n                break;\n            default:\n                eachPastMonthDate = [getLastMonthFromToDates()[0]]\n\n        }\n        const headCellsForMonths = [...eachPastMonthDate.map((monthDate) => format(monthDate, 'MMMM yyyy')), `Total as of ${format(eachPastMonthDate[eachPastMonthDate.length - 1], 'MMMM yyyy')}`]\n        // calculate income from rent\n        const incomeMappedByMonth = []\n        const rentalIncomeObject = { income_type: 'Rental Income' }\n        const totalIncomeObject = { income_type: 'Total Income' }\n        let totalRentalIncomeForPeriod = 0\n        eachPastMonthDate.forEach((monthDate) => {\n            //get transactions recorded in the same month and year as monthDate\n            const totalRentalIncome = paymentItems.filter(({ payment_type }) => payment_type === 'rent')\n                .filter((payment) => {\n                    const paymentDate = parse(payment.payment_date, 'yyyy-MM-dd', new Date())\n                    return isSameMonth(monthDate, paymentDate)\n                }).reduce((total, currentTransaction) => total + (parseFloat(currentTransaction.payment_amount) || 0), 0)\n            totalRentalIncomeForPeriod += totalRentalIncome\n            rentalIncomeObject[format(monthDate, 'MMMM yyyy')] = totalRentalIncome\n        })\n        rentalIncomeObject[headCellsForMonths[headCellsForMonths.length - 1]] = totalRentalIncomeForPeriod\n        incomeMappedByMonth.push(rentalIncomeObject)\n        // calculate income from other sources\n        const otherIncomeObject = { income_type: 'Other Income' }\n        let totalOtherIncomeForPeriod = 0\n        eachPastMonthDate.forEach((monthDate) => {\n            //get transactions recorded in the same month and year as monthDate\n            const totalOtherIncome = paymentItems.filter(({ payment_type }) => payment_type !== 'rent')\n                .filter((payment) => {\n                    const paymentDate = parse(payment.payment_date, 'yyyy-MM-dd', new Date())\n                    return isSameMonth(monthDate, paymentDate)\n                }).reduce((total, currentTransaction) => total + (parseFloat(currentTransaction.payment_amount) || 0), 0)\n            totalOtherIncomeForPeriod += totalOtherIncome\n            otherIncomeObject[format(monthDate, 'MMMM yyyy')] = totalOtherIncome\n        })\n        otherIncomeObject[headCellsForMonths[headCellsForMonths.length - 1]] = totalOtherIncomeForPeriod\n        incomeMappedByMonth.push(otherIncomeObject)\n        // get total of all incomes\n        incomeMappedByMonth.forEach((incomeObject) => {\n            headCellsForMonths.forEach((headCell) => {\n                const incomeAmount = parseFloat(incomeObject[headCell]) || 0\n                totalIncomeObject[headCell] = (parseFloat(totalIncomeObject[headCell]) || 0) + incomeAmount\n            })\n        })\n        incomeMappedByMonth.push(totalIncomeObject)\n        //calculate expenses\n        const expensesMappedByMonth = []\n        const totalExpensesObject = { expense_type: 'Total Expenses' }\n        const expenseObjectsInMonth = []\n        eachPastMonthDate.forEach((monthDate) => {\n            //get expenses recorded in the same month and year\n            //as monthDate\n            expensesItems.filter((expense) => {\n                const expenseDate = parse(expense.expense_date, 'yyyy-MM-dd', new Date())\n                return isSameMonth(monthDate, expenseDate)\n            }).forEach((monthExpense) => {\n                const { type, amount } = monthExpense\n                const expenseObject = {};\n                expenseObject['expense_type'] = type\n                expenseObject['amount'] = (parseFloat(amount) || 0)\n                expenseObject['month'] = format(monthDate, 'MMMM yyyy')\n                expenseObjectsInMonth.push(expenseObject)\n            })\n        })\n        const expensesTypesSet = new Set(expenseObjectsInMonth.map((expenseObject) => expenseObject.expense_type))\n        expensesTypesSet.forEach((expenseType) => {\n            expenseObjectsInMonth.filter((expenseObject) => expenseObject.expense_type === expenseType).forEach((expenseObject) => {\n                //make or obtain an object and push it to the expenses array\n                const expenseObjectByType = expensesMappedByMonth.find((expense) => expense.expense_type === expenseType)\n                if (typeof expenseObjectByType !== 'undefined') {\n                    expenseObjectByType[expenseObject.month] = (parseFloat(expenseObjectByType[expenseObject.month]) || 0) + parseFloat(expenseObject.amount)\n                    expenseObjectByType[headCellsForMonths[headCellsForMonths.length - 1]] = (parseFloat(expenseObjectByType[headCellsForMonths[headCellsForMonths.length - 1]]) || 0) + parseFloat(expenseObject.amount)\n                } else {\n                    const totalExpensesByTypeObject = {}\n                    totalExpensesByTypeObject['expense_type'] = expenseType\n                    totalExpensesByTypeObject[expenseObject.month] = parseFloat(expenseObject.amount) || 0\n                    totalExpensesByTypeObject[headCellsForMonths[headCellsForMonths.length - 1]] = parseFloat(expenseObject.amount) || 0\n                    expensesMappedByMonth.push(totalExpensesByTypeObject)\n                }\n            })\n        })\n        expensesMappedByMonth.forEach((expenseObject) => {\n            headCellsForMonths.forEach((headCell) => {\n                const expenseAmount = parseFloat(expenseObject[headCell]) || 0\n                totalExpensesObject[headCell] = (parseFloat(totalExpensesObject[headCell]) || 0) + expenseAmount\n            })\n        })\n        expensesMappedByMonth.push(totalExpensesObject)\n        // get net income\n        const totalNetIncomeObject = { income_type: 'Net Income' }\n        headCellsForMonths.forEach((headCell) => {\n            totalNetIncomeObject[headCell] = (parseFloat(totalIncomeObject[headCell]) || 0) - (parseFloat(totalExpensesObject[headCell]) || 0)\n        })\n        setHeadCells(headCellsForMonths)\n        setNetIncomeObject(totalNetIncomeObject);\n        setIncomeStatements(incomeMappedByMonth);\n        setExpensesStatements(expensesMappedByMonth);\n    }, [expensesItems, paymentItems])\n\n    useEffect(() => {\n        setExpensesItems(expenses)\n    }, [expenses])\n\n    useEffect(() => {\n        setPaymentItems(transactions)\n    }, [transactions])\n\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the transactions according to the search criteria here\n        let filteredTransactions = transactions\n            .filter(({ unit_id }) => !propertyUnitFilter ? true : unit_id === propertyUnitFilter)\n        setPaymentItems(filteredTransactions)\n        const filteredExpenses = expenses\n            .filter(({ unit_id }) => !propertyUnitFilter ? true : unit_id === propertyUnitFilter)\n        setExpensesItems(filteredExpenses)\n    };\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setPropertyUnitFilter(\"\");\n        setFromDateFilter(\"month-to-date\");\n        setExpensesItems(expenses)\n        setPaymentItems(transactions)\n    };\n\n    return (\n        <Grid\n            container\n            spacing={3}\n            alignItems=\"center\">\n            <Grid item>\n                <Typography variant=\"h6\">Property Statement</Typography>\n            </Grid>\n            <Grid\n                container\n                spacing={2}\n                item\n                alignItems=\"center\"\n                direction=\"row\"\n            >\n                <Grid item>\n                    <ExportStatementToExcelBtn\n                        displayText={\"Export Income\"}\n                        reportName={'Properties Income Records'}\n                        reportTitle={'Properties Income Records'}\n                        headCells={headCells}\n                        dataToPrint={incomeStatements}\n                    />\n                </Grid>\n                <Grid item>\n                    <ExportStatementToExcelBtn\n                        displayText={\"Export Expenses\"}\n                        reportName={\"Properties Expenses  Records\"}\n                        reportTitle={\"Properties Expenses Data\"}\n                        headCells={headCells}\n                        dataToPrint={expensesStatements}\n                    />\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Box\n                    border={1}\n                    borderRadius=\"borderRadius\"\n                    borderColor=\"grey.400\"\n                >\n                    <form\n                        className={classes.form}\n                        id=\"contactSearchForm\"\n                        onSubmit={handleSearchFormSubmit}\n                    >\n                        <Grid\n                            container\n                            spacing={2}\n                            justify=\"center\"\n                            direction=\"row\"\n                        >\n                            <Grid item xs={12} md={6}>\n                                <TextField\n                                    fullWidth\n                                    select\n                                    variant=\"outlined\"\n                                    name=\"property_filter\"\n                                    label=\"Select Unit\"\n                                    id=\"property_filter\"\n                                    onChange={(event) => {\n                                        setPropertyUnitFilter(\n                                            event.target.value\n                                        );\n                                    }}\n                                    value={propertyUnitFilter}\n                                >\n                                    {propertyUnits.map((propertyUnit, index) => (\n                                        <MenuItem\n                                            key={index}\n                                            value={propertyUnit.id}\n                                        >\n                                            {propertyUnit.ref}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    select\n                                    id=\"from_filter\"\n                                    name=\"from_filter\"\n                                    label=\"Filter\"\n                                    value={fromFilter}\n                                    onChange={(event) => {\n                                        setFromDateFilter(\n                                            event.target.value\n                                        );\n                                    }}\n                                    InputLabelProps={{ shrink: true }}>\n                                    {TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => (\n                                        <MenuItem\n                                            key={index}\n                                            value={filterOption.id}\n                                        >\n                                            {filterOption.text}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            container\n                            spacing={2}\n                            item\n                            justify=\"flex-end\"\n                            alignItems=\"center\"\n                            direction=\"row\"\n                            key={1}\n                        >\n                            <Grid item>\n                                <Button\n                                    onClick={(event) => handleSearchFormSubmit(event)}\n                                    type=\"submit\"\n                                    form=\"contactSearchForm\"\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    size=\"medium\"\n                                    startIcon={<SearchIcon />}\n                                >\n                                    SEARCH\n                                    </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    onClick={(event) => resetSearchForm(event)}\n                                    type=\"reset\"\n                                    form=\"contactSearchForm\"\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    size=\"medium\"\n                                    startIcon={<UndoIcon />}\n                                >\n                                    RESET\n                                    </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Box>\n            </Grid>\n            <Grid item sm={12}>\n                <div style={{ width: '100%' }}>\n                    <Box display=\"flex\" key={'adadf'} flexDirection=\"row\" p={1} bgcolor=\"grey.300\">\n                        <Box key=\"first1\" width={1} textAlign=\"left\" flexGrow={1} p={1} >\n                            Income\n                            </Box>\n                        {\n                            headCells.map((headCell, index) =>\n                                <Box key={index} width={1} textAlign=\"left\" flexGrow={1} p={1} >\n                                    {headCell} (Ksh)\n                                </Box>\n                            )\n                        }\n                    </Box>\n                    {\n                        incomeStatements.map((incomeStatement, incomeIndex) => {\n                            const otherColumns = headCells.map((headCell, index) =>\n                                <Box key={index} width={1} textAlign=\"left\" flexGrow={1} p={1} >\n                                    {currencyFormatter.format(incomeStatement[headCell])}\n                                </Box>\n                            )\n                            return (\n                                <Box display=\"flex\" key={incomeIndex} flexDirection=\"row\" p={1} bgcolor=\"background.paper\">\n                                    <Box textAlign=\"left\" width={1} key={incomeIndex + \"jl\"} flexGrow={1} p={1} >\n                                        {incomeStatement['income_type']}\n                                    </Box>\n                                    {otherColumns}\n                                </Box>\n                            )\n                        })\n                    }\n                </div>\n                <div style={{ width: '100%' }}>\n                    <Box display=\"flex\" key={'adlaldadf'} flexDirection=\"row\" p={1} bgcolor=\"grey.300\">\n                        <Box key=\"faldirst1\" width={1} textAlign=\"left\" flexGrow={1} p={1} >\n                            Expenses\n                            </Box>\n                        {\n                            headCells.map((headCell, index) =>\n                                <Box key={index} width={1} textAlign=\"left\" flexGrow={1} p={1} >\n                                    {headCell} (Ksh)\n                                </Box>\n                            )\n                        }\n                    </Box>\n                    {\n                        expensesStatements.map((expenseStatement, incomeIndex) => {\n                            const otherColumns = headCells.map((headCell, index) =>\n                                <Box key={index} width={1} textAlign=\"left\" flexGrow={1} p={1} >\n                                    {currencyFormatter.format(expenseStatement[headCell] || 0)}\n                                </Box>\n                            )\n                            return (\n                                <Box display=\"flex\" key={incomeIndex} flexDirection=\"row\" p={1} bgcolor=\"background.paper\">\n                                    <Box textAlign=\"left\" width={1} key={incomeIndex + \"iiajl\"} flexGrow={1} p={1} >\n                                        {expenseStatement['expense_type']}\n                                    </Box>\n                                    {otherColumns}\n                                </Box>\n                            )\n                        })\n                    }\n                </div>\n                <div style={{ width: '100%' }}>\n                    <Box display=\"flex\" key={'adlaldadf'} flexDirection=\"row\" p={1} bgcolor=\"grey.300\">\n                        <Box key=\"faldirst1\" width={1} textAlign=\"left\" flexGrow={1} p={1} >\n                            Net Income\n                            </Box>\n                        {\n                            headCells.map((headCell, index) =>\n                                <Box key={index} width={1} textAlign=\"left\" flexGrow={1} p={1} >\n                                    {headCell}\n                                </Box>\n                            )\n                        }\n                    </Box>\n                    {\n                        <Box display=\"flex\" key={'kjb'} flexDirection=\"row\" p={1} bgcolor=\"background.paper\">\n                            <Box textAlign=\"left\" width={1} key={\"iiajl\"} flexGrow={1} p={1} >\n                                Net Income\n                            </Box>\n                            {headCells.map((headCell, index) =>\n                                <Box key={index} width={1} textAlign=\"left\" flexGrow={1} p={1} >\n                                    {currencyFormatter.format(netIncomeObject[headCell] || 0)}\n                                </Box>\n                            )\n                            }\n                        </Box>\n\n                    }\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default PropertyIncomeStatement;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport TenantInfoDisplayCard from \"../components/TenantInfoDisplayCard\";\nimport TEAL from '@material-ui/core/colors/teal';\nimport RED from '@material-ui/core/colors/red';\nimport GREEN from '@material-ui/core/colors/green';\nimport { Doughnut } from 'react-chartjs-2';\nimport GREY from \"@material-ui/core/colors/grey\";\nimport { isWithinInterval, startOfMonth, startOfToday, endOfMonth, parse } from 'date-fns'\n\nconst legendOpts = {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    labels: {\n        fontColor: GREY[800],\n        fontSize: 14,\n    }\n};\n\nlet PropertySummaryPage = (props) => {\n    let { classes, propertyActiveLeasesNumber, propertyToShowDetails, propertyUnits, transactions, users } = props\n    //get current month income data\n    const curentMonthIncomeData = { datasets: [] }\n    const totalPaymentsByType = []\n    const transactionsForCurrentMonth = transactions\n        .filter(payment => {\n            return isWithinInterval(parse(payment.payment_date, 'yyyy-MM-dd', new Date()),\n                { start: startOfMonth(startOfToday()), end: endOfMonth(startOfToday()) })\n        })\n    const totalCurrentMonthRentPayments = transactionsForCurrentMonth\n        .filter(payment => payment.payment_type === 'rent')\n        .reduce((totalValue, currentValue) => (totalValue += parseFloat(currentValue.payment_amount) || 0), 0)\n    const totalCurrentMonthOtherPayments = transactionsForCurrentMonth\n        .filter(payment => payment.payment_type !== 'rent')\n        .reduce((totalValue, currentValue) => (totalValue += parseFloat(currentValue.payment_amount) || 0), 0)\n    totalPaymentsByType.push({ type: \"rent\", totalAmount: totalCurrentMonthRentPayments, label: \"Rent\" })\n    totalPaymentsByType.push({ type: \"other\", totalAmount: totalCurrentMonthOtherPayments, label: \"Others\" })\n    curentMonthIncomeData.labels = totalPaymentsByType.map(totalPayment => totalPayment.label)\n    curentMonthIncomeData.datasets.push({\n        data: totalPaymentsByType.map(totalPayment => totalPayment.totalAmount),\n        backgroundColor: [GREEN[800], GREEN[200]]\n    })\n    //get occupancy graph data\n    const rentalUnitsOccupancyData = { datasets: [] }\n    rentalUnitsOccupancyData.labels = ['Occupied Units', 'Vacant Units']\n    rentalUnitsOccupancyData.datasets.push(\n        {\n            data: [propertyActiveLeasesNumber, (propertyUnits.length - propertyActiveLeasesNumber)],\n            backgroundColor: [RED[800], RED[200]]\n        })\n    //get the number of the different units by category\n    const rentalUnitsDistributionData = { datasets: [] }\n    const unitTypes = Array.from(new Set(propertyUnits.map(unit => unit.unit_type)))\n    rentalUnitsDistributionData.labels = unitTypes\n    rentalUnitsDistributionData.datasets.push({\n        data: unitTypes\n            .map(unit_type => {\n                return propertyUnits.filter((property) => property.unit_type === unit_type).length\n            }),\n        backgroundColor: unitTypes.map((_unit_type, key) => TEAL[(key + 1) * 100])\n    })\n    const propertyManager = users.find((user) => user.id === propertyToShowDetails.assigned_to) ||\n        { first_name: 'R', last_name: 'O' }\n    const propertyOwner = users.find((user) => user.id === propertyToShowDetails.owner) ||\n        { first_name: 'R', last_name: 'M' }\n    return (\n        <Grid container justify=\"center\" direction=\"column\" spacing={2} alignItems=\"stretch\">\n            <Grid item key={0}>\n                <Typography variant=\"h6\">Property Details</Typography>\n            </Grid>\n            <Grid\n                container\n                direction=\"row\"\n                item\n                alignItems=\"stretch\"\n                spacing={2}\n            >\n                <Grid item xs={12} md>\n                    <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                        <CardActionArea>\n                            <CardMedia\n                                height=\"200\"\n                                component=\"img\"\n                                image={propertyToShowDetails.property_image_url || '/apartmentImage.png'}\n                                title=\"Property Image\"\n                            />\n                        </CardActionArea>\n                        <CardContent>\n                            <Typography gutterBottom variant=\"subtitle1\" component=\"h2\">\n                                Address\n                                </Typography>\n                            <Typography variant=\"body2\" component=\"p\">\n                                {propertyToShowDetails.address}\n                            </Typography>\n                            <Typography variant=\"body2\" component=\"p\">\n                                {propertyToShowDetails.city}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={12} md>\n                    <TenantInfoDisplayCard title=\"Property Owner\"\n                        subheader=\"Owner of this property\"\n                        avatar={`${propertyOwner.first_name[0]}${propertyOwner.last_name[0]}`}\n                        cardContent={[\n                            { name: 'Name:', value: `${propertyOwner.first_name} ${propertyOwner.last_name}` },\n                            { name: 'Mobile Phone Number', value: propertyOwner.phone_number || '-' },\n                            { name: 'Work Phone Number', value: propertyOwner.home_phone_number || '-' },\n                            { name: 'Primary Email', value: propertyOwner.primary_email || '-' },\n                            { name: 'Current Address', value: propertyOwner.address || '-' },\n                        ]}\n                    />\n                </Grid>\n                <Grid item xs={12} md>\n                    <TenantInfoDisplayCard title=\"Rental Manager\"\n                        subheader=\"Landlord for this property\"\n                        avatar={`${propertyManager.first_name[0]}${propertyManager.last_name[0]}`}\n                        cardContent={[\n                            { name: 'Name:', value: `${propertyManager.first_name} ${propertyManager.last_name}` },\n                            { name: 'Mobile Phone Number', value: propertyManager.phone_number || '-' },\n                            { name: 'Work Phone Number', value: propertyManager.home_phone_number || '-' },\n                            { name: 'Primary Email', value: propertyManager.primary_email || '-' },\n                            { name: 'Current Address', value: propertyManager.address || '-' },\n                        ]}\n                    />\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                direction=\"row\"\n                item\n                alignItems=\"stretch\"\n                spacing={2}\n            >\n                <Grid item xs={12} md>\n                    <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                        <CardContent>\n                            <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                Rental Units Distribution\n                            </Typography>\n                            <Doughnut height={200} data={rentalUnitsDistributionData} />\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={12} md>\n                    <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                        <CardContent>\n                            <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                Current Occupancy\n                            </Typography>\n                            <Doughnut height={200} data={rentalUnitsOccupancyData} legend={legendOpts} />\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={12} md>\n                    <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                        <CardContent>\n                            <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                Current Month Income\n                            </Typography>\n                            <Doughnut height={200} data={curentMonthIncomeData} />\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default PropertySummaryPage;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CustomSnackbar from '../CustomSnackbar'\nimport Switch from '@material-ui/core/Switch';\nimport { connect } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport {\n\thandleItemFormSubmit,\n} from \"../../actions/actions\";\nimport { withRouter } from \"react-router-dom\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\nimport * as Yup from \"yup\";\n\n\nconst PropertySettingsSchema = Yup.object().shape({\n\tproperty_id: Yup.string().trim().required(\"Property is Required\"),\n\tgrace_period: Yup.number().typeError('Grace Period days must be a number').min(0, \"Grace Period days must be >= 0\").default(0),\n\tlate_fee_amount: Yup.number().typeError('Amount must be a number').min(0, \"Amount must be >= 0\").required(\"Late Fee amount is required\"),\n\tlate_fee_frequency: Yup.string().trim().required(\"Frequency to charge fees is required\"),\n\tlate_fee_max_amount: Yup.number().typeError('Maximmum amount must be a number').min(0, \"Amount must be >= 0\").default(0),\n\tmanagement_fee_type: Yup.string().trim().required('Management Fee Type is required'),\n\tmanagement_fee_income_percentage: Yup.number().when('management_fee_type',\n\t\t{ is: 'income_percentage', then: Yup.number().typeError('Percentage must be a number').min(0, \"Amount must be >= 0\").required('Percentage is required') }),\n\tunit_or_property_to_charge: Yup.string().trim().when('management_fee_type',\n\t\t{ is: 'income_percentage', then: Yup.string().trim().required('Item to attach fees is required') }),\n\tmanagement_fee_flat_fee: Yup.number().when('management_fee_type',\n\t\t{ is: 'flat_fee', then: Yup.number().typeError('Flat fee must be a number').min(0, \"Amount must be >= 0\").required('Flat fee is required') }),\n});\n\n\nlet PropertySettingsInputForm = (props) => {\n\tconst { classes, propertyToShowDetails, handleItemSubmit } = props\n\tconst propertySettings = props.propertySettings || {};\n\tconst propertyValues = {\n\t\tid: propertySettings.id,\n\t\tproperty_id: propertySettings.property_id || propertyToShowDetails.id,\n\t\tlate_fee_max_amount: propertySettings.late_fee_max_amount || \"\",\n\t\tgrace_period: propertySettings.grace_period || 0,\n\t\tlate_fee_frequency: propertySettings.late_fee_frequency || \"one_time_fee\",\n\t\tlate_fee_amount: propertySettings.late_fee_amount || \"\",\n\t\temail_residents_on_charges_posted: propertySettings.email_residents_on_charges_posted || false,\n\t\tlate_fees_charges_activated: propertySettings.late_fees_charges_activated || false,\n\t\tautomatically_end_agreement_on_move_out_date: propertySettings.automatically_end_agreement_on_move_out_date || false,\n\t\temail_residents_on_late_fees: propertySettings.email_residents_on_late_fees || false,\n\t\tmanagement_fee_type: propertySettings.management_fee_type || 'flat_fee',\n\t\tmanagement_fee_income_percentage: propertySettings.management_fee_income_percentage || '',\n\t\tmanagement_fee_flat_fee: propertySettings.management_fee_flat_fee || '',\n\t\tunit_or_property_to_charge: propertySettings.unit_or_property_to_charge || 'per_property',\n\t};\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={propertyValues}\n\t\t\tenableReinitialize validationSchema={PropertySettingsSchema}\n\t\t\tonSubmit={async (values, { resetForm, setStatus }) => {\n\t\t\t\ttry {\n\t\t\t\t\tlet propertySettingsValues = {\n\t\t\t\t\t\tid: values.id,\n\t\t\t\t\t\tproperty_id: values.property_id,\n\t\t\t\t\t\tlate_fee_max_amount: values.late_fee_max_amount,\n\t\t\t\t\t\tgrace_period: values.grace_period,\n\t\t\t\t\t\tlate_fee_frequency: values.late_fee_frequency,\n\t\t\t\t\t\tlate_fees_charges_activated: values.late_fees_charges_activated,\n\t\t\t\t\t\temail_residents_on_late_fees: values.email_residents_on_late_fees,\n\t\t\t\t\t\tlate_fee_amount: values.late_fee_amount,\n\t\t\t\t\t\tmanagement_fee_type: values.management_fee_type,\n\t\t\t\t\t\tmanagement_fee_income_percentage: values.management_fee_income_percentage,\n\t\t\t\t\t\temail_residents_on_charges_posted: values.email_residents_on_charges_posted,\n\t\t\t\t\t\tmanagement_fee_flat_fee: values.management_fee_flat_fee,\n\t\t\t\t\t\tunit_or_property_to_charge: values.unit_or_property_to_charge,\n\t\t\t\t\t\tautomatically_end_agreement_on_move_out_date: values.automatically_end_agreement_on_move_out_date,\n\t\t\t\t\t};\n\t\t\t\t\tawait handleItemSubmit(propertySettingsValues, 'property-settings')\n\t\t\t\t\tresetForm({});\n\t\t\t\t\tsetStatus({ sent: true, msg: \"Property Settings Saved!\" })\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetStatus({ sent: false, msg: `Error! ${error}.` })\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{({\n\t\t\t\tvalues,\n\t\t\t\tstatus,\n\t\t\t\thandleSubmit,\n\t\t\t\ttouched,\n\t\t\t\terrors,\n\t\t\t\thandleChange,\n\t\t\t\thandleBlur,\n\t\t\t\tisSubmitting,\n\t\t\t}) => (\n\t\t\t\t<form\n\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\tid=\"propertyUnitInputForm\"\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus && status.msg && (\n\t\t\t\t\t\t\t\t<CustomSnackbar\n\t\t\t\t\t\t\t\t\tvariant={status.sent ? \"success\" : \"error\"}\n\t\t\t\t\t\t\t\t\tmessage={status.msg}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisSubmitting && (<CustomCircularProgress open={true} />)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Grid item container spacing={4} direction=\"row\">\n\t\t\t\t\t\t\t<Grid container item xs spacing={2} direction=\"column\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Late Rent Payments Fee Policy</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<FormControl error={errors.late_fees_charges_activated && touched.late_fees_charges_activated}>\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tcontrol={<Switch\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={values.late_fees_charges_activated}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"late_fees_charges_activated\"\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'Late fees checkbox' }}\n\t\t\t\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Automatic Late Fees\"\n\t\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t\tIf automatic late fees are on, we will post late fees charges\n\t\t\t\t\t\t\t\t\t\tresidents ledgers based on the settings below.\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"grace_period\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Grace Period\"\n\t\t\t\t\t\t\t\t\t\tid=\"grace_period\"\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={values.grace_period}\n\t\t\t\t\t\t\t\t\t\terror={errors.grace_period && touched.grace_period}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.grace_period && errors.grace_period}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t\tNumber of days after which late fees will be charged on resident accounts.\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Frequency &amp; Amount</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\t\t\tname=\"late_fee_frequency\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Charging Frequency\"\n\t\t\t\t\t\t\t\t\t\tid=\"late_fee_frequency\"\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={values.late_fee_frequency}\n\t\t\t\t\t\t\t\t\t\terror={errors.late_fee_frequency && touched.late_fee_frequency}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.late_fee_frequency && errors.late_fee_frequency}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={\"one_time_fee\"} value={\"one_time_fee\"}>One-time fee</MenuItem>\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={\"daily\"} value={\"daily\"}>Daily</MenuItem>\n\t\t\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"late_fee_amount\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Fee Amount\"\n\t\t\t\t\t\t\t\t\t\tid=\"late_fee_amount\"\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={values.late_fee_amount}\n\t\t\t\t\t\t\t\t\t\terror={errors.late_fee_amount && touched.late_fee_amount}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.late_fee_amount && errors.late_fee_amount}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Late Fee Amount Limits</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Fee Maximmum Amount\"\n\t\t\t\t\t\t\t\t\t\tid=\"late_fee_max_amount\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"late_fee_max_amount\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.late_fee_max_amount}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\terror={errors.late_fee_max_amount && touched.late_fee_max_amount}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.late_fee_max_amount && errors.late_fee_max_amount}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t\tSet maximmum monthly charge (per month)\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container item xs spacing={2} direction=\"column\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\t\t\t\tManagement Fee Policy\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\" color=\"primary\" error={errors.management_fee_type && touched.management_fee_type}>\n\t\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Fee Type</FormLabel>\n\t\t\t\t\t\t\t\t\t\t<RadioGroup aria-label=\"management fee type\" name=\"management_fee_type\" value={values.management_fee_type} onChange={handleChange}>\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"flat_fee\" control={<Radio />} label=\"Use Flat Fee\" />\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel value=\"income_percentage\" control={<Radio />} label=\"Use Percentage of Income\" />\n\t\t\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t{values.management_fee_type === 'flat_fee' ?\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Management Fee\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"management_fee_flat_fee\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"management_fee_flat_fee\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.management_fee_flat_fee}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\t\t\t\t\t\terror={errors.management_fee_flat_fee && touched.management_fee_flat_fee}\n\t\t\t\t\t\t\t\t\t\t\thelperText={touched.management_fee_flat_fee && errors.management_fee_flat_fee}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid> : values.management_fee_type === 'income_percentage' ?\n\t\t\t\t\t\t\t\t\t\t<Grid item container direction=\"row\" spacing={2}>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Income Percentage\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"management_fee_income_percentage\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"management_fee_income_percentage\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.management_fee_income_percentage}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.management_fee_income_percentage && touched.management_fee_income_percentage}\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.management_fee_income_percentage && errors.management_fee_income_percentage}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Per Property or Per Unit\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"unit_or_property_to_charge\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"unit_or_property_to_charge\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit_or_property_to_charge}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.unit_or_property_to_charge && touched.unit_or_property_to_charge}\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.unit_or_property_to_charge && errors.unit_or_property_to_charge}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={1} value={\"per_unit\"}>Per Unit</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={2} value={\"per_property\"}>Per Property</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Email Notifications/Resident Communication</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<FormControl color=\"secondary\" error={errors.email_residents_on_late_fees && touched.email_residents_on_late_fees}>\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={values.email_residents_on_late_fees}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"email_residents_on_late_fees\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email residents once late fees are applied\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<FormControl color=\"secondary\">\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={values.email_residents_on_charges_posted}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"email_residents_on_charges_posted\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email tenants when charges are posted\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Automatic Move Outs</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<FormControl color=\"secondary\">\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={values.automatically_end_agreement_on_move_out_date}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"automatically_end_agreement_on_move_out_date\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Automatically end agreements on move out dates\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tclassName={classes.buttonBox}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\t\tform=\"propertyUnitInputForm\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tApply Changes\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\thandleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n\t};\n};\n\nPropertySettingsInputForm = connect(mapStateToProps, mapDispatchToProps)(PropertySettingsInputForm);\n\nexport default withRouter(PropertySettingsInputForm);\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport { connect } from \"react-redux\";\nimport { handleDelete, handleItemFormSubmit } from \"../actions/actions\";\nimport IndividualPropertyIncomeStatement from \"./IndividualPropertyIncomeStament\";\nimport TabPanel from \"../components/TabPanel\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport { getUnitTypes } from \"../assets/commonAssets.js\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport ImportItemsBtn from \"../components/ImportItemsBtn\";\nimport PropertySummaryPage from \"./PropertySummaryPage\";\nimport PropertySettingsForm from \"../components/property/PropertySettingsForm\";\n\nconst PROPERTY_TYPES = getUnitTypes();\n\nconst headCells = [\n    { id: \"unit_type\", numeric: false, disablePadding: true, label: \"Unit Type\" },\n    { id: \"ref\", numeric: false, disablePadding: true, label: \"Unit Ref/Number\" },\n    { id: \"beds\", numeric: false, disablePadding: true, label: \"Beds\" },\n    { id: \"baths\", numeric: false, disablePadding: true, label: \"Baths\" },\n    { id: \"sqm\", numeric: false, disablePadding: true, label: \"Floor Area\" },\n    { id: \"rent_amount\", numeric: false, disablePadding: true, label: \"Rent Amount\" },\n    { id: \"tenant_name\", numeric: false, disablePadding: true, label: \"Tenant\" },\n    { id: \"tenant_id_number\", numeric: false, disablePadding: true, label: \"Tenant ID Number\" },\n    { id: \"edit\", numeric: false, disablePadding: true, label: \"Edit\" },\n    { id: \"delete\", numeric: false, disablePadding: true, label: \"Delete\" },\n];\n\nlet PropertyDetailsPage = ({\n    propertyUnits,\n    propertyActiveLeasesNumber,\n    propertySettings,\n    transactions,\n    expenses,\n    propertyToShowDetails,\n    users,\n    match,\n    handleItemSubmit,\n    handleItemDelete\n}) => {\n    const classes = commonStyles()\n    const [propertyUnitsItems, setPropertyUnitItems] = useState([])\n    const [filteredPropertyItems, setFilteredPropertyUnitsItems] = useState([])\n    const [propertyRefFilter, setPropertyRefFilter] = useState(\"\");\n    const [unitTypeFilter, setPropertyTypeFilter] = useState(\"\");\n    const [occupiedStatusFilter, setOccupiedStatusFilter] = useState(\"all\");\n    const [selected, setSelected] = useState([]);\n    const [tabValue, setTabValue] = React.useState(0);\n\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n\n    useEffect(() => {\n        setPropertyUnitItems(propertyUnits)\n        setFilteredPropertyUnitsItems(propertyUnits)\n    }, [propertyUnits])\n\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the propertyUnits according to the search criteria here\n        let filteredPropertyUnits = propertyUnitsItems\n            .filter(({ ref }) => !propertyRefFilter ? true : ref === propertyRefFilter)\n            .filter(({ unit_type }) => !unitTypeFilter ? true : unit_type === unitTypeFilter)\n            .filter(({ lease_id }) => occupiedStatusFilter === \"all\" ? true :\n                occupiedStatusFilter === \"occupied\" ? lease_id : !lease_id)\n\n        setFilteredPropertyUnitsItems(filteredPropertyUnits);\n    };\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setFilteredPropertyUnitsItems(propertyUnitsItems);\n        setPropertyRefFilter(\"\");\n        setPropertyTypeFilter(\"\");\n        setOccupiedStatusFilter(\"all\");\n    };\n\n    return (\n        <Layout pageTitle=\"Property Details\">\n            <AppBar position=\"static\">\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Summary\" />\n                    <Tab label=\"Rental Units\" />\n                    <Tab label=\"Financials\" />\n                    <Tab label=\"Payment Settings\" />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={tabValue} index={3}>\n                <PropertySettingsForm classes={classes} propertySettings={propertySettings} propertyToShowDetails={propertyToShowDetails}\n                    handleItemSubmit={handleItemSubmit} />\n            </TabPanel>\n            <TabPanel value={tabValue} index={0}>\n                <PropertySummaryPage propertyToShowDetails={propertyToShowDetails} transactions={transactions}\n                    propertyUnits={propertyUnitsItems} users={users} propertyActiveLeasesNumber={propertyActiveLeasesNumber} classes={classes} />\n            </TabPanel>\n            <TabPanel value={tabValue} index={2}>\n                <IndividualPropertyIncomeStatement propertyUnits={propertyUnits}\n                    transactions={transactions} expenses={expenses} classes={classes} />\n            </TabPanel>\n            <TabPanel value={tabValue} index={1}>\n                <Grid\n                    container\n                    spacing={3}\n                    justify=\"space-evenly\"\n                    alignItems=\"center\"\n                >\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\">Rental Units</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        spacing={2}\n                        item\n                        alignItems=\"center\"\n                        direction=\"row\"\n                        key={1}\n                    >\n                        <Grid item>\n                            <Button\n                                type=\"button\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                startIcon={<AddIcon />}\n                                component={Link}\n                                to={`${match.url}/new`}\n                            >\n                                NEW\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                type=\"button\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                startIcon={<EditIcon />}\n                                disabled={!selected.length}\n                                component={Link}\n                                to={`${match.url}/${selected[0]}/edit`}\n                            >\n                                Edit\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <PrintArrayToPdf\n                                disabled={!selected.length}\n                                reportName={'Rental Units Records'}\n                                reportTitle={'Rental Units Data'}\n                                headCells={headCells}\n                                dataToPrint={propertyUnitsItems.filter(({ id }) => selected.includes(id))}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ExportToExcelBtn\n                                disabled={!selected.length}\n                                reportName={'Rental Units Records'}\n                                reportTitle={'Rental Units Data'}\n                                headCells={headCells}\n                                dataToPrint={propertyUnitsItems.filter(({ id }) => selected.includes(id))}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ImportItemsBtn\n                                baseObjectToAddProperties={{ property_id: propertyToShowDetails.id }}\n                                savingUrl=\"property_units\"\n                                text=\"Upload Units\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Box\n                            border={1}\n                            borderRadius=\"borderRadius\"\n                            borderColor=\"grey.400\"\n                        >\n                            <form\n                                className={classes.form}\n                                id=\"propertySearchForm\"\n                                onSubmit={handleSearchFormSubmit}\n                            >\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    justify=\"center\"\n                                    direction=\"row\"\n                                >\n                                    <Grid item xs={12} md>\n                                        <TextField\n                                            fullWidth\n                                            select\n                                            variant=\"outlined\"\n                                            name=\"unit_type\"\n                                            label=\"Unit Type\"\n                                            id=\"unit_type\"\n                                            onChange={(event) => {\n                                                setPropertyTypeFilter(\n                                                    event.target.value\n                                                );\n                                            }}\n                                            value={unitTypeFilter}\n                                        >\n                                            {PROPERTY_TYPES.map(\n                                                (unit_type, index) => (\n                                                    <MenuItem key={index} value={unit_type}>\n                                                        {unit_type}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            id=\"property_ref\"\n                                            name=\"property_ref\"\n                                            label=\"Unit Ref\"\n                                            value={propertyRefFilter}\n                                            onChange={(event) => {\n                                                setPropertyRefFilter(\n                                                    event.target.value\n                                                );\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md>\n                                        <TextField\n                                            fullWidth\n                                            select\n                                            variant=\"outlined\"\n                                            id=\"occupied_status\"\n                                            name=\"occupied_status\"\n                                            label=\"Occupied Status\"\n                                            value={occupiedStatusFilter}\n                                            onChange={(event) => {\n                                                setOccupiedStatusFilter(\n                                                    event.target.value\n                                                );\n                                            }}>\n                                            <MenuItem key={1} value=\"all\">All</MenuItem>\n                                            <MenuItem key={2} value=\"occupied\">Occupied</MenuItem>\n                                            <MenuItem key={3} value=\"vacant\">Vacant</MenuItem>\n                                        </TextField>\n                                    </Grid>\n                                </Grid>\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    item\n                                    justify=\"flex-end\"\n                                    alignItems=\"center\"\n                                    direction=\"row\"\n                                    key={1}\n                                >\n                                    <Grid item>\n                                        <Button\n                                            type=\"submit\"\n                                            form=\"propertySearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<SearchIcon />}\n                                        >\n                                            SEARCH\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            onClick={(event) => {\n                                                resetSearchForm(event);\n                                            }}\n                                            type=\"reset\"\n                                            form=\"propertySearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<UndoIcon />}\n                                        >\n                                            RESET\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <CommonTable\n                            selected={selected}\n                            setSelected={setSelected}\n                            rows={filteredPropertyItems}\n                            headCells={headCells}\n                            deleteUrl={'property_units'}\n                            handleDelete={handleItemDelete}\n                        />\n                    </Grid>\n                </Grid>\n            </TabPanel>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const unitsInProperty = state.propertyUnits\n        .filter(({ property_id }) => property_id === ownProps.match.params.propertyId)\n        .map(({ id }) => id)\n    const propertyActiveLeases = state.leases\n        .filter(({ property_id }) => property_id === ownProps.match.params.propertyId)\n        .filter(({ terminated }) => terminated !== true)\n    return {\n        transactions: state.transactions.filter(({ unit_id }) => unitsInProperty.includes(unit_id)),\n        expenses: state.expenses.filter(({ property_id }) => property_id === ownProps.match.params.propertyId),\n        propertyToShowDetails: state.properties.find(({ id }) => id === ownProps.match.params.propertyId) || {},\n        propertyUnits: state.propertyUnits.filter(({ id }) => unitsInProperty.includes(id))\n            .map((property_unit) => {\n                const latestUnitLease = propertyActiveLeases\n                    .find(({ unit_id }) => unit_id === property_unit.id) || {}\n                const tenant = state.contacts.find(\n                    ({ id }) => Array.isArray(latestUnitLease.tenants) ? latestUnitLease.tenants.includes(id) : false)\n                return Object.assign(\n                    {},\n                    property_unit,\n                    {\n                        tenant_name: tenant ? `${tenant.first_name} ${tenant.last_name}` : '-',\n                        tenant_id_number: tenant ? tenant.id_number : '-',\n                        lease_id: latestUnitLease.id,\n                        rent_amount: latestUnitLease.rent_amount,\n                    });\n            }\n            ),\n        propertyActiveLeasesNumber: propertyActiveLeases.length,\n        propertySettings: state.propertySettings.find(({ property_id }) => property_id === ownProps.match.params.propertyId) || {},\n        users: state.users,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nPropertyDetailsPage = connect(mapStateToProps, mapDispatchToProps)(PropertyDetailsPage);\n\nexport default withRouter(PropertyDetailsPage);\n"],"sourceRoot":""}