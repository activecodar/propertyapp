{"version":3,"sources":["components/InfoDisplayPaper.js","components/Head.js","assets/actionTypes.js","assets/PrintingHelper.js","components/AppNav.js","components/PrivateLayout.js","components/PageHeading.js","components/CustomSnackbar.js","firebase.js","actions/notices.js","actions/emailTemplates.js","actions/property.js","actions/propertySettings.js","actions/propertyUnitCharges.js","actions/propertyUnits.js","actions/managementFees.js","actions/contacts.js","actions/transactions.js","actions/companyProfile.js","actions/users.js","actions/transactionsCharges.js","actions/CommunicationEmails.js","actions/leases.js","actions/to-dos.js","actions/expenses.js","actions/meterReadings.js","actions/maintenanceRequests.js","actions/actions.js","Routes/DashBoard.js","components/LoadingBackdrop.js","components/ErrorBoundary.js","Routes/MainRoute.js","components/GeneralLayout.js","Routes/SignUp.js","components/login/ResetPassword.js","Routes/SignIn.js","Routes/AccountActions.js","Routes/HomePage.js","App.js","reducers/propertyReducers.js","reducers/propertyUnitCharges.js","reducers/propertyUnits.js","reducers/managementFees.js","reducers/contacts.js","reducers/transactions.js","reducers/logs.js","reducers/propertySettings.js","reducers/maintenanceRequests.js","reducers/users.js","reducers/CommunicationEmails.js","reducers/transactionsCharges.js","reducers/leases.js","reducers/notices.js","reducers/companyProfile.js","reducers/accountBilling.js","reducers/expenses.js","reducers/toDos.js","reducers/meterReadings.js","reducers/emailTemplates.js","reducers/reducers.js","components/AppTheme.js","index.js","components/commonStyles.js","actions/firebaseHelpers.js"],"names":["InfoDisplayPaper","props","classes","commonStyles","item","xs","md","className","infoDisplayPaper","variant","component","align","value","title","headRoot","document","head","CustomHead","ReactDOM","this","children","React","Component","Head","charSet","name","content","key","rel","href","COMPANY_PROFILES_FETCH_DATA_SUCCESS","ADD_COMPANY_PROFILE","EDIT_COMPANY_PROFILE","DELETE_COMPANY_PROFILE","EXPENSES_FETCH_DATA_SUCCESS","ADD_EXPENSE","EDIT_EXPENSE","DELETE_EXPENSE","PROPERTY_SETTINGS_FETCH_DATA_SUCCESS","ADD_PROPERTY_SETTING","EDIT_PROPERTY_SETTING","DELETE_PROPERTY_SETTING","ACCOUNT_BILLINGS_FETCH_DATA_SUCCESS","ADD_ACCOUNT_BILLING","EDIT_ACCOUNT_BILLING","DELETE_ACCOUNT_BILLING","TRANSACTION_CHARGES_FETCH_DATA_SUCCESS","ADD_TRANSACTION_CHARGE","EDIT_TRANSACTION_CHARGE","DELETE_TRANSACTION_CHARGE","MANAGEMENT_FEES_FETCH_DATA_SUCCESS","ADD_MANAGEMENT_FEE","EDIT_MANAGEMENT_FEE","DELETE_MANAGEMENT_FEE","LEASES_FETCH_DATA_SUCCESS","ADD_LEASE","EDIT_LEASE","DELETE_LEASE","PROPERTY_UNIT_CHARGES_FETCH_DATA_SUCCESS","ADD_PROPERTY_UNIT_CHARGE","EDIT_PROPERTY_UNIT_CHARGE","DELETE_PROPERTY_UNIT_CHARGE","PROPERTY_UNITS_FETCH_DATA_SUCCESS","ADD_PROPERTY_UNIT","EDIT_PROPERTY_UNIT","DELETE_PROPERTY_UNIT","COMMUNICATION_EMAILS_FETCH_DATA_SUCCESS","ADD_COMMUNICATION_EMAIL","EDIT_COMMUNICATION_EMAIL","DELETE_COMMUNICATION_EMAIL","TRANSACTIONS_FETCH_DATA_SUCCESS","ADD_TRANSACTION","EDIT_TRANSACTION","DELETE_TRANSACTION","MAINTENANCE_REQUESTS_FETCH_DATA_SUCCESS","ADD_MAINTENANCE_REQUEST","EDIT_MAINTENANCE_REQUEST","DELETE_MAINTENANCE_REQUEST","TO_DOS_FETCH_DATA_SUCCESS","ADD_TO_DO","EDIT_TO_DO","DELETE_TO_DO","PROPERTIES_FETCH_DATA_SUCCESS","ADD_PROPERTY","EDIT_PROPERTY","DELETE_PROPERTY","METER_READINGS_FETCH_DATA_SUCCESS","ADD_METER_READING","EDIT_METER_READING","DELETE_METER_READING","USERS_FETCH_DATA_SUCCESS","ADD_USER","EDIT_USER","DELETE_USER","EMAIL_TEMPLATES_FETCH_DATA_SUCCESS","ADD_EMAIL_TEMPLATE","EDIT_EMAIL_TEMPLATE","DELETE_EMAIL_TEMPLATE","AUDIT_LOGS_FETCH_DATA_SUCCESS","CONTACTS_FETCH_DATA_SUCCESS","ADD_CONTACT","EDIT_CONTACT","DELETE_CONTACT","NOTICES_FETCH_DATA_SUCCESS","ADD_NOTICE","EDIT_NOTICE","DELETE_NOTICE","ITEMS_HAS_ERRORED","SET_PAGINATION_PAGE","TOGGLE_DRAWER","ITEMS_IS_LOADING","SET_CURRENT_USER","pdfMake","vfs","pdfFonts","companyProfile","setCompanyProfile","companyProfileData","readXlsxFile","fileData","readData","XLSX","read","type","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","defval","makeCell","rowIndex","options","Object","assign","text","fillColor","getReportDate","Date","toDateString","printDocument","reportName","reportTitle","documentContent","docDefinition","baseDocDefinition","pageSize","info","company_name","author","subject","keywords","footer","currentPage","pageCount","toString","alignment","fontSize","styles","margin","titleSub","titleDate","style","width","JSON","parse","stringify","contentParts","push","createDocumentDefinition","createPdf","open","printDataRows","headCells","dataToPrint","headCellsToPrint","filter","id","tableData","table","headerRows","widths","map","headCell","body","dataRows","bold","thl","label","rowSpan","forEach","row","index","tableRow","tdl","tableBody","printDataToExcel","dataToExport","fileName","workBook","book_new","Props","Title","Subject","Author","CreatedDate","workBookSheetData","workBookSheet","json_to_sheet","book_append_sheet","writeFile","exportDataUploadTemplate","exportDataToXSL","exportPropertyStatementDataToXSL","includes","printInvoice","tenantDetails","items","toISOString","slice","id_number","toLocaleString","company_address","company_phone_number","company_primary_email","first_name","last_name","personal_phone_number","contact_email","Array","from","charge_label","due_date","balance","reduce","total","currentValue","parseFloat","my_window","window","write","print","printReceipt","payment_label","payment_date","payment_amount","navigationLinks","to","icon","AppNavLayout","setDrawerToggleState","handleUserSignOut","drawerOpen","selectedTab","setSelectedTab","theme","useTheme","handleDrawerToggle","root","AppBar","position","clsx","appBar","appBarShift","Toolbar","IconButton","color","aria-label","onClick","edge","menuButton","hide","Typography","noWrap","Drawer","drawer","anchor","paper","drawerPaper","ModalProps","onBackdropClick","BackdropProps","invisible","drawerHeader","direction","Divider","List","disablePadding","linkItem","parentIndex","Fragment","ListItem","Link","button","selected","parent","event","indexObject","ListItemIcon","ListItemText","primary","connect","state","dispatch","firebaseSignOutUser","setPaginationPage","toggleValue","toggleDrawer","withRouter","Layout","CssBaseline","pageTitle","Container","AppNav","Paper","rootPaper","useStyles","makeStyles","fontWeight","PageHeading","gutterBottom","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","InfoIcon","useStyles1","backgroundColor","green","palette","dark","main","amber","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","onClose","other","Icon","aria-describedby","action","CustomizedSnackbar","useState","setOpen","handleClose","reason","anchorOrigin","vertical","horizontal","autoHideDuration","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firebaseAuth","firebaseStorage","storage","firebaseFirestore","firestore","firebaseFunctions","functions","addNotice","notice","actionTypes","editNotice","editEmailTemplate","emailTemplate","addEmailTemplate","addProperty","property","editProperty","editPropertySetting","propertySetting","addPropertySetting","editPropertyUnitCharge","propertyUnitCharge","addPropertyUnitCharge","editPropertyUnit","propertyUnit","addPropertyUnit","addManagementFee","managementFee","editManagementFee","contactsFetchDataSuccess","contacts","addContact","contact","editContact","addTransaction","transaction","editTransaction","editCompanyProfile","addCompanyProfile","editUser","user","addUser","editTransactionCharge","transactionCharge","addTransactionCharge","editCommunicationEmail","communicationEmail","addCommunicationEmail","editLease","lease","addLease","editToDo","toDo","addToDo","editExpense","expense","addExpense","editMeterReading","meterReading","addMeterReading","editMaintenanceRequest","maintenanceRequest","addMaintenanceRequest","firebaseStorageRef","ref","setDatabaseRefCustomClaim","httpsCallable","createUser","userDetails","email","password","fetch","method","headers","then","response","ok","json","data","catch","err","console","log","loginUser","token","localStorage","setItem","createTenant","getItem","adminCreateFirebaseUser","updateFirebaseUser","deleteFirebaseUsers","setCurrentUser","signOut","finally","getUserDetails","a","displayName","emailVerified","photoURL","uid","user_id","isAdmin","tenant_id","tenantId","resetUserPasswordByEmail","sendPasswordResetEmail","handleCodeInApp","url","signUpWithEmailAndPassword","returnValue","createdUser","Error","signInUserWithEmailAndPassword","authCredential","errorCode","code","sendEmails","from_user","recipients","sendEmail","replyTo","details","deleteUploadedFileByUrl","fileUrl","refFromURL","delete","uploadFilesToFirebase","fileToUpload","fileRef","child","putString","snapshot","getDownloadURL","tenantsFetchData","collectionsUrls","itemsIsLoading","tenants","fetchedItems","doc","fetchedObject","contactsActions","itemsHasErrored","bool","isLoading","handleDelete","itemId","getDatabaseRef","collection","propertySettingId","companyProfileId","propertyId","propertyUnitId","contactId","transactionChargeId","leaseId","transactionId","toDoId","propertyUnitChargeId","maintenanceRequestId","noticeId","emailTemplateId","managementFeeId","expenseId","userId","meterReadingId","communicationEmailId","handleContactCreation","addedItem","handleItemFormSubmit","Promise","resolve","reject","update","docRef","modifiedObject","propertySettingsActions","companyProfileActions","propertyActions","propertyUnitActions","propertyUnitChargeActions","transactionChargesActions","leaseActions","transactionsActions","toDoActions","maintenanceRequestsActions","vacatingNoticesActions","emailTemplatesActions","managementFeesActions","expensesActions","usersActions","meterReadingsActions","communicationEmailsActions","add","responsive","tooltips","mode","elements","line","fill","scales","yAxes","ticks","min","FilterYearSchema","Yup","shape","filter_year","typeError","required","positive","max","integer","monthsInYear","eachMonthOfInterval","start","startOfYear","startOfToday","end","endOfYear","currentYear","getFullYear","leases","properties","propertyUnits","transactionsCharges","transactions","transactionItems","setTransactionItems","propertyFilter","setPropertyFilter","chargesItems","setChargesItems","propertyActiveLeases","terminated","useEffect","transactionChargesForCurrentYear","charge_date","getYear","transactionsPaymentsForCurrentYear","totalProperties","length","occupiedHouses","unit_type","rentIncomeData","datasets","labels","monthDate","format","totalEachMonthPayments","payment","paymentDate","getMonth","currentTransaction","borderColor","hoverBackgroundColor","hoverBorderColor","totalEachMonthCharges","charge","chargeDate","charge_amount","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","Grid","container","justify","Box","border","borderRadius","initialValues","validationSchema","onSubmit","values","filterYear","parseInt","handleSubmit","touched","errors","handleChange","handleBlur","form","sm","TextField","fullWidth","select","onChange","target","MenuItem","onBlur","helperText","Button","size","startIcon","backdrop","zIndex","LoadingBackdrop","Backdrop","CircularProgress","ErrorBoundary","hasError","errorInfo","CustomSnackbar","PaymentEditForm","lazy","PropertyUnitPage","TenantDetailsPage","PropertyPage","PropertiesPage","ExpensesPage","ExpensePage","UsersPage","LeasePage","LeasesPage","AuditLogsPage","RentRollPage","ContactsPage","ContactPage","PaymentPage","PaymentsPage","MaintenancesPage","PropertyDetailsPage","UserPage","UserProfilePage","ManagementFeePage","MaintenanceRequestPage","ToDosPage","DocumentsTemplatesPage","DocumentTemplatePage","NoticePage","NoticesPage","PropertyIncomeStatement","PropertyPerformancePage","TenantsStatementsPage","EmailPage","EmailsPage","AccountSettingsPage","MeterReadingPage","MeterReadingsPage","OtherChargesPage","OutstandingBalancesPage","MainPage","currentUser","match","fetchData","setUser","setError","history","useHistory","onAuthStateChanged","fallback","exact","path","DashBoard","tenant","maxWidth","SignUpSchema","confirmPassword","test","trim","phone_number","paragraph","resetForm","setStatus","setSubmitting","primary_email","status","isSubmitting","Alert","severity","InputLabelProps","shrink","disabled","RouterLink","ResetPasswordSchema","FormDialog","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","FormControl","FormHelperText","autoFocus","DialogActions","SignInSchema","marginTop","flexDirection","avatar","secondary","handleClickOpen","signedInUser","passwordOrOtherError","Avatar","emailVerificationSuccess","setEmailVerificationSuccess","emailVerificationError","setEmailVerificationError","params","queryString","location","search","actionCode","oobCode","applyEmailConfirmationCode","applyActionCode","p","verifyPasswordResetCode","newPassword","confirmPasswordReset","render","Copyright","createMuiTheme","typography","fontFamily","appFeatures","description","footers","HomePage","mobileOpen","setMobileOpen","homePageToolBar","element","getElementById","toLowerCase","scrollIntoView","ReactRouterLink","ThemeProvider","homePageMenuButton","homePageToolbarTitle","Hidden","smDown","implementation","link","mdUp","keepMounted","homePageContent","heroContent","lg","boldFont","src","alt","fullHeightWidthContainer","feature","featureIndex","mt","App","store","AccountActions","SignUpPage","SignInPage","MainRoutePage","propertyUnitCharges","managementFees","managementFeesId","auditLogs","propertySettings","maintenanceRequests","users","communicationEmails","transactionCharges","notices","companyProfiles","accountBillings","accountBilling","accountBillingId","expenses","toDos","meterReadings","emailTemplates","nestedLink","reducers","communicationEmailsReducers","communication_emails","propertyReducers","propertyUnitChargesReducers","propertyUnitsReducers","companyProfileReducers","managementFeesReducers","usersReducers","propertySettingsReducers","expensesReducers","contactsReducers","leaseReducers","transactionChargesReducers","transactionsReducers","maintenanceRequestsReducers","emailTemplatesReducers","meterReadingsReducers","toDosReducers","noticesReducers","accountBillingsReducers","logsReducers","AppTheme","createStore","applyMiddleware","thunk","next","setTenantId","marginBottom","marginLeft","paddingRight","paddingLeft","paddingBottom","paddingTop","minHeight","minWidth","red","buttonBox","fileInputDisplayNone","largeAvatar","quillEditor","height","overflow","oneMarginRight","oneMarginTopBottom","flexGrow","nested","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","padding","flexShrink","mixins","toolbar","justifyContent","contentShift","ul","listStyle","textWhite","breakpoints","up","flexWrap","reviewBox","cardHeader","grey","cardPricing","borderTop","divider","settings","cacheSizeBytes","enablePersistence","db","currentTenantId"],"mappings":"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ob6BL,EhBnbjD,CACHxY,KAAM+P,IACN8I,gBgBiaG,oCAqBSxN,GblbeyN,EakbiCN,EbjbzD,CACHxY,KAAM+P,IACN+I,oBa0ZG,oCA0BSzN,GX9bU0N,EW8b6BP,EX7bhD,CACHxY,KAAM+P,IACNgJ,eWiaG,oCA+BS1N,GP5boB2N,EO4buCR,EP3bpE,CACHxY,KAAM+P,IACNiJ,yBO0ZG,oCAoCS3N,GLjcQ4N,EKic0BT,ELhc3C,CACHxY,KAAM+P,IACNkJ,aK0ZG,oCAwCS5N,GV5cc6N,EU4ciCV,EV3cxD,CACHxY,KAAM+P,IACNmJ,mBUiaG,oCA6CS7N,GJ1cO8N,EI0cyBX,EJzczC,CACHxY,KAAM+P,IACNoJ,YI0ZG,oCAiDS9N,Gd9cqB+N,Ec8cuCZ,Ed7crE,CACHxY,KAAM+P,IACNqJ,0Bc0ZG,oCAqDS/N,GDldqBgO,ECkdwCb,EDjdtE,CACHxY,KAAM+P,IACNsJ,0BC0ZG,oCA0DShO,GlB9dSiO,EkB8doCd,ElB7dtD,CACHxY,KAAM+P,IACNuJ,ckBiaG,oCA+DSjO,GjB5dgBkO,EiB4dmCf,EjB3d5D,CACHxY,KAAM+P,IACNwJ,qBiB0ZG,oCAoESlO,GZxegBmO,EYwemChB,EZve5D,CACHxY,KAAM+P,IACNyJ,qBYiaG,oCAyESnO,GHteUoO,EGse6BjB,EHrehD,CACHxY,KAAM+P,IACN0J,eG0ZG,oCA8ESpO,GR3eOqO,EQ2e0BlB,ER1e1C,CACHxY,KAAM+P,IACN2J,YQ0ZG,oCAmFSrO,GFhfesO,EEgfkCnB,EF/e1D,CACHxY,KAAM+P,IACN4J,oBE0ZG,oCAwFStO,GNrfqBuO,EMqfwCpB,ENpftE,CACHxY,KAAM+P,IACN6J,0BM0ZG,mHAiGCvO,EAAS+M,GAAgB,KAAM1K,UAC/BrC,EAASyM,IAAe,IACxBvD,QAAQC,IAAI,6BAAZ,MAnGD,kCN7ZJ,IAAkCoF,EIAND,ENARD,EKAGD,ETPMD,ELOAD,EDPPD,EiBOYD,EbAAD,EUAdD,ENPOD,EKOND,EFAYD,EJPVD,EFOKD,EHPJD,EOOMD,ENACD,Ie6Z3B,qBAAP,sDAyGG,SAASkB,GAAsB/T,EAAeoQ,GAEj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","file":"static/js/main.cc581a69.chunk.js","sourcesContent":["import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { commonStyles } from \"../components/commonStyles\";\n\nlet InfoDisplayPaper = (props) => {\n\tconst classes = commonStyles();\n\treturn (\n\t\t<Grid item xs={props.xs} md>\n\t\t\t<Paper\n\t\t\t\tclassName={classes.infoDisplayPaper}\n\t\t\t\tvariant=\"elevation\"\n\t\t\t>\n\t\t\t\t<Typography component=\"h3\" variant=\"h6\" align=\"center\">\n\t\t\t\t\t{props.value}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant=\"subtitle1\" align=\"center\">\n\t\t\t\t\t{props.title}\n\t\t\t\t</Typography>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n};\n\nexport default InfoDisplayPaper;\n","import React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nconst headRoot = document.head;\n\nclass CustomHead extends React.Component {\n    render() {\n        return ReactDOM.createPortal(this.props.children, headRoot);\n    }\n}\n\nconst Head = (props) => {\n    return (\n        <CustomHead>\n            <meta charSet=\"utf-8\" />\n            <title>{props.title}</title>\n            <meta\n                name=\"description\"\n                content=\"DigitalDairy Dairy Farm Management Services. DigitalDairy offers the best dairy farm management technologies including software applications, digital devices and instruments, automation services and equipment and other I.T solutions. \"\n            />\n            <meta\n                name=\"viewport\"\n                content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n            />\n            <meta\n                name=\"keywords\"\n                content=\"Dairy Farms, Dairy Farm Management, DigitalDairy, Digital Dairy Farms, Technology in Dairy Farms, Cow Management, Smart Dairy, Dairy Tech, Dairy Technology\"\n            />\n            <meta name=\"author\" content=\"Brian Waweru Muciri, DigitalDairy\" />\n            <meta name=\"theme-color\" content=\"#2F3BA2\" key=\"theme-color\" />\n            <link rel=\"icon\" href=\"/favicon.ico\" />\n            <link rel=\"manifest\" href=\"/manifest.json\" />\n            <meta\n                name=\"apple-mobile-web-app-capable\"\n                content=\"yes\"\n                key=\"apple-mobile-web-app-capable\"\n            />\n            <meta\n                name=\"apple-mobile-web-app-status-bar-style\"\n                content=\"black\"\n                key=\"apple-mobile-web-app-status-bar-style\"\n            />\n            <meta\n                name=\"apple-mobile-web-app-title\"\n                content=\"DigitalDairy Dairy Farm Management\"\n                key=\"apple-mobile-web-app-title\"\n            />\n            <link\n                rel=\"stylesheet\"\n                href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n            />\n        </CustomHead>\n    );\n};\n\nexport default Head;\n","// FOR COMPANY_PROFILES PAGE\nexport const COMPANY_PROFILES_FETCH_DATA_SUCCESS = \"COMPANY_PROFILES_FETCH_DATA_SUCCESS\";\nexport const ADD_COMPANY_PROFILE = \"ADD_COMPANY_PROFILE\";\nexport const EDIT_COMPANY_PROFILE = \"EDIT_COMPANY_PROFILE\";\nexport const DELETE_COMPANY_PROFILE = \"DELETE_COMPANY_PROFILE\";\n// FOR EXPENSES PAGE\nexport const EXPENSES_FETCH_DATA_SUCCESS = \"EXPENSES_FETCH_DATA_SUCCESS\";\nexport const ADD_EXPENSE = \"ADD_EXPENSE\";\nexport const EDIT_EXPENSE = \"EDIT_EXPENSE\";\nexport const DELETE_EXPENSE = \"DELETE_EXPENSE\";\n// FOR POPERTY_SETTINGS PAGE\nexport const PROPERTY_SETTINGS_FETCH_DATA_SUCCESS = \"PROPERTY_SETTINGS_FETCH_DATA_SUCCESS\";\nexport const ADD_PROPERTY_SETTING = \"ADD_PROPERTY_SETTING\";\nexport const EDIT_PROPERTY_SETTING = \"EDIT_PROPERTY_SETTING\";\nexport const DELETE_PROPERTY_SETTING = \"DELETE_PROPERTY_SETTING\";\n// FOR ACCOUNT_BILLING PAGE\nexport const ACCOUNT_BILLINGS_FETCH_DATA_SUCCESS = \"ACCOUNT_BILLINGS_FETCH_DATA_SUCCESS\";\nexport const ADD_ACCOUNT_BILLING = \"ADD_ACCOUNT_BILLING\";\nexport const EDIT_ACCOUNT_BILLING = \"EDIT_ACCOUNT_BILLING\";\nexport const DELETE_ACCOUNT_BILLING = \"DELETE_ACCOUNT_BILLING\";\n/// FOR TRANSACTION_CHARGES PAGE\nexport const TRANSACTION_CHARGES_FETCH_DATA_SUCCESS =\n\t\"TRANSACTION_CHARGES_FETCH_DATA_SUCCESS\";\nexport const ADD_TRANSACTION_CHARGE = \"ADD_TRANSACTION_CHARGE\";\nexport const EDIT_TRANSACTION_CHARGE = \"EDIT_TRANSACTION_CHARGE\";\nexport const DELETE_TRANSACTION_CHARGE = \"DELETE_TRANSACTION_CHARGE\";\n/// FOR MANAGEMENT FEES \nexport const MANAGEMENT_FEES_FETCH_DATA_SUCCESS = \"MANAGEMENT_FEES_FETCH_DATA_SUCCESS\";\nexport const ADD_MANAGEMENT_FEE = \"ADD_MANAGEMENT_FEE\";\nexport const EDIT_MANAGEMENT_FEE = \"EDIT_MANAGEMENT_FEE\";\nexport const DELETE_MANAGEMENT_FEE = \"DELETE_MANAGEMENT_FEE\";\n/// FOR LEASES PAGE\nexport const LEASES_FETCH_DATA_SUCCESS = \"LEASES_FETCH_DATA_SUCCESS\";\nexport const ADD_LEASE = \"ADD_LEASE\";\nexport const EDIT_LEASE = \"EDIT_LEASE\";\nexport const DELETE_LEASE = \"DELETE_LEASE\";\n/// FOR EMAILS PAGE\nexport const EMAILS_FETCH_DATA_SUCCESS = \"EMAILS_FETCH_DATA_SUCCESS\";\nexport const ADD_EMAIL = \"ADD_EMAIL\";\nexport const EDIT_EMAIL = \"EDIT_EMAIL\";\nexport const DELETE_EMAIL = \"DELETE_EMAIL\";\n/// FOR PROPERTY_UNIT_CHARGES PAGE\nexport const PROPERTY_UNIT_CHARGES_FETCH_DATA_SUCCESS = \"PROPERTY_UNIT_CHARGES_FETCH_DATA_SUCCESS\";\nexport const ADD_PROPERTY_UNIT_CHARGE = \"ADD_PROPERTY_UNIT_CHARGE\";\nexport const EDIT_PROPERTY_UNIT_CHARGE = \"EDIT_PROPERTY_UNIT_CHARGE\";\nexport const DELETE_PROPERTY_UNIT_CHARGE = \"DELETE_PROPERTY_UNIT_CHARGE\";\n/// FOR PROPERTY_UNITS PAGE\nexport const PROPERTY_UNITS_FETCH_DATA_SUCCESS = \"PROPERTY_UNITS_FETCH_DATA_SUCCESS\";\nexport const ADD_PROPERTY_UNIT = \"ADD_PROPERTY_UNIT\";\nexport const EDIT_PROPERTY_UNIT = \"EDIT_PROPERTY_UNIT\";\nexport const DELETE_PROPERTY_UNIT = \"DELETE_PROPERTY_UNIT\";\n/// FOR COMMUNICATION EMAILS PAGE\nexport const COMMUNICATION_EMAILS_FETCH_DATA_SUCCESS = \"COMMUNICATION_EMAILS_FETCH_DATA_SUCCESS\";\nexport const ADD_COMMUNICATION_EMAIL = \"ADD_COMMUNICATION_EMAIL\";\nexport const EDIT_COMMUNICATION_EMAIL = \"EDIT_COMMUNICATION_EMAIL\";\nexport const DELETE_COMMUNICATION_EMAIL = \"DELETE_COMMUNICATION_EMAIL\";\n/// FOR TRANSACTIONS PAGE\nexport const TRANSACTIONS_FETCH_DATA_SUCCESS =\n\t\"TRANSACTIONS_FETCH_DATA_SUCCESS\";\nexport const ADD_TRANSACTION = \"ADD_TRANSACTION\";\nexport const EDIT_TRANSACTION = \"EDIT_TRANSACTION\";\nexport const DELETE_TRANSACTION = \"DELETE_TRANSACTION\";\n// FOR MAINTENANCE REQUESTS PAGE\nexport const MAINTENANCE_REQUESTS_FETCH_DATA_SUCCESS =\n\t\"MAINTENANCE_REQUESTS_FETCH_DATA_SUCCESS\";\nexport const ADD_MAINTENANCE_REQUEST = \"ADD_MAINTENANCE_REQUEST\";\nexport const EDIT_MAINTENANCE_REQUEST = \"EDIT_MAINTENANCE_REQUEST\";\nexport const DELETE_MAINTENANCE_REQUEST = \"DELETE_MAINTENANCE_REQUEST\";\n// FOR TO-DOS PAGE\nexport const TO_DOS_FETCH_DATA_SUCCESS = \"TO_DOS_FETCH_DATA_SUCCESS\";\nexport const ADD_TO_DO = \"ADD_TO_DO\";\nexport const EDIT_TO_DO = \"EDIT_TO_DO\";\nexport const DELETE_TO_DO = \"DELETE_TO_DO\";\n// FOR PROPERTIES PAGE\nexport const PROPERTIES_FETCH_DATA_SUCCESS = \"PROPERTIES_FETCH_DATA_SUCCESS\";\nexport const ADD_PROPERTY = \"ADD_PROPERTY\";\nexport const EDIT_PROPERTY = \"EDIT_PROPERTY\";\nexport const DELETE_PROPERTY = \"DELETE_PROPERTY\";\n// METER_READINGS PAGE\nexport const METER_READINGS_FETCH_DATA_SUCCESS = \"METER_READINGS_FETCH_DATA_SUCCESS\";\nexport const ADD_METER_READING = \"ADD_METER_READING\";\nexport const EDIT_METER_READING = \"EDIT_METER_READING\";\nexport const DELETE_METER_READING = \"DELETE_METER_READING\";\n// USERS PAGE\nexport const USERS_FETCH_DATA_SUCCESS = \"USERS_FETCH_DATA_SUCCESS\";\nexport const ADD_USER = \"ADD_USER\";\nexport const EDIT_USER = \"EDIT_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\n//EMAIL_TEMPLATES PAGE\nexport const EMAIL_TEMPLATES_FETCH_DATA_SUCCESS = \"EMAIL_TEMPLATES_FETCH_DATA_SUCCESS\";\nexport const ADD_EMAIL_TEMPLATE = \"ADD_EMAIL_TEMPLATE\";\nexport const EDIT_EMAIL_TEMPLATE = \"EDIT_EMAIL_TEMPLATE\";\nexport const DELETE_EMAIL_TEMPLATE = \"DELETE_EMAIL_TEMPLATE\";\n/// AUDIT_LOGS PAGE\nexport const AUDIT_LOGS_FETCH_DATA_SUCCESS = \"AUDIT_LOGS_FETCH_DATA_SUCCESS\";\nexport const ADD_AUDIT_LOG = \"ADD_AUDIT_LOG\";\nexport const EDIT_AUDIT_LOG = \"EDIT_AUDIT_LOG\";\nexport const DELETE_AUDIT_LOG = \"DELETE_AUDIT_LOG\";\n// CONTACTS PAGE\nexport const CONTACTS_FETCH_DATA_SUCCESS = \"CONTACTS_FETCH_DATA_SUCCESS\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const EDIT_CONTACT = \"EDIT_CONTACT\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\n// NOTICES PAGE\nexport const NOTICES_FETCH_DATA_SUCCESS = \"NOTICES_FETCH_DATA_SUCCESS\";\nexport const ADD_NOTICE = \"ADD_NOTICE\";\nexport const EDIT_NOTICE = \"EDIT_NOTICE\";\nexport const DELETE_NOTICE = \"DELETE_NOTICE\";\n// FOR MORE THAN 1 PAGE\nexport const ITEMS_HAS_ERRORED = \"ITEMS_HAS_ERRORED\";\nexport const SET_PAGINATION_PAGE = \"SET_PAGINATION_PAGE\";\nexport const TOGGLE_DRAWER = \"TOGGLE_DRAWER\";\nexport const ITEMS_IS_LOADING = \"ITEMS_IS_LOADING\";\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER'\n","import XLSX from \"xlsx\";\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nlet companyProfile = {};\n\nexport function setCompanyProfile(companyProfileData) {\n    companyProfile = companyProfileData\n}\n\nexport function readXlsxFile(fileData) {\n    let readData = XLSX.read(fileData, { type: 'binary' });\n    const wsname = readData.SheetNames[0];\n    const ws = readData.Sheets[wsname];\n\n    /* Convert array to json*/\n    const dataParse = XLSX.utils.sheet_to_json(ws, { defval: \"\" });\n    return dataParse\n}\n\nconst makeCell = (content, rowIndex = -1, options = {}) => {\n    return Object.assign({ text: content, fillColor: rowIndex % 2 ? 'white' : '#e8e8e8' }, options);\n}\n// -- Format the table cells for presentation.\nconst thl = (content, rowIndex = -1, options = {}) => {\n    return makeCell(content, rowIndex, Object.assign({ bold: true, alignment: 'left', fontSize: 9 }, options));\n}\n\nconst tdl = (content, rowIndex = -1, options = {}) => {\n    return makeCell(content, rowIndex, Object.assign({ bold: false, alignment: 'left', fontSize: 9 }, options));\n}\nconst getReportDate = () => {\n    return new Date().toDateString()\n}\n\n// -- Create a base document template for the reports.\nconst createDocumentDefinition = (reportTitle, ...contentParts) => {\n    const baseDocDefinition = {\n        pageSize: 'A4',\n        info: {\n            title: `${companyProfile.company_name} - ${reportTitle}`,\n            author: 'RentGate Property Management Services',\n            subject: `${reportTitle}`,\n            keywords: `${reportTitle}`,\n        },\n        footer: (currentPage, pageCount) => {\n            return {\n                text: `RentGate Property Management : Page ${currentPage.toString()} of ${pageCount.toString()}`,\n                alignment: 'center',\n                fontSize: 7\n            }\n        },\n        styles: {\n            title: {\n                fontSize: 14,\n                alignment: 'center',\n                margin: [0, 0, 0, 8],\n            },\n            titleSub: {\n                fontSize: 12,\n                alignment: 'center',\n                margin: [0, 0, 0, 5],\n            },\n            titleDate: {\n                fontSize: 10,\n                alignment: 'right',\n                margin: [0, 0, 0, 2],\n            }\n        },\n\n        content: [\n            {\n                text: `${companyProfile.company_name}`, style: 'title', width: '*'\n            },\n            { text: reportTitle, style: 'titleSub', width: '*' },\n            { text: `Created: ${getReportDate()}`, style: 'titleDate', width: '*' },\n        ],\n    };\n    const docDefinition = JSON.parse(JSON.stringify(baseDocDefinition));\n    docDefinition.footer = baseDocDefinition.footer;\n    docDefinition.content.push(...contentParts);\n    return docDefinition;\n};\n\nexport const printDocument = (reportName, reportTitle, documentContent) => {\n    const docDefinition = createDocumentDefinition(reportTitle, documentContent);\n    // pdfMake.createPdf(docDefinition).download(`underlyingLoanSummary-.pdf`);\n    pdfMake.createPdf(docDefinition).open()\n}\n\n\n// -- Generate the Pdf with Data in Rows.\nexport function printDataRows(reportName, reportTitle, headCells, dataToPrint) {\n    const headCellsToPrint = headCells.filter(({ id }) => id !== 'edit' && id !== 'delete' && id !== 'details')\n\n    const fontSize = 9;\n\n    // -- Generate the body of the document table, with headings\n    const tableBody = (dataRows) => {\n        const tableHeadRow = headCellsToPrint.map((headCell) => thl(`${headCell.label}`, -1, { rowSpan: 1, fontSize: fontSize }))\n\n        const body = [\n            tableHeadRow,\n        ];\n\n        dataRows.forEach((row, index) => {\n            const tableRow = [];\n            headCellsToPrint.forEach((headCell) => {\n                tableRow.push(tdl(row[headCell.id], index, { fontSize: fontSize }));\n            });\n            body.push(tableRow);\n        });\n        return body;\n    }\n\n    const tableColumnWidths = headCellsToPrint.map((headCell) => 'auto');\n\n    // -- The main report table, with the table body.\n    const tableData = {\n        table: {\n            headerRows: 1,\n            widths: tableColumnWidths,\n            body: tableBody(dataToPrint),\n        }\n    };\n    printDocument(`${reportName} ${getReportDate()}`, reportTitle, tableData)\n}\n\nconst printDataToExcel = (title, subject, dataToExport, fileName) => {\n    var workBook = XLSX.utils.book_new();\n    workBook.Props = {\n        Title: title,\n        Subject: subject,\n        Author: \"RentGate Property Management\",\n        CreatedDate: new Date(),\n    };\n    var workBookSheetData = dataToExport;\n    var workBookSheet = XLSX.utils.json_to_sheet(workBookSheetData);\n    XLSX.utils.book_append_sheet(workBook, workBookSheet, \"Sheet1\");\n    XLSX.writeFile(workBook, `${fileName} - ${new Date().toDateString()}.xlsx`);\n}\n\nexport function exportDataUploadTemplate(title, subject, headCells, fileName) {\n    const dataToExport = [];\n    [{}].forEach((row) => {\n        const tableRow = {};\n        headCells.forEach((headCell) => {\n            tableRow[headCell] = row[headCell]\n        });\n        dataToExport.push(tableRow);\n    });\n    printDataToExcel(title, subject, dataToExport, fileName)\n}\n\nexport default function exportDataToXSL(title, subject, headCells, dataRows, fileName) {\n    const headCellsToPrint = headCells.filter(({ id }) => id !== 'edit' && id !== 'delete' && id !== 'details')\n    const dataToExport = [];\n    dataRows.forEach((row) => {\n        const tableRow = {};\n        headCellsToPrint.forEach((headCell) => {\n            tableRow[headCell.label] = row[headCell.id]\n        });\n        dataToExport.push(tableRow);\n    });\n    printDataToExcel(title, subject, dataToExport, fileName)\n}\nexport function exportPropertyStatementDataToXSL(title, subject, headCells, dataRows, fileName) {\n    const headCellsToPrint = [title.includes(\"Income\") ? \"income_type\" : \"expense_type\", ...headCells]\n    const dataToExport = [];\n    dataRows.forEach((row) => {\n        const tableRow = {};\n        headCellsToPrint.forEach((headCell) => {\n            tableRow[headCell] = row[headCell]\n        });\n        dataToExport.push(tableRow);\n    });\n    printDataToExcel(title, subject, dataToExport, fileName)\n}\n\nexport function printInvoice(tenantDetails, items) {\n    const text = `\n    <!doctype html>\n    <html>\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Invoice</title>\n        <style>\n        .invoice-box {\n            max-width: 800px;\n            margin: auto;\n            padding: 30px;\n            font-size: 16px;\n            line-height: 24px;\n            font-family: 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;\n            color: #555;\n        }\n        .invoice-box table {\n            width: 100%;\n            line-height: inherit;\n            text-align: left;\n        }\n        .invoice-box table td {\n            padding: 5px;\n            vertical-align: top;\n        }\n        .invoice-box table tr td:nth-child(2), .invoice-box table tr td:nth-child(3) {\n            text-align: right;\n        }            \n        .invoice-box table tr.top table td {\n            padding-bottom: 20px;\n        }\n        .invoice-box table tr.top table td.title {\n            font-size: 45px;\n            line-height: 45px;\n            color: #333;\n        }\n        .invoice-box table tr.information table td {\n            padding-bottom: 40px;\n        }\n        .invoice-box table tr.heading td {\n            background: #eee;\n            border-bottom: 1px solid #ddd;\n            font-weight: bold;\n        }\n        .invoice-box table tr.details td {\n            padding-bottom: 20px;\n        }\n        .invoice-box table tr.item td{\n            border-bottom: 1px solid #eee;\n        }\n        .invoice-box table tr.item.last td {\n            border-bottom: none;\n        }\n        .invoice-box table tr.total td:nth-child(3) {\n            border-top: 2px solid #eee;\n            font-weight: bold;\n        }\n        @media only screen and (max-width: 600px) {\n            .invoice-box table tr.top table td {\n                width: 100%;\n                display: block;\n                text-align: center;\n            }\n            .invoice-box table tr.information table td {\n                width: 100%;\n                display: block;\n                text-align: center;\n            }\n        }\n        /** RTL **/\n        .rtl {\n            direction: rtl;\n            font-family: Tahoma, 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;\n        }\n        .rtl table {\n            text-align: right;\n        }\n        .rtl table tr td:nth-child(2) {\n            text-align: left;\n        }\n        </style>\n    </head>\n    <body onafterprint=\"self.close()\">\n        <div class=\"invoice-box\">\n            <table cellpadding=\"0\" cellspacing=\"0\">\n                <tr class=\"top\">\n                    <td colspan=\"3\">\n                        <table>\n                            <tr>\n                                <td class=\"title\">\n                                </td>\n                                <td>\n                                    Invoice #: ${new Date().toISOString().slice(0, 10)}-${tenantDetails.id_number}<br>\n                                    Created: ${new Date().toLocaleString()}<br>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n                <tr class=\"information\">\n                    <td colspan=\"3\">\n                        <table>\n                            <tr>\n                                <td>\n                                    ${companyProfile.company_name}<br>\n                                    ${companyProfile.company_address}<br>\n                                    ${companyProfile.company_phone_number}<br>\n                                    ${companyProfile.company_primary_email}\n                                </td>\n                                \n                                <td>\n                                    ${tenantDetails.first_name} ${tenantDetails.last_name}<br>\n                                    ${tenantDetails.id_number}<br>\n                                    ${tenantDetails.personal_phone_number}<br>\n                                    ${tenantDetails.contact_email}\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n                <tr class=\"heading\">\n                    <td>\n                        Item\n                    </td>\n                    <td>\n                        Due Date\n                    </td>\n                    <td>\n                        Amount\n                    </td>\n                </tr>\n                ${Array.from(items).map(item =>\n        `<tr class=\"item\">\n        <td>\n          ${item.charge_label}\n        </td>\n        <td>\n          ${item.due_date}\n        </td>\n        <td>\n          Ksh ${item.balance}\n        </td>\n      </tr>`\n    )}\n                <tr class=\"total\">\n                    <td></td>\n                    <td></td>\n                    <td>\n                       Total: Ksh: ${Array.from(items).reduce((total, currentValue) => total + (parseFloat(currentValue.balance) || 0), 0)}\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </body>\n    </html>`\n    const my_window = window.open('', 'mywindow', 'status=1');\n    my_window.document.write(text);\n    my_window.print();\n\n}\n\nexport function printReceipt(tenantDetails, items) {\n    const text = `\n    <!doctype html>\n    <html>\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Receipt</title>\n        <style>\n        .invoice-box {\n            max-width: 800px;\n            margin: auto;\n            padding: 30px;\n            font-size: 16px;\n            line-height: 24px;\n            font-family: 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;\n            color: #555;\n        }\n        .invoice-box table {\n            width: 100%;\n            line-height: inherit;\n            text-align: left;\n        }\n        .invoice-box table td {\n            padding: 5px;\n            vertical-align: top;\n        }\n        .invoice-box table tr td:nth-child(2), .invoice-box table tr td:nth-child(3) {\n            text-align: right;\n        }\n        .invoice-box table tr.top table td {\n            padding-bottom: 20px;\n        }\n        .invoice-box table tr.top table td.title {\n            font-size: 45px;\n            line-height: 45px;\n            color: #333;\n        }\n        .invoice-box table tr.information table td {\n            padding-bottom: 40px;\n        }\n        .invoice-box table tr.heading td {\n            background: #eee;\n            border-bottom: 1px solid #ddd;\n            font-weight: bold;\n        }\n        .invoice-box table tr.details td {\n            padding-bottom: 20px;\n        }\n        .invoice-box table tr.item td{\n            border-bottom: 1px solid #eee;\n        }\n        .invoice-box table tr.item.last td {\n            border-bottom: none;\n        }\n        .invoice-box table tr.total td:nth-child(3) {\n            border-top: 2px solid #eee;\n            font-weight: bold;\n        }\n        @media only screen and (max-width: 600px) {\n            .invoice-box table tr.top table td {\n                width: 100%;\n                display: block;\n                text-align: center;\n            }\n            .invoice-box table tr.information table td {\n                width: 100%;\n                display: block;\n                text-align: center;\n            }\n        }\n        /** RTL **/\n        .rtl {\n            direction: rtl;\n            font-family: Tahoma, 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;\n        }\n        .rtl table {\n            text-align: right;\n        }\n        .rtl table tr td:nth-child(2) {\n            text-align: left;\n        }\n        </style>\n    </head>\n    <body onafterprint=\"self.close()\">\n        <div class=\"invoice-box\">\n            <table cellpadding=\"0\" cellspacing=\"0\">\n                <tr class=\"top\">\n                    <td colspan=\"3\">\n                        <table>\n                            <tr>\n                                <td class=\"title\">\n                                    <img src=\"\" style=\"width:100%; max-width:300px;\">\n                                </td>\n                                \n                                <td>\n                                    Receipt #: ${new Date().toISOString().slice(0, 10)}-${tenantDetails.id_number}<br>\n                                    Created: ${new Date().toLocaleString()}<br>\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n                <tr class=\"information\">\n                    <td colspan=\"3\">\n                        <table>\n                            <tr>\n                                <td>\n                                    ${companyProfile.company_name}<br>\n                                    ${companyProfile.company_address}<br>\n                                    ${companyProfile.company_phone_number}<br>\n                                    ${companyProfile.company_primary_email}\n                                </td>\n                                \n                                <td>\n                                    ${tenantDetails.first_name} ${tenantDetails.last_name}<br>\n                                    ${tenantDetails.id_number}<br>\n                                    ${tenantDetails.personal_phone_number}<br>\n                                    ${tenantDetails.contact_email}\n                                </td>\n                            </tr>\n                        </table>\n                    </td>\n                </tr>\n                <tr class=\"heading\">\n                    <td>\n                        Item\n                    </td>\n                    <td>\n                        Payment Date\n                    </td>\n                    <td>\n                        Amount\n                    </td>\n                </tr>\n                ${Array.from(items).map(item =>\n        `<tr class=\"item\">\n        <td>\n          ${item.payment_label}\n        </td>\n        <td>\n          ${item.payment_date}\n        </td>\n        <td>\n          Ksh ${item.payment_amount}\n        </td>\n      </tr>`\n    )}\n                <tr class=\"total\">\n                    <td></td>\n                    <td></td>\n                    <td>\n                       Total: Ksh: ${Array.from(items).reduce((total, currentValue) => total + (parseFloat(currentValue.payment_amount) || 0), 0)}\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </body>\n    </html>`\n    const my_window = window.open('', 'mywindow', 'status=1');\n    my_window.document.write(text);\n    my_window.print();\n} ","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    firebaseSignOutUser, setPaginationPage, toggleDrawer\n} from \"../actions/actions\";\nimport {\n    withRouter,\n    Link,\n} from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport MoneyIcon from \"@material-ui/icons/Money\";\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport HouseIcon from \"@material-ui/icons/House\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport NoteIcon from '@material-ui/icons/Note';\nimport LockIcon from '@material-ui/icons/Lock';\nimport ApartmentIcon from '@material-ui/icons/Apartment';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport WorkIcon from '@material-ui/icons/Work';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\n\n\nconst navigationLinks = [\n    { text: \"Home\", to: \"/app/\", icon: <DashboardIcon /> },\n    { text: \"Tenants\", to: \"/app/contacts\", icon: <ContactsIcon /> },\n    { text: \"User Management\", to: \"/app/users\", icon: <GroupAddIcon /> },\n    { text: \"Email\", to: \"/app/emails\", icon: <ContactMailIcon /> },\n    { text: \"Account Settings\", to: \"/app/account-settings\", icon: <SettingsIcon /> },\n    { text: \"Documents Templates\", to: \"/app/documents-templates\", icon: <ImportExportIcon /> },\n    { text: \"Audit Logs\", to: \"/app/audit-logs\", icon: <HistoryIcon /> },\n];\nconst othersLinkNestedLinks = [\n    { text: \"Vacating Notices\", to: \"/app/notices\", icon: <NoteIcon /> },\n    { text: \"Maintenance Requests\", to: \"/app/maintenance-requests\", icon: <EventNoteIcon /> },\n    { text: \"To-Dos\", to: \"/app/to-dos\", icon: <AssignmentIcon /> },\n];\n\nconst propertyLinkNestedLinks = [\n    { text: \"Properties\", to: \"/app/properties\", icon: <ApartmentIcon /> },\n    { text: \"Rental Agreements\", to: \"/app/leases\", icon: <WorkIcon /> },\n    { text: \"Meter Readings\", to: \"/app/meter-reading\", icon: <MonetizationOnIcon /> },\n];\n\nconst reportLinkNestedLinks = [\n    // *** NOTE *** include relevant data points on each of these modules for easy reference.\n    //show income here from all charges and provide a way to filter the charges according to type, \n    //show payments received from these charges and any outstanding balances\n    //show outstanding balances on tenant statements\n    {\n        text: \"Outstanding Balances\",\n        to: \"/app/reports/outstanding-balances\",\n        icon: <MoneyOffIcon />,\n    },\n    {\n        text: \"Properties Performance\",\n        to: \"/app/reports/property-performance\",\n        icon: <ShowChartIcon />,\n    },\n    {\n        text: \"Properties Income Statement\",\n        to: \"/app/reports/property-income\",\n        icon: <AssessmentIcon />,\n    },\n    {\n        text: \"Tenant Statements\",\n        to: \"/app/reports/tenant-statements\",\n        icon: <AttachMoneyIcon />,\n    },\n    //show income and expenses received from each property and show net income for each of the expenses\n    //show property occupancy rate over periods of time and provide for filtering criteria by property, unit, \n    //generate tenant statements and filtering criteria by each property and others\n    //show total of values and other relevant data points\n];\n\nconst accountsLinkNestedLinks = [\n    { text: \"Rent Roll\", to: \"/app/rent-roll\", icon: <ScheduleIcon /> },\n    { text: \"Other Charges\", to: \"/app/other-charges\", icon: <MoneyIcon /> },\n    { text: \"Payments\", to: \"/app/payments\", icon: <PaymentIcon /> },\n    {\n        text: \"Property Expenses\",\n        to: \"/app/property_expenditure\",\n        icon: <AccountBalanceWalletIcon />,\n    },\n];\n\nlet AppNavLayout = ({\n    setDrawerToggleState,\n    handleUserSignOut,\n    drawerOpen,\n    selectedTab,\n    setSelectedTab,\n    companyProfile,\n    classes,\n}) => {\n    const theme = useTheme();\n\n    const handleDrawerToggle = () => {\n        setDrawerToggleState(!drawerOpen);\n    };\n\n    const handleListItemClick = (indexObject) => {\n        setSelectedTab(Object.assign({}, selectedTab, { ...indexObject }));\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: drawerOpen,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerToggle}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap className={classes.title}>\n                        {companyProfile.company_name}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"temporary\"\n                anchor=\"left\"\n                open={drawerOpen}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n                ModalProps={{ onBackdropClick: handleDrawerToggle }}\n                BackdropProps={{ invisible: true }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerToggle}>\n                        {theme.direction === \"ltr\" ? (\n                            <ChevronLeftIcon />\n                        ) : (\n                                <ChevronRightIcon />\n                            )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List component=\"div\" disablePadding>\n                    {navigationLinks.slice(0, 2).map((linkItem, parentIndex) => (\n                        <React.Fragment key={parentIndex}>\n                            <ListItem\n                                component={Link}\n                                to={linkItem.to}\n                                button\n                                key={linkItem.text}\n                                selected={selectedTab.parent === parentIndex}\n                                onClick={(event) => {\n                                    handleListItemClick({\n                                        parent: parentIndex,\n                                    });\n                                    handleDrawerToggle();\n                                }}\n                            >\n                                <ListItemIcon>{linkItem.icon}</ListItemIcon>\n                                <ListItemText primary={linkItem.text} />\n                            </ListItem>\n                        </React.Fragment>\n                    ))}\n                    {/* Property Navigation Links */}\n                    {/*<ListItem*/}\n                    {/*    button*/}\n                    {/*    key={40}*/}\n                    {/*    onClick={(event) => {*/}\n                    {/*        event.preventDefault();*/}\n                    {/*        if (selectedTab.parent === 40) {*/}\n                    {/*            handleListItemClick({ parent: -1 });*/}\n                    {/*        }*/}\n                    {/*        else {*/}\n                    {/*            handleListItemClick({ parent: 40 });*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*>*/}\n                    {/*    <ListItemIcon>*/}\n                    {/*        <HouseIcon />*/}\n                    {/*    </ListItemIcon>*/}\n                    {/*    <ListItemText primary={\"Properties\"} />*/}\n                    {/*    {selectedTab.parent === 40 ? <ExpandLess /> : <ExpandMore />}*/}\n                    {/*</ListItem>*/}\n                    {/*<Collapse*/}\n                    {/*    in={selectedTab.parent === 40}*/}\n                    {/*    timeout=\"auto\"*/}\n                    {/*    unmountOnExit*/}\n                    {/*>*/}\n                    {/*    <List component=\"div\" disablePadding>*/}\n                    {/*        {propertyLinkNestedLinks.map(*/}\n                    {/*            (innerLinkItem, innerLinkItemIndex) => (*/}\n                    {/*                <ListItem*/}\n                    {/*                    component={Link}*/}\n                    {/*                    to={innerLinkItem.to}*/}\n                    {/*                    button*/}\n                    {/*                    className={classes.nested}*/}\n                    {/*                    key={innerLinkItem.text}*/}\n                    {/*                    selected={*/}\n                    {/*                        selectedTab.parent === 40 &&*/}\n                    {/*                        selectedTab.nestedLink === 'properties' + innerLinkItemIndex*/}\n                    {/*                    }*/}\n                    {/*                    onClick={(event) => {*/}\n                    {/*                        handleDrawerToggle();*/}\n                    {/*                        handleListItemClick({*/}\n                    {/*                            parent: 40,*/}\n                    {/*                            nestedLink: 'properties' + innerLinkItemIndex,*/}\n                    {/*                        });*/}\n                    {/*                    }}*/}\n                    {/*                >*/}\n                    {/*                    <ListItemIcon>{innerLinkItem.icon}</ListItemIcon>*/}\n                    {/*                    <ListItemText primary={innerLinkItem.text} />*/}\n                    {/*                </ListItem>*/}\n                    {/*            )*/}\n                    {/*        )}*/}\n                    {/*    </List>*/}\n                    {/*</Collapse>*/}\n                    {/*accounts tab here*/}\n                    {/*<ListItem*/}\n                    {/*    button*/}\n                    {/*    key={20}*/}\n                    {/*    onClick={(event) => {*/}\n                    {/*        event.preventDefault();*/}\n                    {/*        if (selectedTab.parent === 20) {*/}\n                    {/*            handleListItemClick({ parent: -1 });*/}\n                    {/*        }*/}\n                    {/*        else {*/}\n                    {/*            handleListItemClick({ parent: 20 });*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*>*/}\n                    {/*    <ListItemIcon>*/}\n                    {/*        <AccountBalanceIcon />*/}\n                    {/*    </ListItemIcon>*/}\n                    {/*    <ListItemText primary={\"Accounts\"} />*/}\n                    {/*    {selectedTab.parent === 20 ? <ExpandLess /> : <ExpandMore />}*/}\n                    {/*</ListItem>*/}\n                    {/*<Collapse*/}\n                    {/*    in={selectedTab.parent === 20}*/}\n                    {/*    timeout=\"auto\"*/}\n                    {/*    unmountOnExit*/}\n                    {/*>*/}\n                    {/*    <List component=\"div\" disablePadding>*/}\n                    {/*        {accountsLinkNestedLinks.map(*/}\n                    {/*            (innerLinkItem, innerLinkItemIndex) => (*/}\n                    {/*                <ListItem*/}\n                    {/*                    component={Link}*/}\n                    {/*                    to={innerLinkItem.to}*/}\n                    {/*                    button*/}\n                    {/*                    className={classes.nested}*/}\n                    {/*                    key={innerLinkItem.text}*/}\n                    {/*                    selected={*/}\n                    {/*                        selectedTab.parent === 20 &&*/}\n                    {/*                        selectedTab.nestedLink === 'account' + innerLinkItemIndex*/}\n                    {/*                    }*/}\n                    {/*                    onClick={(event) => {*/}\n                    {/*                        handleDrawerToggle();*/}\n                    {/*                        handleListItemClick({*/}\n                    {/*                            parent: 20,*/}\n                    {/*                            nestedLink: 'account' + innerLinkItemIndex,*/}\n                    {/*                        });*/}\n                    {/*                    }}*/}\n                    {/*                >*/}\n                    {/*                    <ListItemIcon>{innerLinkItem.icon}</ListItemIcon>*/}\n                    {/*                    <ListItemText primary={innerLinkItem.text} />*/}\n                    {/*                </ListItem>*/}\n                    {/*            )*/}\n                    {/*        )}*/}\n                    {/*    </List>*/}\n                    {/*</Collapse>*/}\n                    {/* others  tab here*/}\n                    {/*<ListItem*/}\n                    {/*    button*/}\n                    {/*    key={10}*/}\n                    {/*    onClick={(event) => {*/}\n                    {/*        event.preventDefault();*/}\n                    {/*        if (selectedTab.parent === 10) {*/}\n                    {/*            handleListItemClick({ parent: -1 });*/}\n                    {/*        }*/}\n                    {/*        else {*/}\n                    {/*            handleListItemClick({ parent: 10 });*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*>*/}\n                    {/*    <ListItemIcon>*/}\n                    {/*        <EventNoteIcon />*/}\n                    {/*    </ListItemIcon>*/}\n                    {/*    <ListItemText primary={\"Events\"} />*/}\n                    {/*    {selectedTab.parent === 10 ? <ExpandLess /> : <ExpandMore />}*/}\n                    {/*</ListItem>*/}\n                    {/*<Collapse*/}\n                    {/*    in={selectedTab.parent === 10}*/}\n                    {/*    timeout=\"auto\"*/}\n                    {/*    unmountOnExit*/}\n                    {/*>*/}\n                    {/*    <List component=\"div\" disablePadding>*/}\n                    {/*        {othersLinkNestedLinks.map(*/}\n                    {/*            (innerLinkItem, innerLinkItemIndex) => (*/}\n                    {/*                <ListItem*/}\n                    {/*                    component={Link}*/}\n                    {/*                    to={innerLinkItem.to}*/}\n                    {/*                    button*/}\n                    {/*                    className={classes.nested}*/}\n                    {/*                    key={innerLinkItem.text}*/}\n                    {/*                    selected={*/}\n                    {/*                        selectedTab.parent === 10 &&*/}\n                    {/*                        selectedTab.nestedLink === 'other' + innerLinkItemIndex*/}\n                    {/*                    }*/}\n                    {/*                    onClick={(event) => {*/}\n                    {/*                        handleDrawerToggle();*/}\n                    {/*                        handleListItemClick({*/}\n                    {/*                            parent: 10,*/}\n                    {/*                            nestedLink: 'other' + innerLinkItemIndex,*/}\n                    {/*                        });*/}\n                    {/*                    }}*/}\n                    {/*                >*/}\n                    {/*                    <ListItemIcon>{innerLinkItem.icon}</ListItemIcon>*/}\n                    {/*                    <ListItemText primary={innerLinkItem.text} />*/}\n                    {/*                </ListItem>*/}\n                    {/*            )*/}\n                    {/*        )}*/}\n                    {/*    </List>*/}\n                    {/*</Collapse>*/}\n                    {/*reports tab here*/}\n                    {/*<ListItem*/}\n                    {/*    button*/}\n                    {/*    key={30}*/}\n                    {/*    onClick={(event) => {*/}\n                    {/*        event.preventDefault();*/}\n                    {/*        if (selectedTab.parent === 30) {*/}\n                    {/*            handleListItemClick({ parent: -1 });*/}\n                    {/*        }*/}\n                    {/*        else {*/}\n                    {/*            handleListItemClick({ parent: 30 });*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*>*/}\n                    {/*    <ListItemIcon>*/}\n                    {/*        <TimelineIcon />*/}\n                    {/*    </ListItemIcon>*/}\n                    {/*    <ListItemText primary={\"Reports\"} />*/}\n                    {/*    {selectedTab.parent === 30 ? <ExpandLess /> : <ExpandMore />}*/}\n                    {/*</ListItem>*/}\n                    {/*<Collapse*/}\n                    {/*    in={selectedTab.parent === 30}*/}\n                    {/*    timeout=\"auto\"*/}\n                    {/*    unmountOnExit*/}\n                    {/*>*/}\n                    {/*    <List component=\"div\" disablePadding>*/}\n                    {/*        {reportLinkNestedLinks.map(*/}\n                    {/*            (innerLinkItem, innerLinkItemIndex) => (*/}\n                    {/*                <ListItem*/}\n                    {/*                    component={Link}*/}\n                    {/*                    to={innerLinkItem.to}*/}\n                    {/*                    button*/}\n                    {/*                    className={classes.nested}*/}\n                    {/*                    key={innerLinkItem.text}*/}\n                    {/*                    selected={*/}\n                    {/*                        selectedTab.parent === 30 &&*/}\n                    {/*                        selectedTab.nestedLink === 'report' + innerLinkItemIndex*/}\n                    {/*                    }*/}\n                    {/*                    onClick={(event) => {*/}\n                    {/*                        handleDrawerToggle();*/}\n                    {/*                        handleListItemClick({*/}\n                    {/*                            parent: 30,*/}\n                    {/*                            nestedLink: 'report' + innerLinkItemIndex,*/}\n                    {/*                        });*/}\n                    {/*                        handleDrawerToggle();*/}\n                    {/*                    }}*/}\n                    {/*                >*/}\n                    {/*                    <ListItemIcon>{innerLinkItem.icon}</ListItemIcon>*/}\n                    {/*                    <ListItemText primary={innerLinkItem.text} />*/}\n                    {/*                </ListItem>*/}\n                    {/*            )*/}\n                    {/*        )}*/}\n                    {/*    </List>*/}\n                    {/*</Collapse>*/}\n                    {/*{navigationLinks.slice(2).map((linkItem, listIndex) => {*/}\n                    {/*    const parentIndex = listIndex + 2;*/}\n                    {/*    return (*/}\n                    {/*        <React.Fragment key={parentIndex}>*/}\n                    {/*            <ListItem*/}\n                    {/*                component={Link}*/}\n                    {/*                to={linkItem.to}*/}\n                    {/*                button*/}\n                    {/*                key={linkItem.text}*/}\n                    {/*                selected={selectedTab.parent === parentIndex}*/}\n                    {/*                onClick={(event) => {*/}\n                    {/*                    handleListItemClick({*/}\n                    {/*                        parent: parentIndex,*/}\n                    {/*                    });*/}\n                    {/*                    handleDrawerToggle();*/}\n                    {/*                }}*/}\n                    {/*            >*/}\n                    {/*                <ListItemIcon>{linkItem.icon}</ListItemIcon>*/}\n                    {/*                <ListItemText primary={linkItem.text} />*/}\n                    {/*            </ListItem>*/}\n                    {/*        </React.Fragment>*/}\n                    {/*    )*/}\n                    {/*})}*/}\n                    <ListItem\n                        button\n                        key={\"sign-out-btn\"}\n                        selected={selectedTab.parent === \"sign-out-btn\"}\n                        onClick={(event) => {\n                            handleUserSignOut();\n                        }}\n                    >\n                        <ListItemIcon><LockIcon /></ListItemIcon>\n                        <ListItemText primary=\"Sign Out\" />\n                    </ListItem>\n                </List>\n            </Drawer>\n            <div className={classes.drawerHeader} />\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        companyProfile: state.companyProfile[0] || {},\n        drawerOpen: state.drawerOpen,\n        selectedTab: state.selectedTab,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleUserSignOut: () => dispatch(firebaseSignOutUser()),\n        setSelectedTab: (index) => dispatch(setPaginationPage(index)),\n        setDrawerToggleState: (toggleValue) => dispatch(toggleDrawer(toggleValue)),\n    };\n};\n\nAppNavLayout = connect(mapStateToProps, mapDispatchToProps)(AppNavLayout);\n\nexport default withRouter(AppNavLayout);\n","import Container from \"@material-ui/core/Container\";\nimport Head from \"./Head\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React from \"react\";\nimport AppNav from \"./AppNav\";\nimport {commonStyles} from './commonStyles'\n\nconst Layout = (props) => {\n\tconst classes = commonStyles()\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CssBaseline />\n\t\t\t<Head title={props.pageTitle} />\n\t\t\t<Container>\n\t\t\t\t<AppNav classes={classes} pageTitle={\"RentGate Property Management\"}/>\n\t\t\t\t<Paper className={classes.rootPaper}>{props.children}</Paper>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n};\nexport default Layout;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontWeight: 700,\n    },\n}));\n\nexport default function PageHeading(props) {\n    const styles = useStyles();\n    return (\n        <Typography\n            align=\"left\"\n            variant=\"h5\"\n            className={styles.root}\n            gutterBottom\n        >\n            {props.text ? props.text : \"Page Heading\"}\n        </Typography>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles((theme) => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n    const classes = useStyles1();\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContentWrapper.propTypes = {\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"])\n        .isRequired,\n};\n\nexport default function CustomizedSnackbar(props) {\n    const [open, setOpen] = React.useState(true);\n\n    const handleClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n            }}\n            open={open}\n            autoHideDuration={6000}\n            onClose={handleClose}\n        >\n            <MySnackbarContentWrapper\n                onClose={handleClose}\n                variant={props.variant ? props.variant : \"success\"}\n                message={\n                    props.message ? props.message : \"This is a success message!\"\n                }\n            />\n        </Snackbar>\n    );\n}\n","import {auth as firebaseAuth, firestore, functions, storage, initializeApp} from \"firebase\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n\tapiKey: \"xxxx\",\n\tauthDomain: \"xxx\",\n\tdatabaseURL: \"xxx\",\n\tprojectId: \"xxx\",\n\tstorageBucket: \"xxx\",\n\tmessagingSenderId: \"xx\",\n\tappId: \"xx\",\n\tmeasurementId: \"xx\",\n};\n// Initialize firebase\ninitializeApp(firebaseConfig);\nexport const auth = firebaseAuth()\nexport const firebaseStorage = storage()\nexport const firebaseFirestore = firestore()\nexport const firebaseFunctions = functions()","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function noticesFetchDataSuccess(notices) {\n    return {\n        type: actionTypes.NOTICES_FETCH_DATA_SUCCESS,\n        notices,\n    };\n}\n\nexport function deleteNotice(noticeId) {\n    return {\n        type: actionTypes.DELETE_NOTICE,\n        noticeId,\n    };\n}\n\nexport function addNotice(notice) {\n    return {\n        type: actionTypes.ADD_NOTICE,\n        notice,\n    };\n}\n\nexport function editNotice(notice) {\n    return {\n        type: actionTypes.EDIT_NOTICE,\n        notice,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editEmailTemplate(emailTemplate) {\n    return {\n        type: actionTypes.EDIT_EMAIL_TEMPLATE,\n        emailTemplate,\n    };\n}\n\nexport function addEmailTemplate(emailTemplate) {\n    return {\n        type: actionTypes.ADD_EMAIL_TEMPLATE,\n        emailTemplate,\n    };\n}\n\nexport function deleteEmailTemplate(emailTemplateId) {\n    return {\n        type: actionTypes.DELETE_EMAIL_TEMPLATE,\n        emailTemplateId,\n    };\n}\n\nexport function emailTemplatesFetchDataSuccess(emailTemplates) {\n    return {\n        type: actionTypes.EMAIL_TEMPLATES_FETCH_DATA_SUCCESS,\n        emailTemplates,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function propertiesFetchDataSuccess(properties) {\n    return {\n        type: actionTypes.PROPERTIES_FETCH_DATA_SUCCESS,\n        properties,\n    };\n}\n\nexport function deleteProperty(propertyId) {\n    return {\n        type: actionTypes.DELETE_PROPERTY,\n        propertyId,\n    };\n}\n\nexport function addProperty(property) {\n    return {\n        type: actionTypes.ADD_PROPERTY,\n        property,\n    };\n}\n\nexport function editProperty(property) {\n    return {\n        type: actionTypes.EDIT_PROPERTY,\n        property,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editPropertySetting(propertySetting) {\n    return {\n        type: actionTypes.EDIT_PROPERTY_SETTING,\n        propertySetting,\n    };\n}\n\nexport function addPropertySetting(propertySetting) {\n    return {\n        type: actionTypes.ADD_PROPERTY_SETTING,\n        propertySetting,\n    };\n}\n\nexport function deletePropertySetting(propertySettingId) {\n    return {\n        type: actionTypes.DELETE_PROPERTY_SETTING,\n        propertySettingId,\n    };\n}\n\nexport function propertySettingsFetchDataSuccess(propertySettings) {\n    return {\n        type: actionTypes.PROPERTY_SETTINGS_FETCH_DATA_SUCCESS,\n        propertySettings,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editPropertyUnitCharge(propertyUnitCharge) {\n    return {\n        type: actionTypes.EDIT_PROPERTY_UNIT_CHARGE,\n        propertyUnitCharge,\n    };\n}\n\nexport function addPropertyUnitCharge(propertyUnitCharge) {\n    return {\n        type: actionTypes.ADD_PROPERTY_UNIT_CHARGE,\n        propertyUnitCharge,\n    };\n}\n\nexport function deletePropertyUnitCharge(propertyUnitChargeId) {\n    return {\n        type: actionTypes.DELETE_PROPERTY_UNIT_CHARGE,\n        propertyUnitChargeId,\n    };\n}\n\nexport function propertyUnitChargesFetchDataSuccess(propertyUnitCharges) {\n    return {\n        type: actionTypes.PROPERTY_UNIT_CHARGES_FETCH_DATA_SUCCESS,\n        propertyUnitCharges,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editPropertyUnit(propertyUnit) {\n    return {\n        type: actionTypes.EDIT_PROPERTY_UNIT,\n        propertyUnit,\n    };\n}\n\nexport function addPropertyUnit(propertyUnit) {\n    return {\n        type: actionTypes.ADD_PROPERTY_UNIT,\n        propertyUnit,\n    };\n}\n\nexport function deletePropertyUnit(propertyUnitId) {\n    return {\n        type: actionTypes.DELETE_PROPERTY_UNIT,\n        propertyUnitId,\n    };\n}\n\nexport function propertyUnitsFetchDataSuccess(propertyUnits) {\n    return {\n        type: actionTypes.PROPERTY_UNITS_FETCH_DATA_SUCCESS,\n        propertyUnits,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function managementFeesFetchDataSuccess(managementFees) {\n    return {\n        type: actionTypes.MANAGEMENT_FEES_FETCH_DATA_SUCCESS,\n        managementFees,\n    };\n}\n\nexport function deleteManagementFee(managementFeeId) {\n    return {\n        type: actionTypes.DELETE_MANAGEMENT_FEE,\n        managementFeeId,\n    };\n}\n\nexport function addManagementFee(managementFee) {\n    return {\n        type: actionTypes.ADD_MANAGEMENT_FEE,\n        managementFee,\n    };\n}\n\nexport function editManagementFee(managementFee) {\n    return {\n        type: actionTypes.EDIT_MANAGEMENT_FEE,\n        managementFee,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function contactsFetchDataSuccess(contacts) {\n    return {\n        type: actionTypes.CONTACTS_FETCH_DATA_SUCCESS,\n        contacts,\n    };\n}\n\nexport function deleteContact(contactId) {\n    return {\n        type: actionTypes.DELETE_CONTACT,\n        contactId,\n    };\n}\n\nexport function addContact(contact) {\n    return {\n        type: actionTypes.ADD_CONTACT,\n        contact,\n    };\n}\n\nexport function editContact(contact) {\n    return {\n        type: actionTypes.EDIT_CONTACT,\n        contact,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function transactionsFetchDataSuccess(transactions) {\n    return {\n        type: actionTypes.TRANSACTIONS_FETCH_DATA_SUCCESS,\n        transactions,\n    };\n}\n\nexport function deleteTransaction(transactionId) {\n    return {\n        type: actionTypes.DELETE_TRANSACTION,\n        transactionId,\n    };\n}\n\nexport function addTransaction(transaction) {\n    return {\n        type: actionTypes.ADD_TRANSACTION,\n        transaction,\n    };\n}\n\nexport function editTransaction(transaction) {\n    return {\n        type: actionTypes.EDIT_TRANSACTION,\n        transaction,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editCompanyProfile(companyProfile) {\n    return {\n        type: actionTypes.EDIT_COMPANY_PROFILE,\n        companyProfile,\n    };\n}\n\nexport function addCompanyProfile(companyProfile) {\n    return {\n        type: actionTypes.ADD_COMPANY_PROFILE,\n        companyProfile,\n    };\n}\n\nexport function deleteCompanyProfile(companyProfileId) {\n    return {\n        type: actionTypes.DELETE_COMPANY_PROFILE,\n        companyProfileId,\n    };\n}\n\nexport function companyProfilesFetchDataSuccess(companyProfiles) {\n    return {\n        type: actionTypes.COMPANY_PROFILES_FETCH_DATA_SUCCESS,\n        companyProfiles,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editUser(user) {\n    return {\n        type: actionTypes.EDIT_USER,\n        user,\n    };\n}\n\nexport function addUser(user) {\n    return {\n        type: actionTypes.ADD_USER,\n        user,\n    };\n}\n\nexport function deleteUser(userId) {\n    return {\n        type: actionTypes.DELETE_USER,\n        userId,\n    };\n}\n\nexport function usersFetchDataSuccess(users) {\n    return {\n        type: actionTypes.USERS_FETCH_DATA_SUCCESS,\n        users,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editTransactionCharge(transactionCharge) {\n    return {\n        type: actionTypes.EDIT_TRANSACTION_CHARGE,\n        transactionCharge,\n    };\n}\n\nexport function addTransactionCharge(transactionCharge) {\n    return {\n        type: actionTypes.ADD_TRANSACTION_CHARGE,\n        transactionCharge,\n    };\n}\n\nexport function deleteTransactionCharge(transactionChargeId) {\n    return {\n        type: actionTypes.DELETE_TRANSACTION_CHARGE,\n        transactionChargeId,\n    };\n}\n\nexport function transactionChargesFetchDataSuccess(transactionCharges) {\n    return {\n        type: actionTypes.TRANSACTION_CHARGES_FETCH_DATA_SUCCESS,\n        transactionCharges,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editCommunicationEmail(communicationEmail) {\n    return {\n        type: actionTypes.EDIT_COMMUNICATION_EMAIL,\n        communicationEmail,\n    };\n}\n\nexport function addCommunicationEmail(communicationEmail) {\n    return {\n        type: actionTypes.ADD_COMMUNICATION_EMAIL,\n        communicationEmail,\n    };\n}\n\nexport function deleteCommunicationEmail(communicationEmailId) {\n    return {\n        type: actionTypes.DELETE_COMMUNICATION_EMAIL,\n        communicationEmailId,\n    };\n}\n\nexport function communicationEmailsFetchDataSuccess(communicationEmails) {\n    return {\n        type: actionTypes.COMMUNICATION_EMAILS_FETCH_DATA_SUCCESS,\n        communicationEmails,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editLease(lease) {\n    return {\n        type: actionTypes.EDIT_LEASE,\n        lease,\n    };\n}\n\nexport function addLease(lease) {\n    return {\n        type: actionTypes.ADD_LEASE,\n        lease,\n    };\n}\n\nexport function deleteLease(leaseId) {\n    return {\n        type: actionTypes.DELETE_LEASE,\n        leaseId,\n    };\n}\n\nexport function leasesFetchDataSuccess(leases) {\n    return {\n        type: actionTypes.LEASES_FETCH_DATA_SUCCESS,\n        leases,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editToDo(toDo) {\n    return {\n        type: actionTypes.EDIT_TO_DO,\n        toDo,\n    };\n}\n\nexport function addToDo(toDo) {\n    return {\n        type: actionTypes.ADD_TO_DO,\n        toDo,\n    };\n}\n\nexport function deleteToDo(toDoId) {\n    return {\n        type: actionTypes.DELETE_TO_DO,\n        toDoId,\n    };\n}\n\nexport function toDosFetchDataSuccess(toDos) {\n    return {\n        type: actionTypes.TO_DOS_FETCH_DATA_SUCCESS,\n        toDos,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editExpense(expense) {\n    return {\n        type: actionTypes.EDIT_EXPENSE,\n        expense,\n    };\n}\n\nexport function addExpense(expense) {\n    return {\n        type: actionTypes.ADD_EXPENSE,\n        expense,\n    };\n}\n\nexport function deleteExpense(expenseId) {\n    return {\n        type: actionTypes.DELETE_EXPENSE,\n        expenseId,\n    };\n}\n\nexport function expensesFetchDataSuccess(expenses) {\n    return {\n        type: actionTypes.EXPENSES_FETCH_DATA_SUCCESS,\n        expenses,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editMeterReading(meterReading) {\n    return {\n        type: actionTypes.EDIT_METER_READING,\n        meterReading,\n    };\n}\n\nexport function addMeterReading(meterReading) {\n    return {\n        type: actionTypes.ADD_METER_READING,\n        meterReading,\n    };\n}\n\nexport function deleteMeterReading(meterReadingId) {\n    return {\n        type: actionTypes.DELETE_METER_READING,\n        meterReadingId,\n    };\n}\n\nexport function meterReadingsFetchDataSuccess(meterReadings) {\n    return {\n        type: actionTypes.METER_READINGS_FETCH_DATA_SUCCESS,\n        meterReadings,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function editMaintenanceRequest(maintenanceRequest) {\n    return {\n        type: actionTypes.EDIT_MAINTENANCE_REQUEST,\n        maintenanceRequest,\n    };\n}\n\nexport function addMaintenanceRequest(maintenanceRequest) {\n    return {\n        type: actionTypes.ADD_MAINTENANCE_REQUEST,\n        maintenanceRequest,\n    };\n}\n\nexport function deleteMaintenanceRequest(maintenanceRequestId) {\n    return {\n        type: actionTypes.DELETE_MAINTENANCE_REQUEST,\n        maintenanceRequestId,\n    };\n}\n\nexport function maintenanceRequestsFetchDataSuccess(maintenanceRequests) {\n    return {\n        type: actionTypes.MAINTENANCE_REQUESTS_FETCH_DATA_SUCCESS,\n        maintenanceRequests,\n    };\n}\n","import * as actionTypes from \"../assets/actionTypes\";\nimport * as vacatingNoticesActions from \"./notices\";\nimport * as emailTemplatesActions from \"./emailTemplates\";\nimport * as propertyActions from \"./property\";\nimport * as propertySettingsActions from \"./propertySettings\";\nimport * as propertyUnitChargeActions from \"./propertyUnitCharges\";\nimport * as propertyUnitActions from \"./propertyUnits\";\nimport * as managementFeesActions from \"./managementFees\";\nimport * as contactsActions from \"./contacts\";\nimport * as transactionsActions from \"./transactions\";\nimport * as logActions from \"./logs\";\nimport * as companyProfileActions from \"./companyProfile\";\nimport * as accountBillingActions from \"./accountBilling\";\nimport * as usersActions from \"./users\";\nimport * as transactionChargesActions from \"./transactionsCharges\";\nimport * as communicationEmailsActions from \"./CommunicationEmails\";\nimport * as leaseActions from \"./leases\";\nimport * as toDoActions from \"./to-dos\";\nimport * as expensesActions from \"./expenses\";\nimport * as meterReadingsActions from \"./meterReadings\";\nimport * as maintenanceRequestsActions from \"./maintenanceRequests\";\nimport {auth, firebaseFunctions, firebaseStorage} from \"../firebase\";\nimport {getDatabaseRef} from \"./firebaseHelpers\";\n\n\nconst firebaseStorageRef = firebaseStorage.ref();\nconst setAdminCustomClaim = firebaseFunctions.httpsCallable('setAdminCustomClaim');\nexport const setDatabaseRefCustomClaim = firebaseFunctions.httpsCallable('setDatabaseRefCustomClaim');\nexport const createUser = (userDetails) => {\n    const email = userDetails.email;\n    const password = userDetails.password;\n    return fetch('http://127.0.0.1:8000/api/v1/users', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({ email, password })\n            }).then(response => {\n                  if (response.ok) {\n                      return response.json()\n                  } else {\n                      throw response.json()\n                  }\n              }).then(data => {\n                  return {data: data};\n              }).catch(err => {\n                  console.log(err)\n              });\n}\n\nexport const loginUser = (email, password) => {\n    return fetch('https://b169-197-237-243-227.ngrok-free.app/api/v1/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ email, password })\n        })\n          .then(response => {\n              if (response.ok) {\n                  return response.json()\n              } else {\n                  throw response.json()\n              }\n          })\n          .then(data => {\n              const {user, token} = data;\n              localStorage.setItem('auth_token', token);\n              localStorage.setItem('user_data', JSON.stringify(user));\n              return {data: data};\n          })\n          .catch(error => {\n              console.log(error)\n          });\n}\n\nexport const createTenant = (tenantDetails) => {\n    // const token = localStorage.getItem('auth_token');\n    return fetch('https://b169-197-237-243-227.ngrok-free.app/api/v1/tenants', {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${localStorage.getItem('auth_token')}`\n          },\n          body: JSON.stringify({ tenantDetails })\n        })\n          .then(response => {\n              if (response.ok) {\n                  return response.json()\n              } else {\n                  throw response.json()\n              }\n          })\n          .then(data => {\n              return {data: data};\n          })\n          .catch(error => {\n              console.log(error)\n          });\n}\n\nexport const getTenants = () => {\n    // const token = localStorage.getItem('auth_token');\n    return fetch('https://b169-197-237-243-227.ngrok-free.app/api/v1/tenants', {\n          method: 'GET',\n          headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Token ${localStorage.getItem('auth_token')}`\n          },\n        })\n          .then(response => {\n              if (response.ok) {\n                  return response.json()\n              } else {\n                  throw response.json()\n              }\n          })\n          .then(data => {\n              return {data: data};\n          })\n          .catch(error => {\n              console.log(error)\n          });\n}\nexport const adminCreateFirebaseUser = firebaseFunctions.httpsCallable('adminCreateFirebaseUser');\nexport const updateFirebaseUser = firebaseFunctions.httpsCallable('updateFirebaseUser');\nexport const deleteFirebaseUsers = firebaseFunctions.httpsCallable('deleteFirebaseUsers');\nexport const sendInvoice = firebaseFunctions.httpsCallable('sendInvoice');\n\nexport function setCurrentUser(user) {\n    return {\n        type: actionTypes.SET_CURRENT_USER,\n        user,\n    };\n}\n\nconst firebaseGetOptions = {\n    source: 'default'\n};\n\nexport const firebaseSignOutUser = () => {\n    return (dispatch) => {\n        auth\n            .signOut()\n            .then(function () {\n\n            })\n            .catch(function (error) {\n                // An error happened.\n            }).finally(() => {\n                dispatch(setCurrentUser(null))\n            })\n    }\n}\n\nexport const getUserDetails = async (userDetails) => {\n    localStorage.setItem('user_data', JSON.stringify(userDetails));\n    return {\n        displayName: `${userDetails.user.last_name} ${userDetails.user.first_name}`,\n        email: userDetails.user.email,\n        emailVerified: userDetails.emailVerified || false,\n        photoURL: userDetails.photoURL || '',\n        uid: userDetails.user.user_id,\n        id: userDetails.user.user_id,\n        isAdmin: userDetails.isAdmin || false,\n        tenant_id: userDetails.tenantId || '',\n    };\n}\n\nexport const resetUserPasswordByEmail = async (email) => {\n    return await auth.sendPasswordResetEmail(email, { handleCodeInApp: false, url: 'https://rentgatepm.com/account-actions/' })\n}\n\nexport const signUpWithEmailAndPassword = async (userDetails) => {\n    try {\n        const returnValue = await createUser(userDetails)\n        const createdUser = returnValue.data\n        console.log(\"Actions createdUser => \", createdUser)\n        // await setAdminCustomClaim({ userId: createdUser.user_id, userProfile: userDetails })\n    } catch (error) {\n        // Handle Errors here.\n        console.log(\"Actions error => \", error.message)\n        throw new Error(error);\n    }\n};\n\nexport const signInUserWithEmailAndPassword = async (email, password) => {\n    try {\n        const authCredential = await loginUser(email, password);\n        const user = authCredential.data;\n        return getUserDetails(user);\n    }\n    catch (error) {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = errorCode === \"auth/wrong-password\"\n            ? \"Wrong password.\"\n            : errorCode === \"auth/user-disabled\"\n                ? \"User account disabled\"\n                : errorCode === \"auth/invalid-email\"\n                    ? \"Email is Invalid\"\n                    : errorCode === \"auth/user-not-found\"\n                        ? \"No user found with email\"\n                        : \"Failed to connect to resource. Check your internet connection\";\n        throw new Error(errorMessage);\n    }\n\n}\n\nexport async function sendEmails(from_user, subject, email, recipients) {\n    const sendEmail = firebaseFunctions.httpsCallable('sendEmail');\n    try {\n        await sendEmail({ replyTo: from_user, subject: subject, email: email, recipients: recipients })\n        // Read result of the Cloud Function.\n    } catch (error) {\n        //getting the error details\n        const code = error.code;\n        const message = error.message;\n        const details = error.details;\n        console.error(`There was an error when calling the sendEmails Cloud Function.\\n \n        Error Code => ${code}. Error Message => ${message}. Error Details => ${details}`);\n    }\n}\n\nexport async function deleteUploadedFileByUrl(fileUrl) {\n    return await firebaseStorage.refFromURL(fileUrl).delete().then(() => console.log('Successfully deleted file')).catch((error) => console.log('Error deleting file => ', error))\n}\n\nexport async function uploadFilesToFirebase(fileToUpload) {\n    var fileRef = firebaseStorageRef.child(`propertyImages/${fileToUpload.name}`);\n    try {\n        const snapshot = await fileRef\n            .putString(fileToUpload.data, \"data_url\");\n        // console.log(\"Uploaded files successfully!\");\n        try {\n            return await snapshot.ref.getDownloadURL();\n        }\n        catch (error) {\n            switch (error.code) {\n                case \"storage/object-not-found\":\n                    console.log(\"File doesn't exist\");\n                    break;\n                case \"storage/unauthorized\":\n                    console.log(\n                        \"User doesn't have permission to access the object\"\n                    );\n                    break;\n                case \"storage/canceled\":\n                    console.log(\"User canceled the upload\");\n                    break;\n                case \"storage/unknown\":\n                    console.log(\n                        \"Unknown error occurred, inspect the server response\"\n                    );\n                    break;\n                default:\n                    console.log('Unknown error');\n            }\n        }\n    }\n    catch (error_1) {\n        console.log(\"Error during file upload => \", error_1);\n        return ''\n    }\n}\n\nexport function itemsFetchData(collectionsUrls) {\n    return (dispatch) => {\n        dispatch(itemsIsLoading(true));\n        collectionsUrls.forEach(async (url) => {\n            try {\n                const snapshot = await getDatabaseRef().collection(url).get(firebaseGetOptions)\n                let fetchedItems = []\n                snapshot.forEach((doc) => {\n                    let fetchedObject = Object.assign(\n                        {},\n                        doc.data(),\n                        {\n                            id: doc.id,\n                        }\n                    );\n                    fetchedItems.push(fetchedObject)\n                });\n                switch (url) {\n                    case \"property-settings\":\n                        dispatch(propertySettingsActions.propertySettingsFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"company_profile\":\n                        dispatch(companyProfileActions.companyProfilesFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"account-billing\":\n                        dispatch(accountBillingActions.accountBillingsFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"properties\":\n                        dispatch(propertyActions.propertiesFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"property_units\":\n                        dispatch(propertyUnitActions.propertyUnitsFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"leases\":\n                        dispatch(leaseActions.leasesFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"unit-charges\":\n                        dispatch(propertyUnitChargeActions.propertyUnitChargesFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"contacts\":\n                        dispatch(contactsActions.contactsFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"transactions-charges\":\n                        dispatch(transactionChargesActions.transactionChargesFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"charge-payments\":\n                        dispatch(transactionsActions.transactionsFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"to-dos\":\n                        dispatch(toDoActions.toDosFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"maintenance-requests\":\n                        dispatch(maintenanceRequestsActions.maintenanceRequestsFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"audit-logs\":\n                        dispatch(logActions.auditLogsFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"notices\":\n                        dispatch(vacatingNoticesActions.noticesFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"email-templates\":\n                        dispatch(emailTemplatesActions.emailTemplatesFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"management-fees\":\n                        dispatch(managementFeesActions.managementFeesFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"expenses\":\n                        dispatch(expensesActions.expensesFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"meter_readings\":\n                        dispatch(meterReadingsActions.meterReadingsFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"users\":\n                        dispatch(usersActions.usersFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"communication_emails\":\n                        dispatch(communicationEmailsActions.communicationEmailsFetchDataSuccess(fetchedItems));\n                        break;\n\n                    default:\n                        break;\n                }\n            } catch (error) {\n                dispatch(itemsHasErrored(error.message))\n                dispatch(itemsIsLoading(false));\n            }\n        })\n        dispatch(itemsIsLoading(false));\n    }\n}\n\n\nexport function tenantsFetchData(collectionsUrls) {\n    return async (dispatch) => {\n        dispatch(itemsIsLoading(true));\n        const tenants = await getTenants()\n        debugger\n        let fetchedItems = []\n        tenants.data.forEach((doc) => {\n            let fetchedObject = Object.assign(\n                        {},\n                        doc,\n                        {\n                            id: doc.id,\n                        }\n                    );\n                    fetchedItems.push(fetchedObject)\n                });\n        dispatch(contactsActions.contactsFetchDataSuccess(fetchedItems));\n\n        dispatch(itemsIsLoading(false));\n    }\n}\n\nexport function setPaginationPage(index) {\n    return {\n        type: actionTypes.SET_PAGINATION_PAGE,\n        index,\n    };\n}\n\nexport function toggleDrawer(toggleValue) {\n    return {\n        type: actionTypes.TOGGLE_DRAWER,\n        toggleValue,\n    };\n}\n\nexport function itemsHasErrored(error) {\n    return {\n        type: actionTypes.ITEMS_HAS_ERRORED,\n        error,\n    };\n}\n\nexport function itemsIsLoading(bool) {\n    return {\n        type: actionTypes.ITEMS_IS_LOADING,\n        isLoading: bool,\n    };\n}\n\nexport function handleDelete(itemId, url) {\n    //send request to server to delete selected item\n    return async (dispatch) => {\n        try {\n            await getDatabaseRef()\n                .collection(url)\n                .doc(itemId)\n                .delete();\n            switch (url) {\n                case \"property-settings\":\n                    dispatch(propertySettingsActions.deletePropertySetting(itemId));\n                    break;\n                case \"company_profile\":\n                    dispatch(companyProfileActions.deleteCompanyProfile(itemId)\n                    );\n                    break;\n\n                case \"properties\":\n                    dispatch(propertyActions.deleteProperty(itemId)\n                    );\n                    break;\n\n                case \"property_units\":\n                    dispatch(propertyUnitActions.deletePropertyUnit(itemId)\n                    );\n                    break;\n\n                case \"contacts\":\n                    dispatch(contactsActions.deleteContact(itemId)\n                    );\n                    break;\n\n                case \"transactions-charges\":\n                    dispatch(transactionChargesActions.deleteTransactionCharge(itemId)\n                    );\n                    break;\n\n                case \"leases\":\n                    dispatch(leaseActions.deleteLease(itemId));\n                    break;\n\n                case \"charge-payments\":\n                    dispatch(transactionsActions.deleteTransaction(itemId)\n                    );\n                    break;\n\n                case \"to-dos\":\n                    dispatch(toDoActions.deleteToDo(itemId));\n                    break;\n\n                case \"unit-charges\":\n                    dispatch(propertyUnitChargeActions.deletePropertyUnitCharge(itemId));\n                    break;\n\n                case \"maintenance-requests\":\n                    dispatch(maintenanceRequestsActions.deleteMaintenanceRequest(itemId)\n                    );\n                    break;\n\n                case \"notices\":\n                    dispatch(vacatingNoticesActions.deleteNotice(itemId)\n                    );\n                    break;\n\n                case \"email-templates\":\n                    dispatch(emailTemplatesActions.deleteEmailTemplate(itemId)\n                    );\n                    break;\n\n                case \"management-fees\":\n                    dispatch(managementFeesActions.deleteManagementFee(itemId)\n                    );\n                    break;\n\n                case \"expenses\":\n                    dispatch(expensesActions.deleteExpense(itemId)\n                    );\n                    break;\n\n                case \"users\":\n                    dispatch(usersActions.deleteUser(itemId)\n                    );\n                    break;\n\n                case \"meter_readings\":\n                    dispatch(meterReadingsActions.deleteMeterReading(itemId)\n                    );\n                    break;\n\n                case \"communication_emails\":\n                    dispatch(communicationEmailsActions.deleteCommunicationEmail(itemId)\n                    );\n                    break;\n\n                default:\n                    break;\n            }\n        }\n        catch (error) {\n            dispatch(itemsHasErrored(error.message))\n            dispatch(itemsIsLoading(false));\n            console.log(\"Failed to Delete Document!\", error);\n        }\n    }\n}\n\n\nexport function handleContactCreation(tenantDetails, url) {\n    //send request to server to delete selected item\n    return async (dispatch) => {\n        try {\n            const authCredential = await createTenant(tenantDetails);\n            let addedItem = Object.assign({}, tenantDetails, {\n                            id: authCredential.id,\n            });\n            dispatch(contactsActions.addContact(addedItem));\n            console.log(\"Successfully Created Document!\");\n\n        }\n        catch (error) {\n            dispatch(itemsHasErrored(error.message))\n            dispatch(itemsIsLoading(false));\n            console.log(\"Failed to Delete Document!\", error);\n        }\n    }\n}\n\n\n// export const handleContactCreation = async (tenantDetails, url) => {\n//     const response = await createTenant(tenantDetails);\n//     return (dispatch) => {\n//         let addedItem = Object.assign({}, tenantDetails, {\n//                             id: response.id,\n//                         });\n//         debugger\n//         dispatch(contactsActions.addContact(addedItem));\n//     }\n// };\n// export async function handleContactCreation(data, url) {\n//     const response = await createTenant(data);\n//     return response;\n// }\nexport async function  handleItemFormSubmit(data, url) {\n    if (typeof data.id === \"undefined\") {\n        delete data.id;\n    }\n    return (dispatch) => {\n        return new Promise(function (resolve, reject) {\n            typeof data.id !== \"undefined\"\n                ? //send post request to edit the item\n                getDatabaseRef()\n                    .collection(url)\n                    .doc(data.id)\n                    .update(data)\n                    .then((docRef) => {\n                        let modifiedObject = Object.assign(\n                            {},\n                            data,\n                        );\n                        switch (url) {\n                            case \"property-settings\":\n                                dispatch(propertySettingsActions.editPropertySetting(modifiedObject));\n                                break;\n                            case \"company_profile\":\n                                dispatch(companyProfileActions.editCompanyProfile(modifiedObject));\n                                break;\n\n                            case \"properties\":\n                                dispatch(propertyActions.editProperty(modifiedObject));\n                                break;\n\n                            case \"property_units\":\n                                dispatch(propertyUnitActions.editPropertyUnit(modifiedObject));\n                                break;\n\n                            case \"unit-charges\":\n                                dispatch(propertyUnitChargeActions.editPropertyUnitCharge(modifiedObject));\n                                break;\n\n                            case \"contacts\":\n                                dispatch(contactsActions.editContact(modifiedObject));\n                                break;\n\n                            case \"transactions-charges\":\n                                dispatch(transactionChargesActions.editTransactionCharge(modifiedObject));\n                                break;\n\n                            case \"leases\":\n                                dispatch(leaseActions.editLease(modifiedObject));\n                                break;\n\n                            case \"charge-payments\":\n                                dispatch(transactionsActions.editTransaction(modifiedObject));\n                                break;\n\n                            case \"to-dos\":\n                                dispatch(toDoActions.editToDo(modifiedObject));\n                                break;\n\n                            case \"maintenance-requests\":\n                                dispatch(maintenanceRequestsActions.editMaintenanceRequest(modifiedObject));\n                                break;\n\n                            case \"notices\":\n                                dispatch(vacatingNoticesActions.editNotice(modifiedObject));\n                                break;\n\n                            case \"email-templates\":\n                                dispatch(emailTemplatesActions.editEmailTemplate(modifiedObject));\n                                break;\n\n                            case \"management-fees\":\n                                dispatch(managementFeesActions.editManagementFee(modifiedObject));\n                                break;\n\n                            case \"expenses\":\n                                dispatch(expensesActions.editExpense(modifiedObject));\n                                break;\n\n                            case \"users\":\n                                dispatch(usersActions.editUser(modifiedObject));\n                                break;\n\n                            case \"meter_readings\":\n                                dispatch(meterReadingsActions.editMeterReading(modifiedObject));\n                                break;\n\n                            case \"communication_emails\":\n                                dispatch(communicationEmailsActions.editCommunicationEmail(modifiedObject));\n                                break;\n\n                            default:\n                                break;\n                        }\n                        resolve(data.id);\n                    })\n                    .catch((error) => {\n                        dispatch(itemsHasErrored(error.message))\n                        dispatch(itemsIsLoading(false));\n                        console.log(\"Error updating document => \", error.response);\n                        reject(error)\n                    })\n                : //send post to create item\n                getDatabaseRef()\n                    .collection(url)\n                    .add(data)\n                    .then((docRef) => {\n                        let addedItem = Object.assign({}, data, {\n                            id: docRef.id,\n                        });\n                        switch (url) {\n                            case \"property-settings\":\n                                dispatch(propertySettingsActions.addPropertySetting(addedItem));\n                                break;\n                            case \"company_profile\":\n                                dispatch(companyProfileActions.addCompanyProfile(addedItem));\n                                break;\n                            case \"properties\":\n                                dispatch(propertyActions.addProperty(addedItem));\n                                break;\n\n                            case \"property_units\":\n                                dispatch(propertyUnitActions.addPropertyUnit(addedItem));\n                                break;\n\n                            case \"unit-charges\":\n                                dispatch(propertyUnitChargeActions.addPropertyUnitCharge(addedItem));\n                                break;\n\n                            case \"contacts\":\n                                dispatch(contactsActions.addContact(addedItem));\n                                break;\n\n                            case \"transactions-charges\":\n                                dispatch(transactionChargesActions.addTransactionCharge(addedItem));\n                                break;\n\n                            case \"leases\":\n                                dispatch(leaseActions.addLease(addedItem));\n                                break;\n\n                            case \"charge-payments\":\n                                dispatch(transactionsActions.addTransaction(addedItem));\n                                break;\n\n                            case \"to-dos\":\n                                dispatch(toDoActions.addToDo(addedItem));\n                                break;\n\n                            case \"maintenance-requests\":\n                                dispatch(maintenanceRequestsActions.addMaintenanceRequest(addedItem));\n                                break;\n\n                            case \"notices\":\n                                dispatch(vacatingNoticesActions.addNotice(addedItem));\n                                break;\n\n                            case \"email-templates\":\n                                dispatch(emailTemplatesActions.addEmailTemplate(addedItem));\n                                break;\n\n                            case \"management-fees\":\n                                dispatch(managementFeesActions.addManagementFee(addedItem));\n                                break;\n\n                            case \"expenses\":\n                                dispatch(expensesActions.addExpense(addedItem));\n                                break;\n\n                            case \"users\":\n                                dispatch(usersActions.addUser(addedItem));\n                                break;\n\n                            case \"meter_readings\":\n                                dispatch(meterReadingsActions.addMeterReading(addedItem));\n                                break;\n\n                            case \"communication_emails\":\n                                dispatch(communicationEmailsActions.addCommunicationEmail(addedItem));\n                                break;\n\n                            default:\n                                break;\n                        }\n                        resolve(docRef.id);\n                    })\n                    .catch((error) => {\n                        dispatch(itemsHasErrored(error.message))\n                        dispatch(itemsIsLoading(false));\n                        console.log(\"Error adding document => \", error.response);\n                        reject(error)\n                    });\n        })\n    }\n}\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport PageHeading from \"../components/PageHeading\";\nimport InfoDisplayPaper from \"../components/InfoDisplayPaper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Bar } from 'react-chartjs-2';\nimport { commonStyles } from '../components/commonStyles'\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { format, getYear, startOfYear, endOfYear, startOfToday, parse, eachMonthOfInterval, getMonth } from \"date-fns\";\n\nconst options = {\n  responsive: true,\n  tooltips: {\n    mode: 'label'\n  },\n  elements: {\n    line: {\n      fill: false\n    }\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          min: 0,\n        }\n      }\n    ],\n  }\n};\n\nconst FilterYearSchema = Yup.object().shape({\n  filter_year: Yup.number()\n    .typeError(\"Year must be a number!\")\n    .required(\"Year is required\")\n    .positive()\n    .min(2000, \"Sorry, were not present then.\")\n    .max(2100, \"Sorry, but we won't be here during those times.\")\n    .integer(),\n});\n\nvar monthsInYear = eachMonthOfInterval({\n  start: startOfYear(startOfToday()),\n  end: endOfYear(startOfToday()),\n})\n\nconst currentYear = new Date().getFullYear()\n\nlet DashBoardPage = (props) => {\n  const classes = commonStyles()\n  const { propertyUnits, transactions, transactionsCharges, leases, properties } = props;\n  const [transactionItems, setTransactionItems] = useState([]);\n  let [propertyFilter, setPropertyFilter] = useState(\"all\");\n  const [chargesItems, setChargesItems] = useState([]);\n  const propertyActiveLeases = leases.filter(({ terminated }) => terminated !== true)\n\n  useEffect(() => {\n    const transactionChargesForCurrentYear = transactionsCharges\n      .filter(({ charge_date }) => getYear(parse(charge_date, 'yyyy-MM-dd', new Date())) === currentYear)\n    setChargesItems(transactionChargesForCurrentYear);\n  }, [transactionsCharges]);\n\n  useEffect(() => {\n    const transactionsPaymentsForCurrentYear = transactions\n      .filter(({ payment_date }) => getYear(parse(payment_date, 'yyyy-MM-dd', new Date())) === currentYear)\n    setTransactionItems(transactionsPaymentsForCurrentYear);\n  }, [transactions]);\n\n  const setFilteredTransactionItemsByYear = (filterYear) => {\n    setTransactionItems(\n      transactions\n        .filter(({ payment_date }) => getYear(parse(payment_date, 'yyyy-MM-dd', new Date())) === filterYear)\n    );\n    setChargesItems(\n      transactionsCharges\n        .filter(({ charge_date }) => getYear(parse(charge_date, 'yyyy-MM-dd', new Date())) === filterYear)\n    );\n  };\n\n  const totalProperties = propertyUnits.length;\n  //get the number of the different units by category\n  const bedSitterUnits = propertyUnits.filter((property) => property.unit_type === 'Bed Sitter').length;\n  const oneBedUnits = propertyUnits.filter((property) => property.unit_type === 'One Bedroom').length;\n  const twoBedUnits = propertyUnits.filter((property) => property.unit_type === 'Two Bedroom').length;\n  const singleRoomUnits = propertyUnits.filter((property) => property.unit_type === 'Single Room').length;\n  const doubleRoomUnits = propertyUnits.filter((property) => property.unit_type === 'Double Room').length;\n  const shopUnits = propertyUnits.filter((property) => property.unit_type === 'Shop').length;\n  const otherUnits = propertyUnits.filter((property) => property.unit_type === 'Other').length;\n  //get the current number of occupied houses\n  const occupiedHouses = propertyActiveLeases.length;\n  //get months in an year in short format\n  const rentIncomeData = { datasets: [] }\n  rentIncomeData.labels = monthsInYear.map((monthDate) => format(monthDate, 'MMMM'));\n  const totalEachMonthPayments = monthsInYear.map((monthDate) => {\n    //get transactions recorded in the same month and year as monthDate\n    return transactionItems\n      .filter((payment) => {\n        const paymentDate = parse(payment.payment_date, 'yyyy-MM-dd', new Date())\n        return getMonth(monthDate) === getMonth(paymentDate)\n      }).reduce((total, currentTransaction) => total + (parseFloat(currentTransaction.payment_amount) || 0), 0)\n  })\n  rentIncomeData.datasets.push({\n    data: totalEachMonthPayments, label: 'Monthly Payments Collection', type: 'bar',\n    fill: false,\n    backgroundColor: '#71B37C',\n    borderColor: '#71B37C',\n    hoverBackgroundColor: '#71B37C',\n    hoverBorderColor: '#71B37C',\n  })\n\n  const totalEachMonthCharges = monthsInYear.map((monthDate) => {\n    //get transactions recorded in the same month and year as monthDate\n    return chargesItems\n      .filter((charge) => {\n        const chargeDate = parse(charge.charge_date, 'yyyy-MM-dd', new Date())\n        return getMonth(monthDate) === getMonth(chargeDate)\n      }).reduce((total, currentTransaction) => total + (parseFloat(currentTransaction.charge_amount) || 0), 0)\n  })\n  rentIncomeData.datasets.push({\n    data: totalEachMonthCharges,\n    label: 'Monthly Charges', type: 'line', borderColor: '#EC932F', fill: false,\n    backgroundColor: '#EC932F',\n    pointBorderColor: '#EC932F',\n    pointBackgroundColor: '#EC932F',\n    pointHoverBackgroundColor: '#EC932F',\n    pointHoverBorderColor: '#EC932F',\n  })\n\n  return (\n    <Layout pageTitle=\"Overview\">\n      <Grid container justify=\"center\" direction=\"column\" spacing={4}>\n        <Grid item key={0}>\n          <PageHeading text={\"Overview\"} />\n        </Grid>\n        <Grid item container>\n          <Grid container item direction=\"column\" spacing={4}>\n            <Grid item>\n              <Box\n                border={1}\n                borderRadius=\"borderRadius\"\n                borderColor=\"grey.400\"\n              >\n                <Formik\n                  initialValues={{ filter_year: currentYear }}\n                  validationSchema={FilterYearSchema}\n                  onSubmit={(values) => {\n                    setFilteredTransactionItemsByYear(parseInt(values.filter_year));\n                  }}\n                >\n                  {({\n                    values,\n                    handleSubmit,\n                    touched,\n                    errors,\n                    handleChange,\n                    handleBlur,\n                  }) => (\n                    <form\n                      className={classes.form}\n                      id=\"yearFilterForm\"\n                      onSubmit={handleSubmit}\n                    >\n                      <Grid\n                        container\n                        spacing={2}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                        direction=\"row\"\n                      >\n                        <Grid item sm={3}>\n                          <TextField\n                            fullWidth\n                            select\n                            variant=\"outlined\"\n                            name=\"property_filter\"\n                            label=\"Property\"\n                            id=\"property_filter\"\n                            onChange={(event) => {\n                              setPropertyFilter(\n                                event.target.value\n                              );\n                            }}\n                            value={propertyFilter}\n                          >\n                            <MenuItem key={\"all\"} value={\"all\"}>All Properties</MenuItem>\n                            {properties.map(\n                              (property, index) => (\n                                <MenuItem\n                                  key={index}\n                                  value={property.id}\n                                >\n                                  {property.ref}\n                                </MenuItem>\n                              )\n                            )}\n                          </TextField>\n                        </Grid>\n                        <Grid item>\n                          <TextField\n                            variant=\"outlined\"\n                            id=\"filter_year\"\n                            name=\"filter_year\"\n                            label=\"Year\"\n                            value={values.filter_year}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={errors.filter_year && touched.filter_year}\n                            helperText={\n                              touched.filter_year && errors.filter_year\n                            }\n                          />\n                        </Grid>\n                        <Grid item>\n                          <Button\n                            type=\"submit\"\n                            form=\"yearFilterForm\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<SearchIcon />}\n                          >\n                            SEARCH\n                            </Button>\n                        </Grid>\n                      </Grid>\n                    </form>\n                  )}\n                </Formik>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n        {/*<Grid*/}\n        {/*  item*/}\n        {/*  container*/}\n        {/*  spacing={2}*/}\n        {/*  direction=\"row\"*/}\n        {/*  alignItems=\"stretch\"*/}\n        {/*  justify=\"space-around\"*/}\n        {/*  key={3}*/}\n        {/*>*/}\n        {/*  <InfoDisplayPaper xs={6} title={\"Bed Sitters\"} value={bedSitterUnits} />*/}\n        {/*  <InfoDisplayPaper xs={6} title={\"One Bedrooms\"} value={oneBedUnits} />*/}\n        {/*  <InfoDisplayPaper xs={6} title={\"Two Bedrooms\"} value={twoBedUnits} />*/}\n        {/*  <InfoDisplayPaper xs={6} title={\"Single Rooms\"} value={singleRoomUnits} />*/}\n        {/*  <InfoDisplayPaper xs={6} title={\"Double Rooms\"} value={doubleRoomUnits} />*/}\n        {/*  <InfoDisplayPaper xs={6} title={\"Shops\"} value={shopUnits} />*/}\n        {/*  <InfoDisplayPaper xs={6} title={\"Others\"} value={otherUnits} />*/}\n        {/*</Grid>*/}\n        <Grid\n          item\n          container\n          spacing={2}\n          direction=\"row\"\n          alignItems=\"stretch\"\n          justify=\"space-around\"\n          key={2}\n        >\n          <InfoDisplayPaper xs={12} title={\"Total Rentals\"} value={totalProperties} />\n          <InfoDisplayPaper xs={12} title={\"Currently Occupied Rentals\"} value={occupiedHouses} />\n          <InfoDisplayPaper xs={12} title={\"Currently Unoccupied Rentals\"} value={totalProperties - occupiedHouses} />\n          <InfoDisplayPaper xs={12} title={\"Current Month Occupancy Rate\"} value={((occupiedHouses / totalProperties) * 100) | 0} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            Monthly Charges &amp; Payments\n          </Typography>\n          <Bar\n            data={rentIncomeData}\n            options={options}>\n          </Bar>\n        </Grid>\n      </Grid>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    leases: state.leases,\n    properties: state.properties,\n    propertyUnits: state.propertyUnits,\n    transactionsCharges: state.transactionsCharges,\n    transactions: state.transactions,\n  };\n};\n\nexport default connect(mapStateToProps)(DashBoardPage);\n","import React from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n\tbackdrop: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\tcolor: \"#fff\",\n\t},\n}));\n\nexport default function LoadingBackdrop(props) {\n\tconst classes = useStyles();\n\treturn (\n\t\t<div>\n\t\t\t<Backdrop className={classes.backdrop} open={props.open}>\n\t\t\t\t<CircularProgress color=\"inherit\" />\n\t\t\t</Backdrop>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport CustomSnackbar from './CustomSnackbar'\n\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super()\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n        console.log(\"Error during rendering of a component => \", error, errorInfo);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <CustomSnackbar variant=\"error\" message=\"Error during showing component\" />;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React, { useEffect, Suspense, lazy } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  itemsFetchData,\n  setCurrentUser,\n  itemsHasErrored, getUserDetails, tenantsFetchData\n} from \"../actions/actions\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n  withRouter,\n} from \"react-router-dom\";\nimport DashBoard from \"./DashBoard\";\nimport LoadingBackdrop from '../components/LoadingBackdrop'\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport { auth } from '../firebase'\nconst PaymentEditForm = lazy(() => import('../components/payments/PaymentEditForm'));\nconst PropertyUnitPage = lazy(() => import('./PropertyUnitPage'));\nconst TenantDetailsPage = lazy(() => import('./TenantDetailsPage'));\nconst PropertyPage = lazy(() => import('./PropertyPage'));\nconst PropertiesPage = lazy(() => import('./Properties'));\nconst ExpensesPage = lazy(() => import('./Expenses'));\nconst ExpensePage = lazy(() => import('./ExpensePage'));\nconst UsersPage = lazy(() => import('./Users'));\nconst LeasePage = lazy(() => import('./LeasePage'));\nconst LeasesPage = lazy(() => import('./Leases'));\nconst AuditLogsPage = lazy(() => import('./AuditLogs'));\nconst RentRollPage = lazy(() => import('./RentRoll'));\nconst ContactsPage = lazy(() => import('./Contacts'));\nconst ContactPage = lazy(() => import('./ContactPage'));\nconst PaymentPage = lazy(() => import('./PaymentPage'));\nconst PaymentsPage = lazy(() => import('./Payments'));\nconst MaintenancesPage = lazy(() => import('./Maintenances'));\nconst PropertyDetailsPage = lazy(() => import('./PropertyDetails'));\nconst UserPage = lazy(() => import('./UserPage'));\nconst UserProfilePage = lazy(() => import('./UserProfilePage'));\nconst ManagementFeePage = lazy(() => import('./ManagementFeePage'));\nconst MaintenanceRequestPage = lazy(() => import('./MaintenanceRequestPage'));\nconst ToDosPage = lazy(() => import('./ToDos'));\nconst DocumentsTemplatesPage = lazy(() => import('./DocumentsTemplates'));\nconst DocumentTemplatePage = lazy(() => import('./DocumentTemplatePage'));\nconst NoticePage = lazy(() => import('./NoticePage'));\nconst NoticesPage = lazy(() => import('./Notices'));\nconst PropertyIncomeStatement = lazy(() => import('./PropertyIncomeStatement'));\nconst PropertyPerformancePage = lazy(() => import('./PropertyPerformancePage'));\nconst TenantsStatementsPage = lazy(() => import('./TenantsStatements'));\nconst EmailPage = lazy(() => import('./EmailPage'));\nconst EmailsPage = lazy(() => import('./Emails'));\nconst AccountSettingsPage = lazy(() => import('./AccountSettings'));\nconst MeterReadingPage = lazy(() => import('./MeterReadingPage'));\nconst MeterReadingsPage = lazy(() => import('./MeterReadings'));\nconst OtherChargesPage = lazy(() => import('./OtherCharges'));\nconst OutstandingBalancesPage = lazy(() => import('./OutstandingBalances'));\n\n\nlet MainPage = ({\n  currentUser,\n  match,\n  fetchData, setUser, setError\n}) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!currentUser) {\n      auth.onAuthStateChanged(\n        async function (user) {\n          if (user) {\n            //get details about user\n            try {\n              const userDetails = await getUserDetails(user)\n              setUser(userDetails)\n            } catch (error) {\n              setUser(null);\n              history.push(\"/login\");\n            }\n          } else {\n            // User is signed out.\n            setUser(null);\n            history.push(\"/login\");\n          }\n        },\n        function (error) {\n          setUser(null);\n          setError(error.message);\n          history.push(\"/login\");\n          console.log('An error during onauthstatechanged =>', error);\n        });\n    }\n    else {\n      fetchData([\n        \"properties\",\n        \"property_units\",\n        \"unit-charges\",\n        \"transactions-charges\",\n        \"charge-payments\",\n        \"maintenance-requests\",\n        \"communication_emails\",\n        \"contacts\",\n        \"notices\",\n        \"leases\",\n        \"to-dos\",\n        \"users\",\n        \"expenses\",\n        \"company_profile\",\n        \"account-billing\",\n        \"meter_readings\",\n        \"property-settings\",\n        \"email-templates\",\n        \"management-fees\",\n        \"audit-logs\",\n      ]);\n    }\n  }, [currentUser]);\n\n  return (\n    <React.Fragment>\n      { currentUser ?\n        <Router>\n          <ErrorBoundary>\n            <Suspense fallback={<LoadingBackdrop open={true} />}>\n              <Switch>\n                <Route exact path={`${match.path}reports/property-income`} component={PropertyIncomeStatement} />\n                <Route exact path={`${match.path}reports/property-performance`} component={PropertyPerformancePage} />\n                <Route exact path={`${match.path}`} component={DashBoard} />\n                <Route exact path={`${match.path}rent-roll`} component={RentRollPage} />\n                <Route exact path={`${match.path}emails`} component={EmailsPage} />\n                <Route exact path={`${match.path}account-settings`} component={AccountSettingsPage} />\n                <Route\n                  exact\n                  path={`${match.path}maintenance-requests/new`}\n                  component={MaintenanceRequestPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}maintenance-requests/:maintenanceRequestId/edit`}\n                  component={MaintenanceRequestPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}maintenance-requests`}\n                  component={MaintenancesPage}\n                />\n                <Route exact path={`${match.path}to-dos`} component={ToDosPage} />\n                <Route exact path={`${match.path}documents-templates`} component={DocumentsTemplatesPage} />\n                <Route exact path={`${match.path}documents-templates/:templateId/edit`} component={DocumentTemplatePage} />\n                <Route exact path={`${match.path}documents-templates/new`} component={DocumentTemplatePage} />\n                <Route\n                  exact\n                  path={`${match.path}audit-logs`}\n                  component={AuditLogsPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}properties/new`}\n                  component={PropertyPage}\n                />\n                <Route exact path={`${match.path}users/new`} component={UserPage} />\n                <Route exact path={`${match.path}users/:userId/edit`}\n                  component={UserPage}\n                />\n                <Route exact path={`${match.path}users`} component={UsersPage} />\n                <Route\n                  exact\n                  path={`${match.path}leases/new`}\n                  component={LeasePage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}payments/:chargeId/new`}\n                  component={PaymentPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}properties/:propertyId/edit`}\n                  component={PropertyPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}properties/:propertyId/details`}\n                  component={PropertyDetailsPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}contacts/:contactId/details`}\n                  component={TenantDetailsPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}users/:userId/details`}\n                  component={UserProfilePage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}users/:userId/details/management-fees/new`}\n                  component={ManagementFeePage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}users/:userId/details/management-fees/managementFeeId/edit`}\n                  component={ManagementFeePage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}properties/:propertyId/details/:propertyUnitId/edit`}\n                  component={PropertyUnitPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}properties/:propertyId/details/new`}\n                  component={PropertyUnitPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}contacts`}\n                  component={ContactsPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}leases/:leaseId/edit`}\n                  component={LeasePage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}other-charges`}\n                  component={OtherChargesPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}payments/:paymentId/edit`}\n                  component={PaymentEditForm}\n                />\n                <Route\n                  exact\n                  path={`${match.path}contacts/new`}\n                  component={ContactPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}property_expenditure/new`}\n                  component={ExpensePage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}property_expenditure`}\n                  component={ExpensesPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}property_expenditure/:expenseId/edit`}\n                  component={ExpensePage}\n                />\n\n                <Route exact path={`${match.path}emails/new`} component={EmailPage} />\n                <Route\n                  exact\n                  path={`${match.path}contacts/:contactId/edit`}\n                  component={ContactPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}notices/new`}\n                  component={NoticePage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}reports/outstanding-balances`}\n                  component={OutstandingBalancesPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}notices`}\n                  component={NoticesPage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}notices/:noticeId/edit`}\n                  component={NoticePage}\n                />\n                <Route\n                  exact\n                  path={`${match.path}meter-reading/:meterReadingId/edit`}\n                  component={MeterReadingPage}\n                />\n                <Route exact path={`${match.path}properties`} component={PropertiesPage} />\n                <Route exact path={`${match.path}meter-reading`} component={MeterReadingsPage} />\n                <Route exact path={`${match.path}meter-reading/new`} component={MeterReadingPage} />\n                <Route exact path={`${match.path}reports/tenant-statements`} component={TenantsStatementsPage} />\n                <Route exact path={`${match.path}leases`} component={LeasesPage} />\n                <Route exact path={`${match.path}payments`} component={PaymentsPage} />\n              </Switch>\n            </Suspense>\n          </ErrorBoundary>\n        </Router>\n        : null}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    properties: state.properties,\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // fetchData: (tenant, url) => dispatch(itemsFetchData(tenant, url)),\n    fetchData: (tenant, url) => dispatch(tenantsFetchData(tenant, url)),\n    setUser: (user) => dispatch(setCurrentUser(user)),\n    setError: (error) => dispatch(itemsHasErrored(error)),\n  };\n};\n\nMainPage = connect(mapStateToProps, mapDispatchToProps)(MainPage);\n\nexport default withRouter(MainPage);\n","import Container from \"@material-ui/core/Container\";\nimport Head from \"./Head\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React from \"react\";\n\n\nconst Layout = (props) => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CssBaseline />\n\t\t\t<Head title={props.pageTitle} />\n\t\t\t<Container maxWidth={props.maxWidth || \"xs\"} component=\"main\">\n\t\t\t\t{props.children}\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n};\nexport default Layout;\n","import React from \"react\";\nimport Layout from \"../components/GeneralLayout\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport Box from \"@material-ui/core/Box\"\nimport { connect } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport { signUpWithEmailAndPassword } from \"../actions/actions\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport * as Yup from \"yup\";\n\nconst SignUpSchema = Yup.object().shape({\n  password: Yup.string().min(6, \"Too Short!\")\n    .max(50, \"We prefer an insecure system, try a shorter password.\")\n    .required(\"Pasword is Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Email is Required\"),\n  confirmPassword: Yup.string().required(\"Confirm Password Required\")\n    .test(\"passwords-match\", \"Passwords must match\", function (value) {\n      return this.parent.password === value;\n    }),\n  first_name: Yup.string().trim().min(4, \"Too Short!\").required(\"First Name is Required\"),\n  last_name: Yup.string().trim().min(4, \"Too Short!\").required(\"Last Name is Required\"),\n  phone_number: Yup.string().trim().min(10, \"Too Short!\").required(\"Phone Number is Required\"),\n});\n\nconst SignUpLayout = () => {\n\n  const classes = commonStyles();\n\n  let loginValues = { email: \"\", password: \"\", confirmPassword: \"\", first_name: '', last_name: '', phone_number: '' };\n\n  return (\n    <Layout maxWidth=\"md\" pageTitle=\"Sign Up\" >\n      <Typography align=\"center\" variant=\"h5\" gutterBottom paragraph>Sign Up</Typography>\n      <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\">\n        <Formik\n          initialValues={loginValues}\n          validationSchema={SignUpSchema}\n          onSubmit={async (values, { resetForm, setStatus, setSubmitting }) => {\n            const userDetails = {\n              email: values.email,\n              password: values.password,\n              phone_number: values.phone_number,\n              first_name: values.first_name,\n              last_name: values.last_name,\n              primary_email: values.email\n            }\n            try {\n              await signUpWithEmailAndPassword(userDetails);\n              resetForm({});\n              setStatus({ success: \"Successfully added user\" })\n            } catch (error) {\n              setSubmitting(false);\n              setStatus({ error: error.message });\n              console.log(\"Error message => \", error);\n            }\n          }}>\n          {({\n            values,\n            handleSubmit,\n            touched,\n            status,\n            errors,\n            handleChange,\n            handleBlur,\n            isSubmitting,\n          }) => (\n            <form\n              className={classes.form}\n              method=\"post\"\n              id=\"signUpForm\"\n              onSubmit={handleSubmit}\n            >\n              <Grid container justify=\"center\" direction=\"column\" spacing={3}>\n                {status && status.error && (\n                  <Grid item xs={12}>\n                    <Alert severity=\"error\">{status.error}</Alert>\n                  </Grid>\n                )}\n                {status && status.success && (\n                  <Grid item>\n                    <Alert severity=\"success\">Account created successfully!\n                    Please verify your email address. A link to verify your email has been sent to the\n                    email provided. </Alert>\n                    <Alert severity=\"success\">If you do not receive the confirmation message within a\n                    few minutes, please check your spam folder just in case\n                    the confirmation email got delivered there instead of your inbox.\n                    If so, select the confirmation message and click Not Spam,\n                    which will allow future messages to get through.\n                    </Alert>\n                  </Grid>\n                )}\n                <Grid item container justify=\"center\" direction=\"row\" spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"first_name\"\n                      label=\"First Name\"\n                      type=\"first_name\"\n                      value={values.first_name}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      helperText={touched.first_name && errors.first_name}\n                      error={errors.first_name && touched.first_name}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"last_name\"\n                      label=\"Last Name\"\n                      type=\"last_name\"\n                      value={values.last_name}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      helperText={touched.last_name && errors.last_name}\n                      error={errors.last_name && touched.last_name}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item container justify=\"center\" direction=\"row\" spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"phone_number\"\n                      label=\"Phone Number\"\n                      type=\"text\"\n                      value={values.phone_number}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      helperText={\n                        touched.phone_number && errors.phone_number\n                      }\n                      error={errors.phone_number && touched.phone_number}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"email\"\n                      label=\"Email Address\"\n                      value={values.email}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      helperText={touched.email && errors.email}\n                      error={errors.email && touched.email}\n                      type=\"email\"\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item container justify=\"center\" direction=\"row\" spacing={2}>\n                  <Grid item xs={12} md>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      value={values.password}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      helperText={touched.password && errors.password}\n                      error={errors.password && touched.password}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"confirmPassword\"\n                      label=\"Confirm Password\"\n                      type=\"password\"\n                      value={values.confirmPassword}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      helperText={\n                        touched.confirmPassword && errors.confirmPassword\n                      }\n                      error={errors.confirmPassword && touched.confirmPassword}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Button\n                    disabled={isSubmitting}\n                    type=\"submit\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    form=\"signUpForm\"\n                  >\n                    Sign Up\n                  </Button>\n                </Grid>\n                <Grid item container direction=\"row\" alignItems=\"center\">\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">\n                      Have an account?\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      disabled={isSubmitting}\n                      color=\"primary\"\n                      component={RouterLink}\n                      to={\"/app/login\"}\n                    >\n                      Sign In\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Layout>\n  );\n};\n\n\nexport default connect(null)(SignUpLayout);\n","import React from \"react\";\nimport { Dialog, Button, FormHelperText, FormControl, TextField } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { resetUserPasswordByEmail } from \"../../actions/actions\";\n\n\nconst ResetPasswordSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is Required\"),\n});\n\nexport default function FormDialog(props) {\n  const { open, handleClose } = props\n\n  const emailValues = { email: '' }\n  return (\n    <div>\n      <Formik\n        initialValues={emailValues}\n        validationSchema={ResetPasswordSchema}\n        onSubmit={async (values, { resetForm, setStatus, setSubmitting }) => {\n          var email = values.email;\n          try {\n            await resetUserPasswordByEmail(email)\n            resetForm({});\n            setSubmitting(false);\n            setStatus({ success: 'Password Reset Email Sent Successfully' });\n          } catch (error) {\n            setSubmitting(false);\n            // Handle Errors here.\n            console.log(\"Error => \", error)\n            var errorCode = error.code;\n            var errorMessage =\n              errorCode === \"auth/missing-continue-uri\"\n                ? \"A continue URL must be provided.\"\n                : errorCode === \"auth/invalid-continue-uri\"\n                  ? \"Continue URL provided is invalid\"\n                  : errorCode === \"auth/invalid-email\"\n                    ? \"Email is Invalid\"\n                    : errorCode === \"auth/unauthorized-continue-uri\"\n                      ? \"Continue URL domain is not whitelisted\"\n                      : errorCode === \"auth/user-not-found\"\n                        ? \"No user found with email\"\n                        : \"Failed to connect to resource. Check your internet connection\";\n            setStatus({ error: errorMessage });\n          };\n        }}>\n        {({\n          values,\n          handleSubmit,\n          status,\n          errors,\n          handleChange,\n          handleBlur,\n          isSubmitting,\n        }) => (\n            <form\n              method=\"post\"\n              id=\"resetPasswordForm\"\n              onSubmit={handleSubmit}\n            >\n              <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\"\n              >\n                <DialogTitle id=\"form-dialog-title\">Reset Password</DialogTitle>\n                <DialogContent>\n                  <DialogContentText>\n                    To reset your password, please enter your email address. We\n                    will send the reset link to your email.\n                  </DialogContentText>\n                  {status && status.success && (\n                    <FormControl fullWidth>\n                      <FormHelperText>\n                        {status.success}\n                      </FormHelperText>\n                    </FormControl>\n                  )}\n                  {status && status.error && (\n                    <FormControl fullWidth>\n                      <FormHelperText error={true}>\n                        {status.error}\n                      </FormHelperText>\n                    </FormControl>\n                  )}\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"email\"\n                    label=\"Email Address\"\n                    value={values.email}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    helperText={errors.email}\n                    error={'email' in errors}\n                    InputLabelProps={{ shrink: true }}\n                  />\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n          </Button>\n                  <Button color=\"primary\" disabled={isSubmitting}\n                    type=\"submit\"\n                    variant=\"outlined\"\n                    form=\"resetPasswordForm\">\n                    Send Reset Link\n          </Button>\n                </DialogActions>\n              </Dialog>\n            </form>\n          )}\n      </Formik>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Layout from \"../components/GeneralLayout\";\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Avatar from '@material-ui/core/Avatar';\nimport { connect } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport { signInUserWithEmailAndPassword, setCurrentUser } from \"../actions/actions\";\nimport PasswordResetDialog from \"../components/login/ResetPassword\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignInSchema = Yup.object().shape({\n  password: Yup.string().trim()\n    .min(6, \"Too Short!\")\n    .max(50, \"We prefer insecure system, try a shorter password.\")\n    .required(\"Pasword is Required\"),\n  email: Yup.string().trim().email(\"Invalid email\").required(\"Email is Required\"),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\nlet SignInLayout = ({ setUser }) => {\n\n  const classes = useStyles();\n  const history = useHistory();\n  let loginValues = { email: \"\", password: \"\" };\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n      <Layout pageTitle=\"Sign In\">\n        <Formik\n          initialValues={loginValues}\n          validationSchema={SignInSchema}\n          onSubmit={async (values, { resetForm, setStatus, setSubmitting }) => {\n            var email = values.email;\n            var password = values.password;\n            try {\n              const signedInUser = await signInUserWithEmailAndPassword(email, password)\n              setUser(signedInUser)\n              resetForm({});\n              history.push(\"/app/\")\n            } catch (error) {\n              setSubmitting(false);\n              setStatus({ error: error.message });\n            }\n          }}>\n          {({\n            values,\n            handleSubmit,\n            touched,\n            status,\n            errors,\n            handleChange,\n            handleBlur,\n            isSubmitting,\n          }) => {\n            const passwordOrOtherError = (touched.password && errors.password) || (status && status.error)\n            return (\n              <div>\n                <PasswordResetDialog open={open} handleClose={handleClose} />\n                <div className={classes.paper}>\n                  <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                  </Avatar>\n                  <form\n                    className={classes.form}\n                    method=\"post\"\n                    id=\"signInForm\"\n                    onSubmit={handleSubmit}\n                  >\n                    <Grid container justify=\"center\" direction=\"column\" spacing={3}>\n                      <Grid item>\n                        <Typography align=\"center\" component=\"h1\" variant=\"h5\">\n                          Sign In\n                      </Typography>\n                      </Grid>\n                      <Grid item>\n                        <TextField\n                          fullWidth\n                          variant=\"outlined\"\n                          autoFocus\n                          margin=\"dense\"\n                          id=\"email\"\n                          label=\"Email Address\"\n                          value={values.email}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          helperText={touched.email && errors.email}\n                          error={errors.email && touched.email}\n                          type=\"email\"\n                          InputLabelProps={{ shrink: true }}\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <TextField\n                          fullWidth\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          id=\"password\"\n                          label=\"Password\"\n                          type=\"password\"\n                          value={values.password}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          helperText={passwordOrOtherError}\n                          error={(passwordOrOtherError ? true : false)}\n                          InputLabelProps={{ shrink: true }}\n                        />\n                      </Grid>\n                      <Grid item>\n                        <Button\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          form=\"signInForm\"\n                        >\n                          Sign In\n                      </Button>\n                      </Grid>\n                      <Grid item container direction=\"row\" alignItems=\"center\">\n                        <Grid item>\n                          <Typography variant=\"subtitle1\">\n                            Forgot your Password?\n                        </Typography>\n                        </Grid>\n                        <Grid item>\n                          <Button\n                            disabled={isSubmitting}\n                            color=\"primary\"\n                            onClick={handleClickOpen}\n                          >\n                            Reset Password\n                      </Button>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </form>\n                </div>\n              </div>\n            )\n          }}\n        </Formik>\n      </Layout>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUser: (user) => dispatch(setCurrentUser(user)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignInLayout);\n","import React, { useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport Layout from \"../components/GeneralLayout\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { connect } from \"react-redux\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport * as Yup from \"yup\";\n\n\nconst ResetPasswordSchema = Yup.object().shape({\n    password: Yup.string()\n        .min(6, \"Too Short!\")\n        .max(20, \"We prefer insecure system, try a shorter password.\")\n        .required(\"Pasword is Required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is Required\"),\n    confirmPassword: Yup.string()\n        .required(\"Confirm Password Required\")\n        .test(\"passwords-match\", \"Passwords must match\", function (value) {\n            return this.parent.password === value;\n        }),\n});\n\nlet AccountActions = (props) => {\n    const [emailVerificationSuccess, setEmailVerificationSuccess] = useState()\n    const [emailVerificationError, setEmailVerificationError] = useState()\n    const classes = commonStyles();\n\n    let loginValues = { email: '', password: \"\", confirmPassword: \"\" };\n\n    let params = queryString.parse(props.location.search)\n    // Get the action to complete.\n    var mode = params.mode;\n    // Get the one-time code from the query parameter.\n    var actionCode = params.oobCode;\n\n    const applyEmailConfirmationCode = async () => {\n        try {\n            await auth.applyActionCode(actionCode)\n            // Email address has been verified.\n            // Display a confirmation message to the user.\n            // You could also provide the user with a link back to the app.\n            setEmailVerificationSuccess(true)\n        } catch (error) {\n            // Code is invalid or expired. Ask the user to verify their email address\n            // again.\n            setEmailVerificationError(true)\n        }\n\n    }\n\n    return (\n        <Layout>\n            <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\" p={4}>\n                {\n                    mode === \"resetPassword\" ?\n                        (\n                            <Formik\n                                initialValues={loginValues}\n                                validationSchema={ResetPasswordSchema}\n                                onSubmit={async (values, { resetForm, setStatus }) => {\n                                    // Verify the password reset code is valid.\n                                    try {\n                                        var accountEmail = await auth.verifyPasswordResetCode(actionCode)\n                                        var newPassword = values.password;\n                                        try {\n                                            // TODO: Show the reset screen with the user's email and ask the user for\n                                            // the new password.\n                                            // Save the new password.\n                                            await auth.confirmPasswordReset(actionCode, newPassword)\n                                            // Password reset has been confirmed and new password updated.\n                                            //sign-in the user directly\n                                            resetForm({});\n                                            setStatus({ success: \"Password reset successful!\" });\n                                        } catch (error) {\n                                            setStatus({ error: \"Error occurred during confirmation. The code might have expired or the password is too weak.\" });\n                                            console.log('Error confirming password reset => ', error)\n                                        }\n                                    } catch (error) {\n                                        setStatus({ error: \"Invalid or expired action code.Please try to reset the password again\" })\n                                        console.log(\"Error verifying code => \", error)\n                                    }\n                                }\n                                }\n                                render={({\n                                    values,\n                                    handleSubmit,\n                                    touched,\n                                    status,\n                                    errors,\n                                    handleChange,\n                                    handleBlur,\n                                    isSubmitting,\n                                }) => (\n                                        <form\n                                            className={classes.form}\n                                            method=\"post\"\n                                            id=\"resetPasswordForm\"\n                                            onSubmit={handleSubmit}\n                                        >\n                                            <Grid container justify=\"center\" direction=\"column\" spacing={2}>\n                                                <Grid item>\n                                                    <Typography variant=\"subtitle1\">Reset Password</Typography>\n                                                </Grid>\n                                                {status && status.error && (\n                                                    <Grid item>\n                                                        <FormControl fullWidth>\n                                                            <FormHelperText error={true}>\n                                                                {status.error}\n                                                            </FormHelperText>\n                                                        </FormControl>\n                                                    </Grid>\n                                                )}\n                                                {status && status.success && (\n                                                    <Grid item>\n                                                        <Typography variant=\"h6\">Password reset successful.</Typography>\n                                                        <Link component={RouterLink} to=\"/app/login\">Click here to login</Link>\n                                                    </Grid>\n                                                )}\n                                                <Grid item>\n                                                    <TextField\n                                                        fullWidth\n                                                        variant=\"outlined\"\n                                                        autoFocus\n                                                        margin=\"dense\"\n                                                        id=\"email\"\n                                                        label=\"Email Address\"\n                                                        value={values.email}\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        helperText={errors.email}\n                                                        error={'email' in errors}\n                                                        InputLabelProps={{ shrink: true }}\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        fullWidth\n                                                        variant=\"outlined\"\n                                                        margin=\"dense\"\n                                                        id=\"password\"\n                                                        label=\"Password\"\n                                                        type=\"password\"\n                                                        value={values.password}\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        helperText={touched.password && errors.password}\n                                                        error={errors.password && touched.password}\n                                                        InputLabelProps={{ shrink: true }}\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        fullWidth\n                                                        variant=\"outlined\"\n                                                        margin=\"dense\"\n                                                        id=\"confirmPassword\"\n                                                        label=\"Confirm Password\"\n                                                        type=\"password\"\n                                                        value={values.confirmPassword}\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        helperText={\n                                                            errors.confirmPassword\n                                                        }\n                                                        error={'confirmPassword' in errors}\n                                                        InputLabelProps={{ shrink: true }}\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <Button\n                                                        disabled={isSubmitting}\n                                                        type=\"submit\"\n                                                        variant=\"outlined\"\n                                                        form=\"resetPasswordForm\">\n                                                        Reset Password\n                                                </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </form>\n                                    )\n                                }\n                            />\n                        )\n                        : mode === 'verifyEmail' ?\n                            // Display email verification handler and UI.\n                            // Localize the UI to the selected language as determined by the lang\n                            // parameter.\n                            // Try to apply the email verification code.\n                            (\n                                <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" spacing={2}>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle1\">Email Account Verification</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button variant=\"contained\" color=\"primary\" onClick={applyEmailConfirmationCode}>Verify Email</Button>\n                                    </Grid>\n                                    {\n                                        emailVerificationSuccess &&\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" align=\"center\">\n                                                Email Verified Successfully\n                                        </Typography>\n                                            <Link component={RouterLink} to=\"/app/login\">Click here to login</Link>\n                                        </Grid>\n                                    }\n                                    {\n                                        emailVerificationError &&\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" align=\"center\">\n                                                Email Verification Failed! Code is invalid or expired!\n                                        </Typography>\n                                        </Grid>\n                                    }\n                                </Grid>\n                            )\n\n                            : null\n                }\n            </Box>\n        </Layout>\n    );\n};\n\nexport default connect(null)(AccountActions);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport GroupIcon from '@material-ui/icons/Group';\nimport WorkIcon from '@material-ui/icons/Work';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport ApartmentIcon from '@material-ui/icons/Apartment';\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport StarIcon from '@material-ui/icons/StarBorder';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Link as ReactRouterLink } from \"react-router-dom\";\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Alert from \"@material-ui/lab/Alert\"\nimport Box from '@material-ui/core/Box';\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport 'typeface-lato';\nimport * as Yup from \"yup\";\n\nconst messageSchema = Yup.object().shape({\n    email: Yup.string().trim().email(\"Invalid email\"),\n    first_name: Yup.string().trim().min(4, \"Too Short!\").required(\"First Name is Required\"),\n    last_name: Yup.string().trim().min(4, \"Too Short!\").required(\"Last Name is Required\"),\n    subject: Yup.string().trim().min(6, \"Too Short!\").required(\"Subject is Required\"),\n    phone_number: Yup.string().trim().min(10, \"Too Short!\").required(\"Phone Number is Required\"),\n    message: Yup.string().trim().min(6, \"Too Short!\").required(\"Message is Required\"),\n});\n\nconst messageValues = { first_name: '', last_name: '', email: '', subject: '', phone_number: '', message: '' }\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"#\">\n                PropertyPro Property Management\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: \"Lato\"\n    },\n    palette: {\n        text: {\n            primary: \"#121037\",\n            secondary: \"#546e7a\",\n        }\n    },\n});\n\n\nconst appFeatures = [\n    {\n        icon: <ApartmentIcon style={{ color: \"#3f51b5\" }} fontSize=\"large\" />, title: \"Unit Management\",\n        description: `Manage property unit details such as unit details, rent pricing \n        through rental agreements, unit recurring and one-time charges, current and previous tenants, availability status.`},\n    {\n        icon: <GroupIcon style={{ color: \"#3f51b5\" }} fontSize=\"large\" />, title: \"Tenant Management\",\n        description: `Manage tenant personal and contact information, unit occupancy, relevant documentation, \n        rent and other charges, charges and payments statements, tenants payments history`},\n    {\n        icon: <AccountBalanceIcon style={{ color: \"#3f51b5\" }} fontSize=\"large\" />, title: \"Accounting\",\n        description: `We enable to keep your bookkeeping accurate and up-to-date. \n        Track rent and other charges, payments, expenses\n        and reconcile property income statments.`},\n    {\n        icon: <WorkIcon style={{ color: \"#3f51b5\" }} fontSize=\"large\" />, title: \"Rental Agreements\",\n        description: `Track and manage rental agreements, payment schedules, record payment transactions on agreements, \n        outstanding rent balances, unit deposits and charges on deposits.`},\n]\n\nconst appModules = [\n    {\n        image: \"/propertyDetails.png\", title: \"Property Details & Summary\",\n        description: `Get detailed summaries for each property including such details as units distribution,\n        occupancy, rent charges and payments through smart analytics, summaries and charts`},\n    {\n        image: \"/tenantDetails.png\", title: \"Tenant Details & Summary\",\n        description: `Track individual tenant details, charges and payments statements, units history, rental agreements\n        start and end dates through smart analytics, summaries and charts etc.`},\n    {\n        image: \"/rentRoll.png\", title: \"Rent Roll\",\n        description: `Get a detailed view of each property rental agreements rent charges, rent payments, \n        rent outstanding balances, monthly and yearly rent income statements.`},\n    {\n        image: \"/rentalAgreements.png\", title: \"Property Performance\",\n        description: `Generate property performance reports including income statements, expenses statements,\n        for such periods as current-month, 3 months to-date, year-to-date, last-year etc.`},\n]\n\nconst appCustomers = [\n    {\n        image: \"/propertyDetails.png\", name: \"Evans Rugara\", title: \"Growth Marketer, Prime PM\", review: `Connect in spaces designed\n     to bring incredible people together. Learn with them and take your project to new heights.`},\n    {\n        image: \"/rentalUnits.png\", name: \"John Njoroge\", title: \"Lead Generation, Gallant PM\", review: `Stay as little as 3 months with rolling contracts. \n    Like it here? This is your space, so stay as long as you want.`},\n]\n\nconst appServices = [\n    { icon: <ApartmentIcon />, title: \"Unit Management\" },\n    { icon: <ContactsIcon />, title: \"Tenant Management\" },\n    { icon: <ScheduleIcon />, title: \"Rental Agreements Management\" },\n    { icon: <AccountBalanceIcon />, title: \"Charges & Payments Performance\" },\n    { icon: <AssessmentIcon />, title: \"Property Performance\" },\n    { icon: <MoneyOffIcon />, title: \"Expenses Tracking\" },\n    { icon: <EmailIcon />, title: \"In-App Email\" },\n]\n\nconst pricingTiers = [\n    {\n        title: 'Starter',\n        price: '3500',\n        description: ['10 users included', '2 GB of storage', 'Help center access', 'Email support'],\n        buttonText: 'Sign up',\n        buttonVariant: 'contained',\n    },\n    {\n        title: 'Growing',\n        subheader: 'Most popular',\n        price: '5000',\n        description: [\n            '20 users included',\n            '10 GB of storage',\n            'Help center access',\n            'Priority email support',\n        ],\n        buttonText: 'Sign up',\n        buttonVariant: 'contained',\n    },\n    {\n        title: 'Enterprise',\n        price: '10000',\n        description: [\n            '50 users included',\n            'Unlimited Storage',\n            'Help center access',\n            'Phone & email support',\n        ],\n        buttonText: 'Contact Us',\n        buttonVariant: 'contained',\n    },\n];\nconst footers = [\n    {\n        title: 'Company',\n        description: ['Team', 'History', 'Contact us', 'Locations'],\n    },\n    {\n        title: 'Features',\n        description: ['Tenant Management', 'Rental Agreeements', 'Unit Management', 'Charges & Payments', 'Income Statements'],\n    },\n    {\n        title: 'Resources',\n        description: ['Guide', 'FAQs', 'Contacts', 'Referral Programme'],\n    },\n    {\n        title: 'Legal',\n        description: ['Privacy policy', 'Terms of use'],\n    },\n];\n\nexport default function HomePage() {\n    const classes = commonStyles();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const drawer = (\n        <div>\n            <div className={classes.homePageToolBar} />\n            <Divider />\n            <List>\n                {['About', 'Features', 'Reviews', 'Pricing', 'Contact'].map((text, index) => (\n                    <ListItem button key={text} onClick={() => {\n                        handleDrawerToggle();\n                        var element = document.getElementById(text.toLowerCase())\n                        if (element) {\n                            element.scrollIntoView(true)\n                        }\n                    }} href={text}>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n                <ListItem button key=\"login-button\" component={ReactRouterLink} to=\"/login\">\n                    <ListItemText primary=\"Login\" />\n                </ListItem>\n            </List>\n        </div>\n    );\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" color=\"default\" className={classes.appBar}>\n                <Toolbar className={classes.homePageToolBar}>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.homePageMenuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.homePageToolbarTitle} noWrap>\n                        Property Pro\n                    </Typography>\n                    <Hidden smDown implementation=\"js\">\n                        <nav>\n                            <Link variant=\"button\" color=\"textPrimary\" href=\"#about\" className={classes.link}>\n                                About\n                            </Link>\n                            <Link variant=\"button\" color=\"textPrimary\" href=\"#features\" className={classes.link}>\n                                Features\n                            </Link>\n                            {/*<Link variant=\"button\" color=\"textPrimary\" href=\"#reviews\" className={classes.link}>*/}\n                            {/*    Reviews*/}\n                            {/*</Link>*/}\n                            {/*<Link variant=\"button\" color=\"textPrimary\" href=\"#pricing\" className={classes.link}>*/}\n                            {/*    Pricing*/}\n                            {/*</Link>*/}\n                            {/*<Link variant=\"button\" color=\"textPrimary\" href=\"#contact\" className={classes.link}>*/}\n                            {/*    Support*/}\n                            {/*</Link>*/}\n                            <Button color=\"primary\" variant=\"outlined\" className={classes.link} component={ReactRouterLink}\n                                to=\"/login\">\n                                Login\n                            </Button>\n                            <Button to=\"/sign-up\" color=\"primary\" variant=\"outlined\" className={classes.link} component={ReactRouterLink}>\n                                Sign Up\n                            </Button>\n                        </nav>\n                    </Hidden>\n                </Toolbar>\n            </AppBar>\n            <nav className={classes.drawer} aria-label=\"website navigation\">\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Hidden mdUp implementation=\"js\">\n                    <Drawer\n                        variant=\"temporary\"\n                        anchor={'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n            {/* Hero unit */}\n            <main className={classes.homePageContent}>\n                <div className={classes.heroContent} id=\"about\">\n                    <div className={classes.homePageToolBar} />\n                    <Grid container alignItems=\"center\" justify=\"center\">\n                        <Grid item container lg={10} spacing={4} alignItems=\"center\" justify=\"center\" direction=\"row\">\n                            <Grid item xs={12} md={5} container spacing={2} alignItems=\"center\" justify=\"center\" direction=\"column\">\n                                <Grid item container>\n                                    <Grid item>\n                                        <Typography component=\"h3\" variant=\"h3\" className={classes.boldFont} gutterBottom>\n                                            Management made easy\n                                </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"h6\" color=\"textSecondary\">\n                                            For property managers, owners, and management startups.\n                                            Choose the property management software designed to inspire and power\n                                            you to manage your rental properties.\n                                </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container direction='row' spacing={2}>\n                                    <Grid item>\n                                        <Button variant=\"contained\" href=\"#contact\" color=\"primary\">Sign Up</Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button variant=\"outlined\" href=\"#features\" color=\"primary\">Features</Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} md={7} container alignItems=\"center\" justify=\"center\" direction=\"column\">\n                                <Grid item xs={12}>\n                                    <img src=\"https://res.cloudinary.com/dae3oj71g/image/upload/v1686340688/headerImage.svg\" alt=\"\" className={classes.fullHeightWidthContainer} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n                <Divider />\n                {/* Hero unit */}\n                <Container maxWidth=\"lg\" component=\"section\" className={classes.heroContent} style={{ backgroundColor: \"rgb(247, 249, 250)\" }} id=\"features\">\n                    <Grid container spacing={10} alignItems=\"center\" justify=\"center\" direction=\"column\">\n                        <Grid item container spacing={2} alignItems=\"center\" justify=\"center\" direction=\"column\">\n                            <Grid item>\n                                <Typography component=\"h4\" variant=\"h4\" align=\"center\" className={classes.boldFont}>\n                                    Transforming rental management for the digital age.\n                        </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                                <Typography component=\"p\" variant=\"h6\" color=\"textSecondary\" align=\"center\">\n                                    Through PropertyPro, you can keep up-to-date rental properties and units records, tenant\n                                    details, rental agreements and occupancy records, resolve maintenance issues and\n                                    update property financials, from anywhere.\n                        </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container item spacing={4} alignItems=\"flex-start\" justify=\"center\" direction=\"row\">\n                            {\n                                appFeatures.map((feature, featureIndex) => (\n                                    <Grid key={featureIndex} item container xs={12} md={3} direction=\"column\" spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            {feature.icon}\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"h6\" className={classes.boldFont}>\n                                                {feature.title}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography component=\"p\" align=\"center\" color=\"textSecondary\">\n                                                {feature.description}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                ))\n                            }\n                        </Grid>\n                    </Grid>\n                </Container>\n                {/*<Divider />*/}\n                {/*<Container maxWidth=\"lg\" component=\"section\" className={classes.heroContent}>*/}\n                {/*    <Grid container alignItems=\"center\" justify=\"center\">*/}\n                {/*        <Grid item container lg={12} alignItems=\"center\" justify=\"center\" spacing={2} direction=\"row\">*/}\n                {/*            <Grid item container xs={12} md={6} spacing={2} direction=\"column\" alignItems=\"center\" justify=\"center\" >*/}\n                {/*                <Grid item xs={12}>*/}\n                {/*                    <Typography component=\"h5\" variant=\"h4\" className={classes.boldFont}>*/}\n                {/*                        The right software means managing your portfolio is easy.*/}\n                {/*            </Typography>*/}\n                {/*                </Grid>*/}\n                {/*                <Grid item xs={12}>*/}\n                {/*                    <Typography variant=\"h6\" color=\"textSecondary\">*/}\n                {/*                        Rather than worrying about the management of your properties,*/}\n                {/*                        you can instead oversee management in one place thus providing a*/}\n                {/*                        substantial increase in transparency, accountability, efficiency*/}\n                {/*                        while keeping administration to a minimum.*/}\n                {/*                        We also made sure to include all the modules and functionality that*/}\n                {/*                        a property owner/manager could possibly need.*/}\n                {/*            </Typography>*/}\n                {/*                </Grid>*/}\n                {/*            </Grid>*/}\n                {/*            <Grid item xs={12} md={6}>*/}\n                {/*                <img src=\"/easyManagement.jpg\" alt=\"advertImage\" className={classes.fullHeightWidthContainer} />*/}\n                {/*            </Grid>*/}\n                {/*        </Grid>*/}\n                {/*    </Grid>*/}\n                {/*</Container>*/}\n                {/*<Divider />*/}\n                {/* Hero unit */}\n                {/*<Container maxWidth=\"lg\" component=\"section\" className={classes.heroContent}>*/}\n                {/*    <Grid container spacing={10} alignItems=\"center\" justify=\"center\" direction=\"column\">*/}\n                {/*        <Grid item container spacing={2} alignItems=\"center\" justify=\"center\" direction=\"column\">*/}\n                {/*            <Grid item>*/}\n                {/*                <Typography component=\"h3\" variant=\"h4\" className={classes.boldFont} align=\"center\">*/}\n                {/*                    Featured Modules*/}\n                {/*        </Typography>*/}\n                {/*            </Grid>*/}\n                {/*            <Grid item xs={10}>*/}\n                {/*                <Typography component=\"p\" variant=\"h6\" color=\"textSecondary\" align=\"center\">*/}\n                {/*                    Here are some modules in the app to keep properties, units details and records,*/}\n                {/*                    tenants details, rental agreements with tenants,*/}\n                {/*                    rent and other charges, payments to these charges, property expenses, property and*/}\n                {/*                    tenants income and charges statements.*/}\n                {/*        </Typography>*/}\n                {/*            </Grid>*/}\n                {/*        </Grid>*/}\n                {/*        <Grid item container spacing={4} alignItems=\"stretch\" justify=\"center\" direction=\"row\">*/}\n                {/*            {*/}\n                {/*                appModules.map((module, moduleIndex) => (*/}\n                {/*                    <Grid key={moduleIndex} item xs={12} md={6}>*/}\n                {/*                        <Card key={moduleIndex} className={classes.fullHeightWidthContainer}>*/}\n                {/*                            <CardActionArea>*/}\n                {/*                                <CardMedia*/}\n                {/*                                    height=\"auto\"*/}\n                {/*                                    width=\"auto\"*/}\n                {/*                                    component=\"img\"*/}\n                {/*                                    alt=\"Module Images\"*/}\n                {/*                                    image={module.image}*/}\n                {/*                                    title={module.title}*/}\n                {/*                                />*/}\n                {/*                            </CardActionArea>*/}\n                {/*                            <CardContent>*/}\n                {/*                                <Typography gutterBottom variant=\"h6\" component=\"h4\">*/}\n                {/*                                    {module.title}*/}\n                {/*                                </Typography>*/}\n                {/*                                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">*/}\n                {/*                                    {module.description}*/}\n                {/*                                </Typography>*/}\n                {/*                            </CardContent>*/}\n                {/*                        </Card>*/}\n                {/*                    </Grid>*/}\n                {/*                ))*/}\n                {/*            }*/}\n                {/*        </Grid>*/}\n                {/*    </Grid>*/}\n                {/*</Container>*/}\n                {/*<Divider />*/}\n                {/* Hero unit */}\n                {/*<Container maxWidth=\"lg\" component=\"section\" className={classes.heroContent} style={{ backgroundColor: \"rgb(247, 249, 250)\" }}>*/}\n                {/*    <Grid container spacing={4} alignItems=\"center\" justify=\"center\" direction=\"row\">*/}\n                {/*        <Grid item container xs={12} md={4} spacing={2} alignItems=\"center\" justify=\"center\" direction=\"column\">*/}\n                {/*            <Grid item>*/}\n                {/*                <Typography component=\"h4\" variant=\"h4\" className={classes.boldFont}>*/}\n                {/*                    What's included*/}\n                {/*            </Typography>*/}\n                {/*            </Grid>*/}\n                {/*            <Grid item>*/}\n                {/*                <Button variant=\"contained\" color=\"primary\" href=\"#pricing\">EXPLORE OUR PACKAGES</Button>*/}\n                {/*            </Grid>*/}\n                {/*        </Grid>*/}\n                {/*        <Grid container item xs={12} md={8} spacing={3} justify=\"space-between\" alignItems=\"center\" direction=\"row\">*/}\n                {/*            {*/}\n                {/*                appServices.map((service, serviceIndex) => (*/}\n                {/*                    <Grid key={serviceIndex} item xs={12} md={4} container spacing={1} direction=\"row\" wrap=\"nowrap\">*/}\n                {/*                        <Grid item>*/}\n                {/*                            {service.icon}*/}\n                {/*                        </Grid>*/}\n                {/*                        <Grid item>*/}\n                {/*                            <Typography variant=\"subtitle1\" noWrap>*/}\n                {/*                                {service.title}*/}\n                {/*                            </Typography>*/}\n                {/*                        </Grid>*/}\n                {/*                    </Grid>*/}\n                {/*                ))*/}\n                {/*            }*/}\n                {/*        </Grid>*/}\n                {/*    </Grid>*/}\n                {/*</Container>*/}\n                {/*<Divider />*/}\n                {/* End hero unit */}\n                {/*<Container maxWidth=\"md\" component=\"section\" className={classes.heroContent} id=\"pricing\">*/}\n                {/*    <Grid container spacing={10} alignItems=\"center\" justify=\"center\" direction=\"column\">*/}\n                {/*        <Grid item container spacing={2} alignItems=\"center\" justify=\"center\" direction=\"column\">*/}\n                {/*            <Grid item>*/}\n                {/*                <Typography variant=\"h4\" align=\"center\" className={classes.boldFont} gutterBottom>*/}\n                {/*                    Choose the right plan for your team*/}\n                {/*        </Typography>*/}\n                {/*            </Grid>*/}\n                {/*            <Grid item>*/}\n                {/*                <Typography align=\"center\" color=\"textSecondary\" component=\"p\">*/}\n                {/*                    Pay monthly or yearly and cancel at any time*/}\n                {/*            </Typography>*/}\n                {/*            </Grid>*/}\n                {/*        </Grid>*/}\n                {/*        <Grid container item spacing={5} alignItems=\"center\" justify=\"center\">*/}\n                {/*            {pricingTiers.map((tier) => (*/}\n                {/*                // Enterprise card is full width at sm breakpoint*/}\n                {/*                <Grid item key={tier.title} xs={12} sm={tier.title === 'Enterprise' ? 12 : 6} md={4}>*/}\n                {/*                    <Card>*/}\n                {/*                        <CardHeader*/}\n                {/*                            title={tier.title}*/}\n                {/*                            subheader={tier.subheader}*/}\n                {/*                            titleTypographyProps={{ align: 'center' }}*/}\n                {/*                            subheaderTypographyProps={{ align: 'center' }}*/}\n                {/*                            action={tier.title === 'Growing' ? <StarIcon /> : null}*/}\n                {/*                            className={classes.cardHeader}*/}\n                {/*                        />*/}\n                {/*                        <CardContent>*/}\n                {/*                            <Grid container spacing={1} alignItems=\"center\" justify=\"center\">*/}\n                {/*                                <Grid item xs={12}>*/}\n                {/*                                    <div className={classes.cardPricing}>*/}\n                {/*                                        <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">*/}\n                {/*                                            {tier.price}*/}\n                {/*                                        </Typography>*/}\n                {/*                                        <Typography variant=\"h6\" color=\"textSecondary\">*/}\n                {/*                                            /mo*/}\n                {/*                                </Typography>*/}\n                {/*                                    </div>*/}\n                {/*                                </Grid>*/}\n                {/*                                <Grid item xs={12}>*/}\n                {/*                                    {tier.description.map((line) => (*/}\n                {/*                                        <Typography component=\"p\" variant=\"subtitle1\" align=\"center\" key={line}>*/}\n                {/*                                            {line}*/}\n                {/*                                        </Typography>*/}\n                {/*                                    ))}*/}\n                {/*                                </Grid>*/}\n                {/*                                <Grid item>*/}\n                {/*                                    <Button href=\"#contact\" variant={tier.buttonVariant} color=\"primary\">*/}\n                {/*                                        {tier.buttonText}*/}\n                {/*                                    </Button>*/}\n                {/*                                </Grid>*/}\n                {/*                            </Grid>*/}\n                {/*                        </CardContent>*/}\n                {/*                    </Card>*/}\n                {/*                </Grid>*/}\n                {/*            ))}*/}\n                {/*        </Grid>*/}\n                {/*    </Grid>*/}\n                {/*</Container>*/}\n                {/*<Divider />*/}\n                {/* Hero unit */}\n                {/*<Container maxWidth=\"md\" component=\"section\" className={classes.heroContent} id=\"reviews\">*/}\n                {/*    <Grid container spacing={10} direction=\"column\" style={{ backgroundColor: \"rgb(247, 249, 250)\" }}>*/}\n                {/*        <Grid item xs={12} container spacing={2} alignItems=\"center\" justify=\"center\" direction=\"column\">*/}\n                {/*            <Grid item>*/}\n                {/*                <Typography variant=\"h4\" className={classes.boldFont} align=\"center\">*/}\n                {/*                    Trusted by Africa's most innovative companies – big and small*/}\n                {/*            </Typography>*/}\n                {/*            </Grid>*/}\n                {/*            <Grid item>*/}\n                {/*                <Typography component=\"p\" variant=\"h6\" align=\"center\" color=\"textSecondary\">*/}\n                {/*                    PropertyPro empowers property owners and managers to deliver more than ever before by*/}\n                {/*                    enhancing up-to-date record keeping, data authenticity and transparency, smart analytics*/}\n                {/*                    and alerts, financial statements.*/}\n                {/*            </Typography>*/}\n                {/*            </Grid>*/}\n                {/*        </Grid>*/}\n                {/*        <Grid container item spacing={4} alignItems=\"stretch\" justify=\"center\" direction=\"row\">*/}\n                {/*            {*/}\n                {/*                appCustomers.map((customer, customerIndex) => (*/}\n                {/*                    <Grid key={customerIndex} item xs={12} md={6}>*/}\n                {/*                        <Card className={classes.fullHeightWidthContainer}>*/}\n                {/*                            <CardContent>*/}\n                {/*                                <Grid className={classes.reviewBox} container spacing={1} direction=\"column\">*/}\n                {/*                                    <Grid item container direction=\"row\" spacing={2} alignItems=\"center\">*/}\n                {/*                                        <Grid item>*/}\n                {/*                                            <Avatar variant=\"rounded\" className={classes.largeAvatar}>*/}\n                {/*                                            </Avatar>*/}\n                {/*                                        </Grid>*/}\n                {/*                                        <Grid item xs>*/}\n                {/*                                            <Typography variant=\"subtitle1\">*/}\n                {/*                                                {customer.name}*/}\n                {/*                                            </Typography>*/}\n                {/*                                            <Typography variant=\"body2\" color=\"textSecondary\">*/}\n                {/*                                                {customer.title}*/}\n                {/*                                            </Typography>*/}\n                {/*                                        </Grid>*/}\n                {/*                                    </Grid>*/}\n                {/*                                    <Grid item>*/}\n                {/*                                        <Typography variant=\"body1\" component=\"p\" >*/}\n                {/*                                            {customer.review}*/}\n                {/*                                        </Typography>*/}\n                {/*                                    </Grid>*/}\n                {/*                                </Grid>*/}\n                {/*                            </CardContent>*/}\n                {/*                        </Card>*/}\n                {/*                    </Grid>*/}\n                {/*                ))*/}\n                {/*            }*/}\n                {/*        </Grid>*/}\n                {/*    </Grid>*/}\n                {/*</Container>*/}\n                {/*<Divider />*/}\n                {/*<Container maxWidth=\"md\" component=\"section\" className={classes.heroContent} id=\"contact\">*/}\n                {/*    <Grid container spacing={2} direction=\"column\">*/}\n                {/*        <Grid item>*/}\n                {/*            <Typography component=\"h5\" variant=\"h4\" align=\"center\" className={classes.boldFont}>*/}\n                {/*                Get in touch with Us*/}\n                {/*            </Typography>*/}\n                {/*        </Grid>*/}\n                {/*        <Grid item>*/}\n                {/*            <Formik*/}\n                {/*                initialValues={messageValues}*/}\n                {/*                validationSchema={messageSchema}*/}\n                {/*                onSubmit={async (values, { resetForm, setStatus }) => {*/}\n                {/*                    const data = {*/}\n                {/*                        phone_number: values.phone_number,*/}\n                {/*                        first_name: values.first_name,*/}\n                {/*                        last_name: values.last_name,*/}\n                {/*                        subject: values.subject,*/}\n                {/*                        message: values.message,*/}\n                {/*                        email: values.email*/}\n                {/*                    }*/}\n                {/*                    return fetch('https://us-central1-propertymanager-a321f.cloudfunctions.net/sendEmailTest', {*/}\n                {/*                        method: \"POST\",*/}\n                {/*                        headers: {*/}\n                {/*                            'Content-Type': 'application/json'*/}\n                {/*                        },*/}\n                {/*                        body: JSON.stringify(data)*/}\n                {/*                    }).then(response => {*/}\n                {/*                        resetForm({});*/}\n                {/*                        setStatus({ success: \"Message sent successfully! We will get back to you soonest.\" });*/}\n                {/*                    }).catch(error => {*/}\n                {/*                        setStatus({ error: \"Message sending failed!\" });*/}\n                {/*                    })*/}\n                {/*                }}>*/}\n                {/*                {({*/}\n                {/*                    values,*/}\n                {/*                    handleSubmit,*/}\n                {/*                    touched,*/}\n                {/*                    status,*/}\n                {/*                    errors,*/}\n                {/*                    handleChange,*/}\n                {/*                    handleBlur,*/}\n                {/*                    isSubmitting,*/}\n                {/*                }) => (*/}\n                {/*                    <form*/}\n                {/*                        method=\"post\"*/}\n                {/*                        id=\"sendMessageForm\"*/}\n                {/*                        onSubmit={handleSubmit}*/}\n                {/*                    >*/}\n                {/*                        <Grid container justify=\"center\" direction=\"column\" spacing={4}>*/}\n                {/*                            <Grid item container justify=\"center\" direction=\"column\" spacing={2}>*/}\n                {/*                                {status && status.error && (*/}\n                {/*                                    <Grid item>*/}\n                {/*                                        <Alert severity=\"error\">{status.error}</Alert>*/}\n                {/*                                    </Grid>*/}\n                {/*                                )}*/}\n                {/*                                {status && status.success && (*/}\n                {/*                                    <Grid item>*/}\n                {/*                                        <Alert severity=\"success\">{status.success}</Alert>*/}\n                {/*                                    </Grid>*/}\n                {/*                                )}*/}\n                {/*                                <Grid item container justify=\"center\" direction=\"row\" spacing={2}>*/}\n                {/*                                    <Grid item xs={12} md={6}>*/}\n                {/*                                        <TextField*/}\n                {/*                                            fullWidth*/}\n                {/*                                            variant=\"outlined\"*/}\n                {/*                                            id=\"first_name\"*/}\n                {/*                                            label=\"First Name\"*/}\n                {/*                                            type=\"first_name\"*/}\n                {/*                                            value={values.first_name}*/}\n                {/*                                            onBlur={handleBlur}*/}\n                {/*                                            onChange={handleChange}*/}\n                {/*                                            helperText={touched.first_name && errors.first_name}*/}\n                {/*                                            error={errors.first_name && touched.first_name}*/}\n                {/*                                            InputLabelProps={{ shrink: true }}*/}\n                {/*                                        />*/}\n                {/*                                    </Grid>*/}\n                {/*                                    <Grid item xs={12} md={6}>*/}\n                {/*                                        <TextField*/}\n                {/*                                            fullWidth*/}\n                {/*                                            variant=\"outlined\"*/}\n                {/*                                            id=\"last_name\"*/}\n                {/*                                            label=\"Last Name\"*/}\n                {/*                                            type=\"last_name\"*/}\n                {/*                                            value={values.last_name}*/}\n                {/*                                            onBlur={handleBlur}*/}\n                {/*                                            onChange={handleChange}*/}\n                {/*                                            helperText={touched.last_name && errors.last_name}*/}\n                {/*                                            error={errors.last_name && touched.last_name}*/}\n                {/*                                            InputLabelProps={{ shrink: true }}*/}\n                {/*                                        />*/}\n                {/*                                    </Grid>*/}\n                {/*                                </Grid>*/}\n                {/*                                <Grid item container justify=\"center\" direction=\"row\" spacing={2}>*/}\n                {/*                                    <Grid item xs={12} md={6}>*/}\n                {/*                                        <TextField*/}\n                {/*                                            fullWidth*/}\n                {/*                                            variant=\"outlined\"*/}\n                {/*                                            id=\"phone_number\"*/}\n                {/*                                            label=\"Phone Number\"*/}\n                {/*                                            type=\"text\"*/}\n                {/*                                            value={values.phone_number}*/}\n                {/*                                            onBlur={handleBlur}*/}\n                {/*                                            onChange={handleChange}*/}\n                {/*                                            helperText={*/}\n                {/*                                                touched.phone_number && errors.phone_number*/}\n                {/*                                            }*/}\n                {/*                                            error={errors.phone_number && touched.phone_number}*/}\n                {/*                                            InputLabelProps={{ shrink: true }}*/}\n                {/*                                        />*/}\n                {/*                                    </Grid>*/}\n                {/*                                    <Grid item xs={12} md={6}>*/}\n                {/*                                        <TextField*/}\n                {/*                                            fullWidth*/}\n                {/*                                            variant=\"outlined\"*/}\n                {/*                                            id=\"email\"*/}\n                {/*                                            label=\"Email\"*/}\n                {/*                                            value={values.email}*/}\n                {/*                                            onBlur={handleBlur}*/}\n                {/*                                            onChange={handleChange}*/}\n                {/*                                            helperText={touched.email && errors.email}*/}\n                {/*                                            error={errors.email && touched.email}*/}\n                {/*                                            type=\"email\"*/}\n                {/*                                            InputLabelProps={{ shrink: true }}*/}\n                {/*                                        />*/}\n                {/*                                    </Grid>*/}\n                {/*                                </Grid>*/}\n                {/*                                <Grid item xs={12}>*/}\n                {/*                                    <TextField*/}\n                {/*                                        fullWidth*/}\n                {/*                                        variant=\"outlined\"*/}\n                {/*                                        id=\"subject\"*/}\n                {/*                                        label=\"Subject\"*/}\n                {/*                                        type=\"text\"*/}\n                {/*                                        value={values.subject}*/}\n                {/*                                        onBlur={handleBlur}*/}\n                {/*                                        onChange={handleChange}*/}\n                {/*                                        helperText={*/}\n                {/*                                            touched.subject && errors.subject*/}\n                {/*                                        }*/}\n                {/*                                        error={errors.subject && touched.subject}*/}\n                {/*                                        InputLabelProps={{ shrink: true }}*/}\n                {/*                                    />*/}\n                {/*                                </Grid>*/}\n\n                {/*                                <Grid item xs={12}>*/}\n                {/*                                    <TextField*/}\n                {/*                                        fullWidth*/}\n                {/*                                        variant=\"outlined\"*/}\n                {/*                                        id=\"message\"*/}\n                {/*                                        label=\"Message\"*/}\n                {/*                                        type=\"text\"*/}\n                {/*                                        value={values.message}*/}\n                {/*                                        onBlur={handleBlur}*/}\n                {/*                                        onChange={handleChange}*/}\n                {/*                                        helperText={*/}\n                {/*                                            touched.message && errors.message*/}\n                {/*                                        }*/}\n                {/*                                        error={errors.message && touched.message}*/}\n                {/*                                        InputLabelProps={{ shrink: true }}*/}\n                {/*                                    />*/}\n                {/*                                </Grid>*/}\n                {/*                            </Grid>*/}\n                {/*                            <Grid item container>*/}\n                {/*                                <Grid item>*/}\n                {/*                                    <Button*/}\n                {/*                                        disabled={isSubmitting}*/}\n                {/*                                        type=\"submit\"*/}\n                {/*                                        variant=\"contained\"*/}\n                {/*                                        color=\"primary\"*/}\n                {/*                                        form=\"sendMessageForm\"*/}\n                {/*                                    >*/}\n                {/*                                        Send Message*/}\n                {/*                                        </Button>*/}\n                {/*                                </Grid>*/}\n                {/*                            </Grid>*/}\n                {/*                        </Grid>*/}\n                {/*                    </form>*/}\n                {/*                )}*/}\n                {/*            </Formik>*/}\n                {/*        </Grid>*/}\n                {/*    </Grid>*/}\n                {/*</Container>*/}\n                {/* Footer */}\n                <Container maxWidth=\"lg\" component=\"footer\" className={classes.footer}>\n                    <Grid container spacing={4} justify=\"space-evenly\">\n                        {footers.map((footer) => (\n                            <Grid item xs={6} sm={3} key={footer.title}>\n                                <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                                    {footer.title}\n                                </Typography>\n                                <ul>\n                                    {footer.description.map((item) => (\n                                        <li key={item}>\n                                            <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\n                                                {item}\n                                            </Link>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </Grid>\n                        ))}\n                    </Grid>\n                    <Box mt={5}>\n                        <Copyright />\n                    </Box>\n                </Container>\n                {/* End footer */}\n            </main>\n        </ThemeProvider >\n    );\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MainRoutePage from \"./Routes/MainRoute\";\nimport SignUpPage from \"./Routes/SignUp\";\nimport SignInPage from \"./Routes/SignIn\";\nimport AccountActions from \"./Routes/AccountActions\";\nimport HomePage from \"./Routes/HomePage\";\n\n\nconst App = ({ store }) => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path={\"/account-actions\"} component={AccountActions} />\n          <Route exact path=\"/sign-up\" component={SignUpPage} />\n          <Route exact path=\"/login\" component={SignInPage} />\n          <Route path=\"/app/\" component={MainRoutePage} />\n          <Route path=\"/\" component={HomePage} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function properties(state = [], action) {\n    switch (action.type) {\n        case actionTypes.PROPERTIES_FETCH_DATA_SUCCESS:\n            return action.properties;\n\n        case actionTypes.EDIT_PROPERTY:\n            return state.map((property) =>\n                property.id === action.property.id\n                    ? Object.assign({}, property, action.property)\n                    : property\n            );\n\n        case actionTypes.ADD_PROPERTY:\n            return [...state, action.property];\n\n        case actionTypes.DELETE_PROPERTY:\n            return state.filter(\n                (property) => property.id !== action.propertyId\n            );\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function propertyUnitCharges(state = [], action) {\n    switch (action.type) {\n        case actionTypes.PROPERTY_UNIT_CHARGES_FETCH_DATA_SUCCESS:\n            return action.propertyUnitCharges;\n\n        case actionTypes.EDIT_PROPERTY_UNIT_CHARGE:\n            return state.map((propertyUnitCharge) =>\n                propertyUnitCharge.id === action.propertyUnitCharge.id\n                    ? Object.assign({}, propertyUnitCharge, action.propertyUnitCharge)\n                    : propertyUnitCharge\n            );\n\n        case actionTypes.ADD_PROPERTY_UNIT_CHARGE:\n            return [...state, action.propertyUnitCharge];\n\n        case actionTypes.DELETE_PROPERTY_UNIT_CHARGE:\n            return state.filter((propertyUnitCharge) => propertyUnitCharge.id !== action.propertyUnitChargeId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function propertyUnits(state = [], action) {\n    switch (action.type) {\n        case actionTypes.PROPERTY_UNITS_FETCH_DATA_SUCCESS:\n            return action.propertyUnits;\n\n        case actionTypes.EDIT_PROPERTY_UNIT:\n            return state.map((propertyUnit) =>\n                propertyUnit.id === action.propertyUnit.id\n                    ? Object.assign({}, propertyUnit, action.propertyUnit)\n                    : propertyUnit\n            );\n\n        case actionTypes.ADD_PROPERTY_UNIT:\n            return [...state, action.propertyUnit];\n\n        case actionTypes.DELETE_PROPERTY_UNIT:\n            return state.filter((propertyUnit) => propertyUnit.id !== action.propertyUnitId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function managementFees(state = [], action) {\n    switch (action.type) {\n        case actionTypes.MANAGEMENT_FEES_FETCH_DATA_SUCCESS:\n            return action.managementFees;\n\n        case actionTypes.EDIT_MANAGEMENT_FEE:\n            return state.map((managementFees) =>\n                managementFees.id === action.managementFees.id\n                    ? Object.assign({}, managementFees, action.managementFees)\n                    : managementFees\n            );\n\n        case actionTypes.ADD_MANAGEMENT_FEE:\n            return [...state, action.managementFees];\n\n        case actionTypes.DELETE_MANAGEMENT_FEE:\n            return state.filter(\n                (managementFees) => managementFees.id !== action.managementFeesId\n            );\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function contacts(state = [], action) {\n    switch (action.type) {\n        case actionTypes.CONTACTS_FETCH_DATA_SUCCESS:\n            return action.contacts;\n\n        case actionTypes.EDIT_CONTACT:\n            return state.map((contact) =>\n                contact.id === action.contact.id\n                    ? Object.assign({}, contact, action.contact)\n                    : contact\n            );\n\n        case actionTypes.ADD_CONTACT:\n            return [...state, action.contact];\n\n        case actionTypes.DELETE_CONTACT:\n            return state.filter((contact) => contact.id !== action.contactId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function transactions(state = [], action) {\n    switch (action.type) {\n        case actionTypes.TRANSACTIONS_FETCH_DATA_SUCCESS:\n            return action.transactions;\n\n        case actionTypes.EDIT_TRANSACTION:\n            return state.map((transaction) =>\n                transaction.id === action.transaction.id\n                    ? Object.assign({}, transaction, action.transaction)\n                    : transaction\n            );\n\n        case actionTypes.ADD_TRANSACTION:\n            return [...state, action.transaction];\n\n        case actionTypes.DELETE_TRANSACTION:\n            return state.filter(\n                (transaction) => transaction.id !== action.transactionId\n            );\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function auditLogs(state = [], action) {\n    switch (action.type) {\n        case actionTypes.AUDIT_LOGS_FETCH_DATA_SUCCESS:\n            return action.auditLogs;\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function propertySettings(state = [], action) {\n    switch (action.type) {\n        case actionTypes.PROPERTY_SETTINGS_FETCH_DATA_SUCCESS:\n            return action.propertySettings;\n\n        case actionTypes.EDIT_PROPERTY_SETTING:\n            return state.map((propertySetting) =>\n                propertySetting.id === action.propertySetting.id ? Object.assign({}, propertySetting, action.propertySetting) : propertySetting\n            );\n\n        case actionTypes.ADD_PROPERTY_SETTING:\n            return [...state, action.propertySetting];\n\n        case actionTypes.DELETE_PROPERTY_SETTING:\n            return state.filter((propertySetting) => propertySetting.id !== action.propertySettingId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function maintenanceRequests(state = [], action) {\n    switch (action.type) {\n        case actionTypes.MAINTENANCE_REQUESTS_FETCH_DATA_SUCCESS:\n            return action.maintenanceRequests;\n\n        case actionTypes.EDIT_MAINTENANCE_REQUEST:\n            return state.map((maintenanceRequest) =>\n                maintenanceRequest.id === action.maintenanceRequest.id\n                    ? Object.assign({}, maintenanceRequest, action.maintenanceRequest)\n                    : maintenanceRequest\n            );\n\n        case actionTypes.ADD_MAINTENANCE_REQUEST:\n            return [...state, action.maintenanceRequest];\n\n        case actionTypes.DELETE_MAINTENANCE_REQUEST:\n            return state.filter(\n                (maintenanceRequest) =>\n                    maintenanceRequest.id !== action.maintenanceRequestId\n            );\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function users(state = [], action) {\n    switch (action.type) {\n        case actionTypes.USERS_FETCH_DATA_SUCCESS:\n            return action.users;\n\n        case actionTypes.EDIT_USER:\n            return state.map((user) =>\n                user.id === action.user.id\n                    ? Object.assign({}, user, action.user)\n                    : user\n            );\n\n        case actionTypes.ADD_USER:\n            return [...state, action.user];\n\n        case actionTypes.DELETE_USER:\n            return state.filter((user) => user.id !== action.userId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function communicationEmails(state = [], action) {\n    switch (action.type) {\n        case actionTypes.COMMUNICATION_EMAILS_FETCH_DATA_SUCCESS:\n            return action.communicationEmails;\n\n        case actionTypes.EDIT_COMMUNICATION_EMAIL:\n            return state.map((communicationEmail) =>\n                communicationEmail.id === action.communicationEmail.id\n                    ? Object.assign({}, action.communicationEmail)\n                    : communicationEmail\n            );\n\n        case actionTypes.ADD_COMMUNICATION_EMAIL:\n            return [...state, action.communicationEmail];\n\n        case actionTypes.DELETE_COMMUNICATION_EMAIL:\n            return state.filter((communicationEmail) => communicationEmail.id !== action.communicationEmailId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function transactionsCharges(state = [], action) {\n    switch (action.type) {\n        case actionTypes.TRANSACTION_CHARGES_FETCH_DATA_SUCCESS:\n            return action.transactionCharges;\n\n        case actionTypes.EDIT_TRANSACTION_CHARGE:\n            return state.map((transactionCharge) =>\n                transactionCharge.id === action.transactionCharge.id\n                    ? Object.assign({}, transactionCharge, action.transactionCharge)\n                    : transactionCharge\n            );\n\n        case actionTypes.ADD_TRANSACTION_CHARGE:\n            return [...state, action.transactionCharge];\n\n        case actionTypes.DELETE_TRANSACTION_CHARGE:\n            return state.filter(\n                (transactionCharge) => transactionCharge.id !== action.transactionChargeId\n            );\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function leases(state = [], action) {\n    switch (action.type) {\n        case actionTypes.LEASES_FETCH_DATA_SUCCESS:\n            return action.leases;\n\n        case actionTypes.EDIT_LEASE:\n            return state.map((lease) =>\n                lease.id === action.lease.id ? Object.assign({}, lease, action.lease) : lease\n            );\n\n        case actionTypes.ADD_LEASE:\n            return [...state, action.lease];\n\n        case actionTypes.DELETE_LEASE:\n            return state.filter((lease) => lease.id !== action.leaseId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function notices(state = [], action) {\n    switch (action.type) {\n        case actionTypes.NOTICES_FETCH_DATA_SUCCESS:\n            return action.notices;\n\n        case actionTypes.EDIT_NOTICE:\n            return state.map((notice) =>\n                notice.id === action.notice.id\n                    ? Object.assign({}, notice, action.notice)\n                    : notice\n            );\n\n        case actionTypes.ADD_NOTICE:\n            return [...state, action.notice];\n\n        case actionTypes.DELETE_NOTICE:\n            return state.filter((notice) => notice.id !== action.noticeId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function companyProfiles(state = [], action) {\n    switch (action.type) {\n        case actionTypes.COMPANY_PROFILES_FETCH_DATA_SUCCESS:\n            return action.companyProfiles;\n\n        case actionTypes.EDIT_COMPANY_PROFILE:\n            return state.map((companyProfile) =>\n                companyProfile.id === action.companyProfile.id\n                    ? Object.assign({}, companyProfile, action.companyProfile)\n                    : companyProfile\n            );\n\n        case actionTypes.ADD_COMPANY_PROFILE:\n            return [...state, action.companyProfile];\n\n        case actionTypes.DELETE_COMPANY_PROFILE:\n            return state.filter((companyProfile) => companyProfile.id !== action.companyProfileId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function accountBillings(state = [], action) {\n    switch (action.type) {\n        case actionTypes.ACCOUNT_BILLINGS_FETCH_DATA_SUCCESS:\n            return action.accountBillings;\n\n        case actionTypes.EDIT_ACCOUNT_BILLING:\n            return state.map((accountBilling) =>\n                accountBilling.id === action.accountBilling.id\n                    ? Object.assign({}, accountBilling, action.accountBilling)\n                    : accountBilling\n            );\n\n        case actionTypes.ADD_ACCOUNT_BILLING:\n            return [...state, action.accountBilling];\n\n        case actionTypes.DELETE_ACCOUNT_BILLING:\n            return state.filter((accountBilling) => accountBilling.id !== action.accountBillingId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function expenses(state = [], action) {\n    switch (action.type) {\n        case actionTypes.EXPENSES_FETCH_DATA_SUCCESS:\n            return action.expenses;\n\n        case actionTypes.EDIT_EXPENSE:\n            return state.map((expense) =>\n                expense.id === action.expense.id\n                    ? Object.assign({}, expense, action.expense)\n                    : expense\n            );\n\n        case actionTypes.ADD_EXPENSE:\n            return [...state, action.expense];\n\n        case actionTypes.DELETE_EXPENSE:\n            return state.filter((expense) => expense.id !== action.expenseId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function toDos(state = [], action) {\n    switch (action.type) {\n        case actionTypes.TO_DOS_FETCH_DATA_SUCCESS:\n            return action.toDos;\n\n        case actionTypes.EDIT_TO_DO:\n            return state.map((toDo) =>\n                toDo.id === action.toDo.id\n                    ? Object.assign({}, toDo, action.toDo)\n                    : toDo\n            );\n\n        case actionTypes.ADD_TO_DO:\n            return [...state, action.toDo];\n\n        case actionTypes.DELETE_TO_DO:\n            return state.filter((toDo) => toDo.id !== action.toDoId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function meterReadings(state = [], action) {\n    switch (action.type) {\n        case actionTypes.METER_READINGS_FETCH_DATA_SUCCESS:\n            return action.meterReadings;\n\n        case actionTypes.EDIT_METER_READING:\n            return state.map((meterReading) =>\n                meterReading.id === action.meterReading.id\n                    ? Object.assign({}, meterReading, action.meterReading)\n                    : meterReading\n            );\n\n        case actionTypes.ADD_METER_READING:\n            return [...state, action.meterReading];\n\n        case actionTypes.DELETE_METER_READING:\n            return state.filter((meterReading) => meterReading.id !== action.meterReadingId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\n\nexport function emailTemplates(state = [], action) {\n    switch (action.type) {\n        case actionTypes.EMAIL_TEMPLATES_FETCH_DATA_SUCCESS:\n            return action.emailTemplates;\n\n        case actionTypes.EDIT_EMAIL_TEMPLATE:\n            return state.map((emailTemplate) =>\n                emailTemplate.id === action.emailTemplate.id\n                    ? Object.assign({}, emailTemplate, action.emailTemplate)\n                    : emailTemplate\n            );\n\n        case actionTypes.ADD_EMAIL_TEMPLATE:\n            return [...state, action.emailTemplate];\n\n        case actionTypes.DELETE_EMAIL_TEMPLATE:\n            return state.filter((emailTemplate) => emailTemplate.id !== action.emailTemplateId);\n\n        default:\n            return state;\n    }\n}\n","import * as actionTypes from \"../assets/actionTypes\";\nimport * as propertyReducers from \"./propertyReducers\";\nimport * as propertyUnitChargesReducers from \"./propertyUnitCharges\";\nimport * as propertyUnitsReducers from \"./propertyUnits\";\nimport * as managementFeesReducers from \"./managementFees\";\nimport * as contactsReducers from \"./contacts\";\nimport * as transactionsReducers from \"./transactions\";\nimport * as logsReducers from \"./logs\";\nimport * as propertySettingsReducers from \"./propertySettings\";\nimport * as maintenanceRequestsReducers from \"./maintenanceRequests\";\nimport * as usersReducers from \"./users\";\nimport * as communicationEmailsReducers from \"./CommunicationEmails\";\nimport * as transactionChargesReducers from \"./transactionsCharges\";\nimport * as leaseReducers from \"./leases\";\nimport * as noticesReducers from \"./notices\";\nimport * as companyProfileReducers from \"./companyProfile\";\nimport * as accountBillingsReducers from \"./accountBilling\";\nimport * as expensesReducers from \"./expenses\";\nimport * as toDosReducers from \"./toDos\";\nimport * as meterReadingsReducers from \"./meterReadings\";\nimport * as emailTemplatesReducers from \"./emailTemplates\";\n\nexport function itemsHasErrored(state = null, action) {\n    switch (action.type) {\n        case actionTypes.ITEMS_HAS_ERRORED:\n            return action.error;\n        default:\n            return state;\n    }\n}\n\nexport function setPaginationPage(state = { parent: 0, nestedLink: -1, drawerOpen: false }, action) {\n    switch (action.type) {\n        case actionTypes.SET_PAGINATION_PAGE:\n            return action.index;\n        default:\n            return state;\n    }\n}\n\nexport function toggleDrawer(state = false, action) {\n    switch (action.type) {\n        case actionTypes.TOGGLE_DRAWER:\n            return action.toggleValue;\n        default:\n            return state;\n    }\n}\n\nexport function setCurrentUser(state = null, action) {\n    switch (action.type) {\n        case actionTypes.SET_CURRENT_USER:\n            return action.user;\n        default:\n            return state;\n    }\n}\n\nexport function itemsIsLoading(state = false, action) {\n    switch (action.type) {\n        case actionTypes.ITEMS_IS_LOADING:\n            return action.isLoading;\n        default:\n            return state;\n    }\n}\n\nfunction reducers(state = {}, action) {\n    return {\n        communicationEmails: communicationEmailsReducers.communicationEmails(state.communication_emails, action),\n        properties: propertyReducers.properties(state.properties, action),\n        propertyUnitCharges: propertyUnitChargesReducers.propertyUnitCharges(state.propertyUnitCharges, action),\n        propertyUnits: propertyUnitsReducers.propertyUnits(state.propertyUnits, action),\n        companyProfile: companyProfileReducers.companyProfiles(state.companyProfile, action),\n        managementFees: managementFeesReducers.managementFees(state.managementFees, action),\n        users: usersReducers.users(state.users, action),\n        propertySettings: propertySettingsReducers.propertySettings(state.propertySettings, action),\n        expenses: expensesReducers.expenses(state.expenses, action),\n        contacts: contactsReducers.contacts(state.contacts, action),\n        leases: leaseReducers.leases(state.leases, action),\n        transactionsCharges: transactionChargesReducers.transactionsCharges(\n            state.transactionsCharges,\n            action\n        ),\n        transactions: transactionsReducers.transactions(\n            state.transactions,\n            action\n        ),\n        maintenanceRequests: maintenanceRequestsReducers.maintenanceRequests(\n            state.maintenanceRequests,\n            action\n        ),\n        emailTemplates: emailTemplatesReducers.emailTemplates(state.emailTemplates, action),\n        meterReadings: meterReadingsReducers.meterReadings(state.meterReadings, action),\n        toDos: toDosReducers.toDos(state.toDos, action),\n        notices: noticesReducers.notices(state.notices, action),\n        accountBillings: accountBillingsReducers.accountBillings(state.accountBillings, action),\n        currentUser: setCurrentUser(state.currentUser, action),\n        auditLogs: logsReducers.auditLogs(state.auditLogs, action),\n        isLoading: itemsIsLoading(state.isLoading, action),\n        error: itemsHasErrored(state.itemsHasErrored, action),\n        selectedTab: setPaginationPage(state.selectedTab, action),\n        drawerOpen: toggleDrawer(state.drawerOpen, action),\n    };\n}\n\nexport default reducers;\n","import React from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nfunction AppTheme(props) {\n  const theme = createMuiTheme({\n    palette: {\n      // primary: {\n      //   main: \"#34314c\",\n      // },\n      success: {\n        main: \"#4caf50\",\n      },\n      info: {\n        main: \"#2196f3\",\n      },\n      warning: {\n        main: \"#ff9800\",\n      },\n    },\n  });\n  return <ThemeProvider theme={theme}>{props.children}</ThemeProvider>;\n}\n\nexport default AppTheme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from './reducers/reducers'\nimport { setTenantId } from './actions/firebaseHelpers'\nimport { setCompanyProfile } from './assets/PrintingHelper'\nimport AppTheme from \"./components/AppTheme\";\n\nconst saveTenantId = store => next => action => {\n\tif (action.type === 'SET_CURRENT_USER') {\n\t\tsetTenantId(action.user ? action.user.tenant_id : '')\n\t\t// setTenantId('wPEY7XfSReuoOEOa22aX')\n\t} else if (action.type === \"COMPANY_PROFILES_FETCH_DATA_SUCCESS\") {\n\t\tsetCompanyProfile(action.companyProfiles[0] || {})\n\t}\n\treturn next(action)\n}\n\nconst store = createStore(reducers, applyMiddleware(thunk, saveTenantId))\nReactDOM.render(\n\t<AppTheme>\n\t\t<App store={store} /> </AppTheme>, document.getElementById('root'));\n\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from '@material-ui/core/colors';\n\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles((theme) => ({\n\tform: {\n\t\tmarginTop: theme.spacing(1),\n\t\tmarginBottom: theme.spacing(1),\n\t\tmarginLeft: theme.spacing(1),\n\t\tmarginRight: theme.spacing(1),\n\t\tpaddingRight: theme.spacing(1),\n\t\tpaddingLeft: theme.spacing(1),\n\t\tpaddingBottom: theme.spacing(1),\n\t\tpaddingTop: theme.spacing(1),\n\t\t\"& .MuiTextField-root\": {\n\t\t\tmarginTop: theme.spacing(1),\n\t\t\tmarginBottom: theme.spacing(1),\n\t\t},\n\t},\n\tavatar: {\n\t\tminHeight: theme.spacing(10),\n\t\tminWidth: theme.spacing(10),\n\t\tbackgroundColor: red[500],\n\t},\n\tbuttonBox: {\n\t\tpaddingTop: `${theme.spacing(1)}px`,\n\t\t\"& .MuiButton-root\": {\n\t\t\tmargin: theme.spacing(1),\n\t\t\tmarginLeft: 0\n\t\t},\n\t},\n\tfileInputDisplayNone: {\n\t\tdisplay: 'none',\n\t},\n\tlargeAvatar: {\n\t\tminWidth: theme.spacing(20),\n\t\tminHeight: theme.spacing(20),\n\t},\n\tquillEditor: {\n\t\theight: theme.spacing(50),\n\t\toverflow: 'auto'\n\t},\n\ticon: {\n\t\tcolor: \"rgba(255, 255, 255, 0.54)\",\n\t},\n\tinfoDisplayPaper: {\n\t\tpaddingBottom: theme.spacing(2),\n\t\tpaddingTop: theme.spacing(2),\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(2),\n\t},\n\tfullHeightWidthContainer: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\toneMarginRight: {\n\t\tmarginRight: theme.spacing(1),\n\t},\n\toneMarginTopBottom: {\n\t\tmarginTop: theme.spacing(1),\n\t\tmarginBottom: theme.spacing(1),\n\t},\n\troot: {\n        display: \"flex\",\n    },\n    title: {\n        flexGrow: 1,\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n    appBar: {\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: \"none\",\n\t},\n\trootPaper: {\n\t\tpadding: theme.spacing(2),\n\t\tmarginTop: theme.spacing(3),\n\t\tpaddingTop: theme.spacing(4),\n\t\tpaddingLeft: theme.spacing(4),\n\t\tpaddingRight: theme.spacing(4),\n\t},\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: \"flex-end\",\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    '@global': {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n    boldFont: {\n        fontWeight: \"600\"\n    },\n    textWhite: {\n        color: '#ffffff',\n    },\n    homePageMenuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    // necessary for content to be below app bar\n    homePageToolBar: {\n        flexWrap: 'wrap',\n        ...theme.mixins.toolbar\n    },\n   \n    homePageContent: {\n        flexGrow: 1,\n    },\n    homePageToolbarTitle: {\n        [theme.breakpoints.up('md')]: {\n            margin: 'auto'\n        },\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n    reviewBox: {\n        padding: theme.spacing(4),\n    },\n    heroContent: {\n        padding: theme.spacing(6, 2, 6, 2),\n        [theme.breakpoints.up('md')]: {\n            paddingTop: theme.spacing(12),\n            paddingBottom: theme.spacing(12)\n        },\n    },\n    cardHeader: {\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n    },\n    cardPricing: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n    },\n    footer: {\n        borderTop: `1px solid ${theme.palette.divider}`,\n        marginTop: theme.spacing(8),\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        [theme.breakpoints.up('sm')]: {\n            paddingTop: theme.spacing(6),\n            paddingBottom: theme.spacing(6),\n        },\n    },\n}));\n\nexport { useStyles as commonStyles };\n","import { firebaseFirestore } from \"../firebase\";\n\n// The default cache size threshold is 40 MB. Configure \"cacheSizeBytes\"\n// for a different threshold (minimum 1 MB) or set to \"CACHE_SIZE_UNLIMITED\"\n// to disable clean-up.\nfirebaseFirestore.settings({\n    cacheSizeBytes: 50048576\n  });\nfirebaseFirestore.enablePersistence()\n    .catch(function (err) {\n        if (err.code == 'failed-precondition') {\n            // Multiple tabs open, persistence can only be enabled\n            // in one tab at a a time.\n            // ...\n        } else if (err.code == 'unimplemented') {\n            // The current browser does not support all of the\n            // features required to enable persistence\n            // ...\n        }\n    });\n\nconst db = firebaseFirestore.collection(\"tenant\");\n\nlet currentTenantId = '';\n\nexport function setTenantId(tenantId) {\n    currentTenantId = tenantId\n}\n\nexport function getDatabaseRef() {\n    return db.doc(currentTenantId)\n}"],"sourceRoot":""}