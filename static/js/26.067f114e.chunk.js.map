{"version":3,"sources":["../node_modules/date-fns/esm/addMonths/index.js","assets/commonAssets.js","components/CustomCircularProgress.js","../node_modules/@material-ui/icons/Save.js","../node_modules/@material-ui/icons/Cancel.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/subMonths/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/addYears/index.js","../node_modules/date-fns/esm/subYears/index.js","components/meterReadings/MeterReadingInputForm.js","Routes/MeterReadingPage.js"],"names":["addMonths","dirtyDate","dirtyAmount","requiredArgs","arguments","date","toDate","amount","toInteger","isNaN","Date","NaN","dayOfMonth","getDate","endOfDesiredMonth","getTime","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","monthsInYear","eachMonthOfInterval","start","startOfYear","startOfToday","end","endOfYear","TITLES_LIST","GENDERS_LIST","EXPENSES_CATEGORIES","UNIT_TYPES","LEASE_OPTIONS","METER_TYPES","PAYMENT_FREQUENCY_OPTIONS","getContactTitles","getGendersList","getExpensesCategories","getUnitTypes","getPropertyBaths","baths","i","push","concat","getPropertyBeds","beds","getMeterTypes","getLeaseOptions","getPaymentOptions","getTransactionsFilterOptions","id","text","getLastMonthFromToDates","startOfMonth","subMonths","endOfMonth","getLastYearFromToDates","subYears","getYearToDateFromToDates","getCurrentMonthFromToDates","getLastThreeMonthsFromToDates","getMonthsInYear","currencyFormatter","Intl","NumberFormat","undefined","style","currency","useStyles","makeStyles","theme","root","display","alignItems","height","width","wrapper","margin","spacing","position","buttonProgress","color","green","top","left","marginTop","marginLeft","CustomCircularProgress","open","dialogTitle","classes","maxWidth","aria-labelledby","container","direction","item","lg","className","size","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","setDate","setHours","month","addYears","defaultDate","format","MeterReadingSchema","Yup","shape","meter_type","trim","required","prior_value","positive","current_value","min","unit_charge","base_charge","reading_date","property_id","unit_id","METER_OPTIONS","MeterReadingInputForm","properties","unitsWithActiveLeases","history","meterReadingToEdit","handleItemSubmit","commonStyles","meterReadingValues","tenant_id","initialValues","enableReinitialize","validationSchema","onSubmit","values","a","resetForm","setStatus","meterReading","find","unit","usage","parseFloat","newMeterReadingCharge","charge_amount","charge_date","charge_label","charge_type","due_date","goBack","sent","msg","status","handleSubmit","setFieldValue","errors","touched","handleChange","handleBlur","isSubmitting","form","method","Grid","justify","CustomSnackbar","variant","message","xs","md","TextField","fullWidth","select","name","label","onChange","event","target","error","helperText","map","property","index","MenuItem","key","ref","filter","propertyUnit","type","InputLabelProps","shrink","onBlur","meterTypeIndex","disabled","buttonBox","Button","startIcon","onClick","disableElevation","MeterReadingPage","props","contacts","pageTitle","PageHeading","connect","state","ownProps","leases","terminated","activeLease","propertyUnits","Array","isArray","tenants","meterReadings","match","params","meterReadingId","dispatch","url","handleItemFormSubmit","withRouter"],"mappings":"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","file":"static/js/26.067f114e.chunk.js","sourcesContent":["import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import { endOfMonth, endOfYear, startOfToday, eachMonthOfInterval, startOfMonth, startOfYear, subMonths, subYears } from \"date-fns\";\n\nconst monthsInYear = eachMonthOfInterval({\n\tstart: startOfYear(startOfToday()),\n\tend: endOfYear(startOfToday()),\n})\n//general contact titles\nconst TITLES_LIST = [\"Mr\", \"Prof\", \"Hon\", \"Sir\", \"Mrs\", \"Miss\", \"Dr\", \"Madam\", \"Other\"]\nconst GENDERS_LIST = [\"Male\", \"Female\", \"Unspecified\"];\nconst EXPENSES_CATEGORIES = [\n\t'Security Deposit Refund',\n\t'Water Deposit Refund',\n\t'Management Fees',\n\t'Utilities',\n\t'Taxes',\n\t'Mortgage',\n\t'Office',\n\t'Maintenance & Cleaning',\n\t'Advertising',\n\t'Insurance',\n\t'Legal & Other Professional Fees',\n\t'Auto & Travel',\n\t'Supplies',\n\t'Other Refund',\n\t'Repairs',\n\t'Other'\n]\nconst PROPRERTY_TYPES = [\n\t\"Residential\",\n\t\"Condo/Townhouse\",\n\t\"Multi-family\",\n\t\"Single-family\",\n]\nconst UNIT_TYPES = [\n\t\"Bed Sitter\",\n\t\"One Bedroom\",\n\t\"Two Bedroom\",\n\t\"Single Room\",\n\t\"Double Room\",\n\t\"Shop\",\n\t\"Other\",\n];\nconst LEASE_OPTIONS = [\n\t\"Fixed\",\n\t\"Fixed w/rollover\",\n];\nconst METER_TYPES = [\"Electric\", \"Sewer\", \"Water\"];\nconst FREQUENCY_OPTIONS = [\"Per Day\", \"Week\", \"Month\", \"Quarter\", \"Half Year\", \"Year\"];\nconst PAYMENT_FREQUENCY_OPTIONS = [\"Daily\", \"Weekly\", \"Monthly\", \"Quarterly\", \"Half-Yearly\", \"Yearly\"];\n\n//functions to get the above values\nexport function getContactTitles() {\n\treturn TITLES_LIST;\n}\n\nexport function getGendersList() {\n\treturn GENDERS_LIST;\n}\n\nexport function getExpensesCategories() {\n\treturn EXPENSES_CATEGORIES;\n}\n\n//general property types\nexport function getPropertyTypes() {\n\treturn PROPRERTY_TYPES;\n}\n\n//general unit types\nexport function getUnitTypes() {\n\treturn UNIT_TYPES;\n}\n\nexport function getPropertyBaths() {\n\tconst baths = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbaths.push(i);\n\t}\n\treturn baths.concat(\"5+\");\n}\n\nexport function getPropertyBeds() {\n\tconst beds = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbeds.push(i);\n\t}\n\treturn beds;\n}\n\nexport function getFrequencyOptions() {\n\treturn FREQUENCY_OPTIONS;\n}\n\nexport function getMeterTypes() {\n\treturn METER_TYPES;\n}\n\nexport function getLeaseOptions() {\n\treturn LEASE_OPTIONS;\n}\n\nexport function getPaymentOptions() {\n\treturn PAYMENT_FREQUENCY_OPTIONS;\n}\n\nexport function getTransactionsFilterOptions() {\n\treturn [\n\t\t{ id: 'month-to-date', text: 'Month To Date' }, { id: 'last-month', text: 'Last Month' },\n\t\t{ id: '3-months-to-date', text: '3 Months To Date' }, { id: 'year-to-date', text: 'Year To Date' },\n\t\t{ id: 'last-year', text: 'Last Year' },];\n}\n\nexport function getLastMonthFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 1)), endOfMonth(subMonths(startOfToday(), 1))]\n}\n\nexport function getLastYearFromToDates() {\n\treturn [startOfYear(subYears(startOfToday(), 1)), endOfYear(subYears(startOfToday(), 1))]\n}\n\nexport function getYearToDateFromToDates() {\n\treturn [startOfYear(startOfToday()), startOfToday()]\n}\n\nexport function getCurrentMonthFromToDates() {\n\treturn [startOfMonth(startOfToday()), endOfMonth(startOfToday())]\n}\n\nexport function getLastThreeMonthsFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 2)), endOfMonth(startOfToday())]\n}\n\nexport function getMonthsInYear() {\n\treturn monthsInYear\n}\n\n// Create our number formatter.\nexport const currencyFormatter = new Intl.NumberFormat(undefined, {\n\tstyle: 'decimal',\n\tcurrency: 'KES',\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 80,\n        width: 120,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n        height: 50,\n        width: 50,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CustomCircularProgress({ open, dialogTitle }) {\n    const classes = useStyles();\n    \n    return (\n        <Dialog maxWidth={\"md\"} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <Grid container alignItems=\"center\" direction=\"column\">\n                    <Grid item lg>\n                        <Typography>{dialogTitle || \"Saving...\"}</Typography>\n                    </Grid>\n                    <Grid item lg>\n                        <div className={classes.root}>\n                            <div className={classes.wrapper}>\n                                {open && <CircularProgress size={50} className={classes.buttonProgress} />}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n        </Dialog>\n\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addYears from '../addYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CustomSnackbar from '../CustomSnackbar'\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\"; import {\n  getMeterTypes,\n} from \"../../assets/commonAssets.js\";\nimport * as Yup from \"yup\";\nimport { format, startOfToday } from \"date-fns\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\n\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd')\n\n\nconst MeterReadingSchema = Yup.object().shape({\n  meter_type: Yup.string().trim().required(\"Meter Reading is required\"),\n  prior_value: Yup.number().required(\"Prior Value is required\").positive(\"Amount must be a positive number\"),\n  current_value: Yup.number().min(Yup.ref('prior_value'), 'Current Value must be greater than prior value').required(\"Current Value is required\"),\n  unit_charge: Yup.number().positive(\"Amount must be a positive number\").required(\"Unit Charge is Required\"),\n  base_charge: Yup.number().positive(\"Amount must be a positive number\").default(0),\n  reading_date: Yup.date().required(\"Reading Date Required\"),\n  property_id: Yup.string().trim().required(\"Property is Required\"),\n  unit_id: Yup.string().trim().required(\"Unit is Required\"),\n});\n\nconst METER_OPTIONS = getMeterTypes();\n\nconst MeterReadingInputForm = ({ properties, unitsWithActiveLeases, history, meterReadingToEdit, handleItemSubmit }) => {\n\n  const classes = commonStyles();\n  const meterReadingValues = {\n    id: meterReadingToEdit.id,\n    property_id: meterReadingToEdit.property_id || '',\n    unit_id: meterReadingToEdit.unit_id || '',\n    reading_date: meterReadingToEdit.reading_date || defaultDate,\n    prior_value: meterReadingToEdit.prior_value || '',\n    current_value: meterReadingToEdit.current_value || '',\n    base_charge: meterReadingToEdit.base_charge || '',\n    unit_charge: meterReadingToEdit.unit_charge || '',\n    meter_type: meterReadingToEdit.meter_type || '',\n    tenant_id: meterReadingToEdit.tenant_id || '',\n  }\n\n  return (\n    <Formik\n      initialValues={meterReadingValues}\n      enableReinitialize\n      validationSchema={MeterReadingSchema}\n      onSubmit={async (values, { resetForm, setStatus }) => {\n        try {\n          const meterReading = {\n            id: values.id,\n            meter_type: values.meter_type,\n            prior_value: values.prior_value,\n            current_value: values.current_value,\n            base_charge: values.base_charge,\n            unit_charge: values.unit_charge,\n            unit_id: values.unit_id,\n            property_id: values.property_id,\n            tenant_id: unitsWithActiveLeases.find(unit => unit.id === values.unit_id).tenant_id,\n            reading_date: values.reading_date,\n          };\n          //assign usage values to meter reading\n          meterReading.usage = values.current_value - values.prior_value\n          meterReading.amount = (meterReading.usage * parseFloat(values.unit_charge)) + parseFloat(values.base_charge)\n          await handleItemSubmit(meterReading, \"meter_readings\")\n          if (!values.id) {\n            const newMeterReadingCharge = {\n              charge_amount: meterReading.amount,\n              charge_date: defaultDate,\n              charge_label: `${values.meter_type} Charge`,\n              charge_type: \"meter_type\",\n              due_date: defaultDate,\n              tenant_id: meterReading.tenant_id,\n              unit_id: values.unit_id,\n              property_id: values.property_id,\n            }\n            await handleItemSubmit(newMeterReadingCharge, \"transactions-charges\")\n          }\n          resetForm({})\n          if (values.id) {\n            history.goBack();\n          }\n          setStatus({ sent: true, msg: \"Meter reading and charge saved.\" })\n        } catch (error) {\n          setStatus({ sent: false, msg: `Error! ${error}.` })\n        }\n      }}\n    >\n      {({\n        values,\n        status,\n        handleSubmit,\n        setFieldValue,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        isSubmitting,\n      }) => (\n        <form\n          className={classes.form}\n          method=\"post\"\n          id=\"meterInputForm\"\n          onSubmit={handleSubmit}\n        >\n          <Grid\n            container\n            spacing={2}\n            justify=\"center\"\n            alignItems=\"stretch\"\n            direction=\"column\"\n          >\n            {\n              status && status.msg && (\n                <CustomSnackbar\n                  variant={status.sent ? \"success\" : \"error\"}\n                  message={status.msg}\n                />\n              )\n            }\n            {\n              isSubmitting && (<CustomCircularProgress open={true} />)\n            }\n            <Grid item container direction=\"row\" spacing={2}>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  select\n                  variant=\"outlined\"\n                  name=\"property_id\"\n                  label=\"Property\"\n                  id=\"property_id\"\n                  onChange={(event) => {\n                    setFieldValue('property_id', event.target.value)\n                    setFieldValue('unit_id', '')\n                  }\n                  }\n                  value={values.property_id}\n                  error={errors.property_id && touched.property_id}\n                  helperText={touched.property_id && errors.property_id}\n                >\n                  {properties.map((property, index) => (\n                    <MenuItem key={index} value={property.id}>\n                      {property.ref}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  select\n                  variant=\"outlined\"\n                  name=\"unit_id\"\n                  label=\"Unit\"\n                  id=\"unit_id\"\n                  onChange={handleChange}\n                  value={values.unit_id}\n                  error={errors.unit_id && touched.unit_id}\n                  helperText={touched.unit_id && errors.unit_id}\n\n                >\n                  {unitsWithActiveLeases.filter(({ property_id }) => property_id === values.property_id).map((propertyUnit, index) => (\n                    <MenuItem key={index} value={propertyUnit.id}>\n                      {propertyUnit.ref}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                type=\"date\"\n                InputLabelProps={{ shrink: true }}\n                variant=\"outlined\"\n                id=\"reading_date\"\n                name=\"reading_date\"\n                label=\"Reading Date\"\n                value={values.reading_date}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.reading_date && touched.reading_date}\n                helperText={touched.reading_date && errors.reading_date}\n\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                select\n                variant=\"outlined\"\n                id=\"meter_type\"\n                name=\"meter_type\"\n                label=\"Meter Type\"\n                value={values.meter_type}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.meter_type && touched.meter_type}\n                helperText={touched.meter_type && errors.meter_type}\n              >\n                {METER_OPTIONS.map((meter_type, meterTypeIndex) => (\n                  <MenuItem key={meterTypeIndex} value={meter_type}>\n                    {meter_type}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"prior_value\"\n                name=\"prior_value\"\n                label=\"Prior Value\"\n                value={values.prior_value}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.prior_value && touched.prior_value}\n                helperText={touched.prior_value && errors.prior_value}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"current_value\"\n                name=\"current_value\"\n                label=\"Current Value\"\n                value={values.current_value}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.current_value && touched.current_value}\n                helperText={touched.current_value && errors.current_value}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                disabled\n                variant=\"outlined\"\n                id=\"usage\"\n                name=\"usage\"\n                label=\"Usage\"\n                value={values.current_value - values.prior_value}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"base_charge\"\n                name=\"base_charge\"\n                label=\"Base Charge\"\n                value={values.base_charge}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.base_charge && touched.base_charge}\n                helperText={touched.base_charge && errors.base_charge}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"unit_charge\"\n                name=\"unit_charge\"\n                label=\"Unit Charge\"\n                value={values.unit_charge}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.unit_charge && touched.unit_charge}\n                helperText={touched.unit_charge && errors.unit_charge}\n              />\n            </Grid>\n            <Grid item container className={classes.buttonBox}>\n              <Grid item>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  size=\"medium\"\n                  startIcon={<CancelIcon />}\n                  onClick={() => history.goBack()}\n                  disableElevation\n                >\n                  Cancel\n                  </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  size=\"medium\"\n                  startIcon={<SaveIcon />}\n                  form=\"meterInputForm\"\n                  disabled={isSubmitting}\n                >\n                  Save\n                  </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default MeterReadingInputForm;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport MeterReadingInputForm from \"../components/meterReadings/MeterReadingInputForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { handleItemFormSubmit } from '../actions/actions'\n\nlet MeterReadingPage = (props) => {\n    const { history, meterReadingToEdit, contacts, unitsWithActiveLeases, properties, handleItemSubmit } = props;\n    const pageTitle = \"Charge Tenant for Meter Reading\";\n    return (\n        <Layout pageTitle={pageTitle}>\n            <Grid container justify=\"center\" direction=\"column\">\n                <Grid item key={1}>\n                    <PageHeading text={pageTitle} />\n                </Grid>\n                <Grid item key={2}>\n                    <MeterReadingInputForm\n                        meterReadingToEdit={meterReadingToEdit}\n                        handleItemSubmit={handleItemSubmit}\n                        contacts={contacts}\n                        history={history}\n                        properties={properties}\n                        unitsWithActiveLeases={unitsWithActiveLeases}\n                    />\n                </Grid>\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    //only allow adding meter readings to units with active leases\n    const unitsWithActiveLeases = state.leases\n        .filter(({ terminated }) => terminated !== true)\n        .map(activeLease => ({\n            ...state.propertyUnits.find(unit => unit.id === activeLease.unit_id),\n            tenant_id: Array.isArray(activeLease.tenants) ? activeLease.tenants[0] : ''\n        }))\n\n    return {\n        properties: state.properties,\n        unitsWithActiveLeases: unitsWithActiveLeases,\n        meterReadingToEdit: state.meterReadings.find(({ id }) => id === ownProps.match.params.meterReadingId) || {},\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n    }\n};\n\nMeterReadingPage = connect(mapStateToProps, mapDispatchToProps)(MeterReadingPage);\n\nexport default withRouter(MeterReadingPage);\n"],"sourceRoot":""}