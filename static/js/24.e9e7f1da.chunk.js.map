{"version":3,"sources":["../node_modules/date-fns/esm/addMonths/index.js","assets/commonAssets.js","components/CustomCircularProgress.js","../node_modules/@material-ui/icons/Save.js","../node_modules/@material-ui/icons/Cancel.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/subMonths/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/addYears/index.js","../node_modules/date-fns/esm/subYears/index.js","components/expenses/ExpenseInputForm.js","Routes/ExpensePage.js"],"names":["addMonths","dirtyDate","dirtyAmount","requiredArgs","arguments","date","toDate","amount","toInteger","isNaN","Date","NaN","dayOfMonth","getDate","endOfDesiredMonth","getTime","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","monthsInYear","eachMonthOfInterval","start","startOfYear","startOfToday","end","endOfYear","TITLES_LIST","GENDERS_LIST","EXPENSES_CATEGORIES","UNIT_TYPES","LEASE_OPTIONS","METER_TYPES","PAYMENT_FREQUENCY_OPTIONS","getContactTitles","getGendersList","getExpensesCategories","getUnitTypes","getPropertyBaths","baths","i","push","concat","getPropertyBeds","beds","getMeterTypes","getLeaseOptions","getPaymentOptions","getTransactionsFilterOptions","id","text","getLastMonthFromToDates","startOfMonth","subMonths","endOfMonth","getLastYearFromToDates","subYears","getYearToDateFromToDates","getCurrentMonthFromToDates","getLastThreeMonthsFromToDates","getMonthsInYear","currencyFormatter","Intl","NumberFormat","undefined","style","currency","useStyles","makeStyles","theme","root","display","alignItems","height","width","wrapper","margin","spacing","position","buttonProgress","color","green","top","left","marginTop","marginLeft","CustomCircularProgress","open","dialogTitle","classes","maxWidth","aria-labelledby","container","direction","item","lg","className","size","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","setDate","setHours","month","addYears","EXPENSE_CATEGORIES","defaultDate","format","PropertyExpenseSchema","Yup","shape","type","required","positive","expense_date","property_id","unit_id","expense_notes","ExpenseInputForm","props","properties","propertyUnits","handleItemSubmit","history","commonStyles","expenseToEdit","expenseValues","initialValues","enableReinitialize","validationSchema","onSubmit","values","a","resetForm","setStatus","expense","goBack","sent","msg","status","handleSubmit","touched","errors","handleChange","handleBlur","setFieldValue","isSubmitting","form","method","Grid","justify","CustomSnackbar","variant","message","sm","TextField","fullWidth","select","name","label","onChange","event","target","error","helperText","map","property","index","MenuItem","key","ref","filter","InputLabelProps","shrink","onBlur","category","multiline","rows","buttonBox","Button","startIcon","onClick","disableElevation","disabled","ExpensePage","pageTitle","PageHeading","connect","state","ownProps","expenses","find","match","params","expenseId","dispatch","url","handleItemFormSubmit","withRouter"],"mappings":"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","file":"static/js/24.e9e7f1da.chunk.js","sourcesContent":["import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import { endOfMonth, endOfYear, startOfToday, eachMonthOfInterval, startOfMonth, startOfYear, subMonths, subYears } from \"date-fns\";\n\nconst monthsInYear = eachMonthOfInterval({\n\tstart: startOfYear(startOfToday()),\n\tend: endOfYear(startOfToday()),\n})\n//general contact titles\nconst TITLES_LIST = [\"Mr\", \"Prof\", \"Hon\", \"Sir\", \"Mrs\", \"Miss\", \"Dr\", \"Madam\", \"Other\"]\nconst GENDERS_LIST = [\"Male\", \"Female\", \"Unspecified\"];\nconst EXPENSES_CATEGORIES = [\n\t'Security Deposit Refund',\n\t'Water Deposit Refund',\n\t'Management Fees',\n\t'Utilities',\n\t'Taxes',\n\t'Mortgage',\n\t'Office',\n\t'Maintenance & Cleaning',\n\t'Advertising',\n\t'Insurance',\n\t'Legal & Other Professional Fees',\n\t'Auto & Travel',\n\t'Supplies',\n\t'Other Refund',\n\t'Repairs',\n\t'Other'\n]\nconst PROPRERTY_TYPES = [\n\t\"Residential\",\n\t\"Condo/Townhouse\",\n\t\"Multi-family\",\n\t\"Single-family\",\n]\nconst UNIT_TYPES = [\n\t\"Bed Sitter\",\n\t\"One Bedroom\",\n\t\"Two Bedroom\",\n\t\"Single Room\",\n\t\"Double Room\",\n\t\"Shop\",\n\t\"Other\",\n];\nconst LEASE_OPTIONS = [\n\t\"Fixed\",\n\t\"Fixed w/rollover\",\n];\nconst METER_TYPES = [\"Electric\", \"Sewer\", \"Water\"];\nconst FREQUENCY_OPTIONS = [\"Per Day\", \"Week\", \"Month\", \"Quarter\", \"Half Year\", \"Year\"];\nconst PAYMENT_FREQUENCY_OPTIONS = [\"Daily\", \"Weekly\", \"Monthly\", \"Quarterly\", \"Half-Yearly\", \"Yearly\"];\n\n//functions to get the above values\nexport function getContactTitles() {\n\treturn TITLES_LIST;\n}\n\nexport function getGendersList() {\n\treturn GENDERS_LIST;\n}\n\nexport function getExpensesCategories() {\n\treturn EXPENSES_CATEGORIES;\n}\n\n//general property types\nexport function getPropertyTypes() {\n\treturn PROPRERTY_TYPES;\n}\n\n//general unit types\nexport function getUnitTypes() {\n\treturn UNIT_TYPES;\n}\n\nexport function getPropertyBaths() {\n\tconst baths = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbaths.push(i);\n\t}\n\treturn baths.concat(\"5+\");\n}\n\nexport function getPropertyBeds() {\n\tconst beds = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbeds.push(i);\n\t}\n\treturn beds;\n}\n\nexport function getFrequencyOptions() {\n\treturn FREQUENCY_OPTIONS;\n}\n\nexport function getMeterTypes() {\n\treturn METER_TYPES;\n}\n\nexport function getLeaseOptions() {\n\treturn LEASE_OPTIONS;\n}\n\nexport function getPaymentOptions() {\n\treturn PAYMENT_FREQUENCY_OPTIONS;\n}\n\nexport function getTransactionsFilterOptions() {\n\treturn [\n\t\t{ id: 'month-to-date', text: 'Month To Date' }, { id: 'last-month', text: 'Last Month' },\n\t\t{ id: '3-months-to-date', text: '3 Months To Date' }, { id: 'year-to-date', text: 'Year To Date' },\n\t\t{ id: 'last-year', text: 'Last Year' },];\n}\n\nexport function getLastMonthFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 1)), endOfMonth(subMonths(startOfToday(), 1))]\n}\n\nexport function getLastYearFromToDates() {\n\treturn [startOfYear(subYears(startOfToday(), 1)), endOfYear(subYears(startOfToday(), 1))]\n}\n\nexport function getYearToDateFromToDates() {\n\treturn [startOfYear(startOfToday()), startOfToday()]\n}\n\nexport function getCurrentMonthFromToDates() {\n\treturn [startOfMonth(startOfToday()), endOfMonth(startOfToday())]\n}\n\nexport function getLastThreeMonthsFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 2)), endOfMonth(startOfToday())]\n}\n\nexport function getMonthsInYear() {\n\treturn monthsInYear\n}\n\n// Create our number formatter.\nexport const currencyFormatter = new Intl.NumberFormat(undefined, {\n\tstyle: 'decimal',\n\tcurrency: 'KES',\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 80,\n        width: 120,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n        height: 50,\n        width: 50,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CustomCircularProgress({ open, dialogTitle }) {\n    const classes = useStyles();\n    \n    return (\n        <Dialog maxWidth={\"md\"} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <Grid container alignItems=\"center\" direction=\"column\">\n                    <Grid item lg>\n                        <Typography>{dialogTitle || \"Saving...\"}</Typography>\n                    </Grid>\n                    <Grid item lg>\n                        <div className={classes.root}>\n                            <div className={classes.wrapper}>\n                                {open && <CircularProgress size={50} className={classes.buttonProgress} />}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n        </Dialog>\n\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addYears from '../addYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","import React from \"react\";\nimport CustomSnackbar from '../CustomSnackbar'\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport * as Yup from \"yup\";\nimport { getExpensesCategories } from \"../../assets/commonAssets\";\nimport { format, startOfToday } from \"date-fns\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\n\nconst EXPENSE_CATEGORIES = getExpensesCategories();\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd')\n\nconst PropertyExpenseSchema = Yup.object().shape({\n  type: Yup.string().required(\"Expenditure Type/Name is required\"),\n  amount: Yup.number().positive(\"Amount must be a positive number\").required(\"Expenditure Amount is required\"),\n  expense_date: Yup.date().required(\"Expenditure Date Required\"),\n  property_id: Yup.string().required(\"Property is Required\"),\n  unit_id: Yup.string().required(\"Unit is Required\"),\n  expense_notes: Yup.string().default(\"\"),\n});\n\nconst ExpenseInputForm = (props) => {\n  const { properties, propertyUnits, handleItemSubmit, history } = props\n  const classes = commonStyles();\n  const expenseToEdit = props.expenseToEdit || {}\n  const expenseValues = {\n    id: expenseToEdit.id,\n    expense_notes: expenseToEdit.expense_notes || '',\n    expense_date: expenseToEdit.expense_date || defaultDate,\n    amount: expenseToEdit.amount || '',\n    property_id: expenseToEdit.property_id || '',\n    unit_id: expenseToEdit.unit_id || '',\n    type: expenseToEdit.type || '',\n  }\n\n  return (\n    <Formik\n      initialValues={expenseValues}\n      enableReinitialize\n      validationSchema={PropertyExpenseSchema}\n      onSubmit={async (values, { resetForm, setStatus }) => {\n        try {\n          const expense = {\n            id: values.id,\n            type: values.type,\n            amount: values.amount,\n            unit_id: values.unit_id,\n            property_id: values.property_id,\n            expense_date: values.expense_date,\n            expense_notes: values.expense_notes,\n          };\n          await handleItemSubmit(expense, \"expenses\")\n          resetForm({});\n          if (values.id) {\n            history.goBack();\n          }\n          setStatus({ sent: true, msg: \"Details saved successfully!\" })\n        } catch (error) {\n          setStatus({ sent: false, msg: `Error! ${error}.` })\n        }\n      }}\n    >\n      {({\n        values,\n        status,\n        handleSubmit,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        setFieldValue,\n        isSubmitting,\n      }) => (\n        <form\n          className={classes.form}\n          method=\"post\"\n          id=\"expenseInputForm\"\n          onSubmit={handleSubmit}\n        >\n          <Grid\n            container\n            spacing={2}\n            justify=\"center\"\n            alignItems=\"stretch\"\n            direction=\"column\"\n          >\n            {\n              status && status.msg && (\n                <CustomSnackbar\n                  variant={status.sent ? \"success\" : \"error\"}\n                  message={status.msg}\n                />\n              )\n            }\n            {\n              isSubmitting && (<CustomCircularProgress open={true} />)\n            }\n            <Grid item container direction=\"row\" spacing={2}>\n              <Grid item sm={6}>\n                <TextField\n                  fullWidth\n                  select\n                  variant=\"outlined\"\n                  name=\"property_id\"\n                  label=\"Property\"\n                  id=\"property_id\"\n                  onChange={(event) => {\n                    setFieldValue('property_id', event.target.value);\n                    setFieldValue('unit_id', '');\n                  }}\n                  value={values.property_id}\n                  error={errors.property_id && touched.property_id}\n                  helperText={touched.property_id && errors.property_id}\n\n                >\n                  {properties.map((property, index) => (\n                    <MenuItem key={index} value={property.id}>\n                      {property.ref}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item sm={6}>\n                <TextField\n                  fullWidth\n                  select\n                  variant=\"outlined\"\n                  name=\"unit_id\"\n                  label=\"Unit\"\n                  id=\"unit_id\"\n                  onChange={handleChange}\n                  value={values.unit_id}\n                  error={errors.unit_id && touched.unit_id}\n                  helperText={touched.unit_id && errors.unit_id}\n                >\n                  {propertyUnits.filter(({ property_id }) => property_id === values.property_id).map((unit_id, index) => (\n                    <MenuItem key={index} value={unit_id.id}>\n                      {unit_id.ref}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                type=\"date\"\n                InputLabelProps={{ shrink: true }}\n                variant=\"outlined\"\n                id=\"expense_date\"\n                name=\"expense_date\"\n                label=\"Expenditure Date\"\n                value={values.expense_date}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.expense_date && touched.expense_date}\n                helperText={touched.expense_date && errors.expense_date}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                select\n                variant=\"outlined\"\n                id=\"type\"\n                name=\"type\"\n                label=\"Expense Type\"\n                value={values.type}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.type && touched.type}\n                helperText={touched.type && errors.type}\n              >\n                {EXPENSE_CATEGORIES.map((category, index) => (\n                  <MenuItem key={index} value={category}>\n                    {category}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                id=\"amount\"\n                name=\"amount\"\n                label=\"Expenditure Amount\"\n                value={values.amount}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={errors.amount && touched.amount}\n                helperText={touched.amount && errors.amount}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                fullWidth\n                multiline\n                rows={4}\n                variant=\"outlined\"\n                id=\"expense_notes\"\n                name=\"expense_notes\"\n                label=\"Notes\"\n                value={values.expense_notes}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                helperText={\"Any notes regarding this expense?\"}\n              />\n            </Grid>\n            <Grid item container direction=\"row\" className={classes.buttonBox}>\n              <Grid item>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  size=\"medium\"\n                  startIcon={<CancelIcon />}\n                  onClick={() => history.goBack()}\n                  disableElevation\n                >\n                  Cancel\n                  </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  size=\"medium\"\n                  startIcon={<SaveIcon />}\n                  form=\"expenseInputForm\"\n                  disabled={isSubmitting}\n                >\n                  Save\n                  </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ExpenseInputForm;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport ExpenseInputForm from \"../components/expenses/ExpenseInputForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { handleItemFormSubmit } from '../actions/actions'\n\nlet ExpensePage = ({ properties, expenseToEdit, propertyUnits, handleItemSubmit, history }) => {\n    const pageTitle = expenseToEdit.id ? \"Edit Expense\" : \"New Expense\";\n    return (\n        <Layout pageTitle=\"Expense Details\">\n            <Grid container justify=\"center\" direction=\"column\">\n                <Grid item key={1}>\n                    <PageHeading  text={pageTitle} />\n                </Grid>\n                <Grid item key={2}>\n                    <ExpenseInputForm\n                        history={history}\n                        expenseToEdit={expenseToEdit}\n                        handleItemSubmit={handleItemSubmit}\n                        properties={properties}\n                        propertyUnits={propertyUnits}\n                    />\n                </Grid>\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        properties: state.properties,\n        propertyUnits: state.propertyUnits,\n        expenseToEdit: state.expenses.find(({ id }) => id === ownProps.match.params.expenseId) || {},\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemSubmit: ( item, url) => dispatch(handleItemFormSubmit(item, url)),\n    }\n};\n\nExpensePage = connect(mapStateToProps, mapDispatchToProps)(ExpensePage);\n\nexport default withRouter(ExpensePage);\n"],"sourceRoot":""}