{"version":3,"sources":["assets/commonAssets.js","components/table/EnhancedTableHead.js","components/table/tableStyles.js","components/table/tablesSortingFunctions.js","components/table/commonTable.js","components/CustomCircularProgress.js","components/TabPanel.js","components/ImageCropper.js","components/users/AccountSettingsInputForm.js","Routes/AccountSettings.js"],"names":["monthsInYear","eachMonthOfInterval","start","startOfYear","startOfToday","end","endOfYear","TITLES_LIST","GENDERS_LIST","EXPENSES_CATEGORIES","UNIT_TYPES","LEASE_OPTIONS","METER_TYPES","PAYMENT_FREQUENCY_OPTIONS","getContactTitles","getGendersList","getExpensesCategories","getUnitTypes","getPropertyBaths","baths","i","push","concat","getPropertyBeds","beds","getMeterTypes","getLeaseOptions","getPaymentOptions","getTransactionsFilterOptions","id","text","getLastMonthFromToDates","startOfMonth","subMonths","endOfMonth","getLastYearFromToDates","subYears","getYearToDateFromToDates","getCurrentMonthFromToDates","getLastThreeMonthsFromToDates","getMonthsInYear","currencyFormatter","Intl","NumberFormat","undefined","style","currency","EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","headCells","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","align","numeric","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","className","visuallyHidden","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","position","top","desc","a","b","withRouter","rows","selected","setSelected","deleteUrl","handleDelete","noEditCol","noDeleteCol","noDetailsCol","match","React","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","Box","borderRadius","borderColor","TableContainer","Table","stickyHeader","aria-labelledby","size","aria-label","length","target","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","stopPropagation","selectedIndex","newSelected","handleClick","tableCellIndex","tableCellData","component","scope","Tooltip","title","placement","IconButton","color","Link","to","url","fontSize","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","display","alignItems","wrapper","buttonProgress","green","left","marginTop","marginLeft","CustomCircularProgress","open","dialogTitle","maxWidth","container","item","lg","TabPanel","children","other","hidden","m","ImageCropper","selectedFile","setCroppedImageData","cropHeight","cropWidth","cropper","setCropper","image","setImage","fileToLoad","reader","FileReader","onloadend","result","readAsDataURL","handleClose","onClose","initialAspectRatio","src","viewMode","guides","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","onInitialized","instance","cropBoxResizable","data","justify","variant","disableElevation","croppedImageData","getCroppedCanvas","toDataURL","getCropData","CONTACT_TITLES","UserSchema","Yup","shape","trim","required","gender","first_name","last_name","id_number","min","primary_email","email","other_email","personal_phone_number","work_phone_number","UpdatePasswordSchema","password","max","confirm_password","test","this","parent","UserInputForm","handleItemSubmit","userToShow","userValues","user_avatar_url","user_image","history","useHistory","commonStyles","initialValues","enableReinitialize","validationSchema","onSubmit","values","setStatus","user","deleteUploadedFileByUrl","uploadFilesToFirebase","fileDownloadUrl","sent","msg","status","touched","errors","handleChange","handleBlur","handleSubmit","isSubmitting","setFieldValue","form","noValidate","method","Grid","CustomSnackbar","message","Typography","Avatar","alt","largeAvatar","file_to_load_url","croppedImage","currentTarget","files","accept","fileInputDisplayNone","type","htmlFor","xs","sm","TextField","fullWidth","select","name","onBlur","error","helperText","contact_title","MenuItem","gender_type","buttonBox","Button","startIcon","disabled","resetForm","updateFirebaseUser","uid","userProfile","goBack","CompanyInfoSchema","company_name","company_address","company_phone_number","company_other_phone_number","company_primary_email","company_other_email","BillingInfoSchema","billing_company","billing_address","billing_phone_number","billing_email","billingTableHeadCells","AccountSettingsPage","accountBillings","companyProfile","CompanyInfoInitialValues","BillingInfoInitialValues","tabValue","setTabValue","pageTitle","AppBar","Tabs","newValue","Tab","companyInfoValues","billingInfoValues","connect","state","users","find","currentUser","dispatch","itemUrl","handleItemFormSubmit"],"mappings":"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","file":"static/js/36.c5075f63.chunk.js","sourcesContent":["import { endOfMonth, endOfYear, startOfToday, eachMonthOfInterval, startOfMonth, startOfYear, subMonths, subYears } from \"date-fns\";\n\nconst monthsInYear = eachMonthOfInterval({\n\tstart: startOfYear(startOfToday()),\n\tend: endOfYear(startOfToday()),\n})\n//general contact titles\nconst TITLES_LIST = [\"Mr\", \"Prof\", \"Hon\", \"Sir\", \"Mrs\", \"Miss\", \"Dr\", \"Madam\", \"Other\"]\nconst GENDERS_LIST = [\"Male\", \"Female\", \"Unspecified\"];\nconst EXPENSES_CATEGORIES = [\n\t'Security Deposit Refund',\n\t'Water Deposit Refund',\n\t'Management Fees',\n\t'Utilities',\n\t'Taxes',\n\t'Mortgage',\n\t'Office',\n\t'Maintenance & Cleaning',\n\t'Advertising',\n\t'Insurance',\n\t'Legal & Other Professional Fees',\n\t'Auto & Travel',\n\t'Supplies',\n\t'Other Refund',\n\t'Repairs',\n\t'Other'\n]\nconst PROPRERTY_TYPES = [\n\t\"Residential\",\n\t\"Condo/Townhouse\",\n\t\"Multi-family\",\n\t\"Single-family\",\n]\nconst UNIT_TYPES = [\n\t\"Bed Sitter\",\n\t\"One Bedroom\",\n\t\"Two Bedroom\",\n\t\"Single Room\",\n\t\"Double Room\",\n\t\"Shop\",\n\t\"Other\",\n];\nconst LEASE_OPTIONS = [\n\t\"Fixed\",\n\t\"Fixed w/rollover\",\n];\nconst METER_TYPES = [\"Electric\", \"Sewer\", \"Water\"];\nconst FREQUENCY_OPTIONS = [\"Per Day\", \"Week\", \"Month\", \"Quarter\", \"Half Year\", \"Year\"];\nconst PAYMENT_FREQUENCY_OPTIONS = [\"Daily\", \"Weekly\", \"Monthly\", \"Quarterly\", \"Half-Yearly\", \"Yearly\"];\n\n//functions to get the above values\nexport function getContactTitles() {\n\treturn TITLES_LIST;\n}\n\nexport function getGendersList() {\n\treturn GENDERS_LIST;\n}\n\nexport function getExpensesCategories() {\n\treturn EXPENSES_CATEGORIES;\n}\n\n//general property types\nexport function getPropertyTypes() {\n\treturn PROPRERTY_TYPES;\n}\n\n//general unit types\nexport function getUnitTypes() {\n\treturn UNIT_TYPES;\n}\n\nexport function getPropertyBaths() {\n\tconst baths = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbaths.push(i);\n\t}\n\treturn baths.concat(\"5+\");\n}\n\nexport function getPropertyBeds() {\n\tconst beds = [];\n\tfor (let i = 1; i <= 5; i++) {\n\t\tbeds.push(i);\n\t}\n\treturn beds;\n}\n\nexport function getFrequencyOptions() {\n\treturn FREQUENCY_OPTIONS;\n}\n\nexport function getMeterTypes() {\n\treturn METER_TYPES;\n}\n\nexport function getLeaseOptions() {\n\treturn LEASE_OPTIONS;\n}\n\nexport function getPaymentOptions() {\n\treturn PAYMENT_FREQUENCY_OPTIONS;\n}\n\nexport function getTransactionsFilterOptions() {\n\treturn [\n\t\t{ id: 'month-to-date', text: 'Month To Date' }, { id: 'last-month', text: 'Last Month' },\n\t\t{ id: '3-months-to-date', text: '3 Months To Date' }, { id: 'year-to-date', text: 'Year To Date' },\n\t\t{ id: 'last-year', text: 'Last Year' },];\n}\n\nexport function getLastMonthFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 1)), endOfMonth(subMonths(startOfToday(), 1))]\n}\n\nexport function getLastYearFromToDates() {\n\treturn [startOfYear(subYears(startOfToday(), 1)), endOfYear(subYears(startOfToday(), 1))]\n}\n\nexport function getYearToDateFromToDates() {\n\treturn [startOfYear(startOfToday()), startOfToday()]\n}\n\nexport function getCurrentMonthFromToDates() {\n\treturn [startOfMonth(startOfToday()), endOfMonth(startOfToday())]\n}\n\nexport function getLastThreeMonthsFromToDates() {\n\treturn [startOfMonth(subMonths(startOfToday(), 2)), endOfMonth(startOfToday())]\n}\n\nexport function getMonthsInYear() {\n\treturn monthsInYear\n}\n\n// Create our number formatter.\nexport const currencyFormatter = new Intl.NumberFormat(undefined, {\n\tstyle: 'decimal',\n\tcurrency: 'KES',\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        headCells,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ \"aria-label\": \"select all\" }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding={headCell.disablePadding ? \"none\" : \"default\"}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={order}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default useStyles;\n","\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => desc(a, b, orderBy)\n        : (a, b) => -desc(a, b, orderBy);\n}\n\nexport { desc, stableSort, getSorting };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport TableBody from '@material-ui/core/TableBody';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableCell from '@material-ui/core/TableCell';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport { withRouter } from \"react-router-dom\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport useStyles from \"./tableStyles\";\nimport { stableSort, getSorting } from \"./tablesSortingFunctions\";\n\nfunction CommonTable(props) {\n    const {\n        rows,\n        headCells,\n        selected,\n        setSelected,\n        deleteUrl,\n        handleDelete,\n        noEditCol,\n        noDeleteCol,\n        noDetailsCol,\n    } = props;\n    const { match } = props;\n    const classes = useStyles();\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"Beds\");\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(50);\n\n    const handleRequestSort = (event, property) => {\n        const isDesc = orderBy === property && order === \"desc\";\n        setOrder(isDesc ? \"asc\" : \"desc\");\n        setOrderBy(property);\n    };\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        event.stopPropagation();\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    return (\n        <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\">\n            <TableContainer>\n                <Table\n                    stickyHeader\n                    className={classes.table}\n                    aria-labelledby=\"tableTitle\"\n                    size={\"medium\"}\n                    aria-label=\"enhanced table\"\n                >\n                    <EnhancedTableHead\n                        classes={classes}\n                        numSelected={selected.length}\n                        order={order}\n                        orderBy={orderBy}\n                        onSelectAllClick={handleSelectAllClick}\n                        headCells={headCells}\n                        onRequestSort={handleRequestSort}\n                        rowCount={rows.length}\n                    />\n                    <TableBody>\n                        {stableSort(rows, getSorting(order, orderBy))\n                            .slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage\n                            )\n                            .map((row, index) => {\n                                const isItemSelected = isSelected(row.id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        // onClick={() => {if(typeof tableRowOnClickHandler === 'function') tableRowOnClickHandler(row.id) }}\n                                        hover\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        key={row.id}\n                                        selected={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                onClick={(event) =>\n                                                    handleClick(event, row.id)\n                                                }\n                                                checked={isItemSelected}\n                                                inputProps={{\n                                                    \"aria-labelledby\": labelId,\n                                                }}\n                                            />\n                                        </TableCell>\n                                        {headCells.map(\n                                            (headCell, tableCellIndex) => {\n                                                const tableCellData =\n                                                    row[headCell.id];\n                                                return (\n                                                    headCell.id === 'edit' ?\n                                                        (\n                                                            noEditCol ? null : (\n                                                                <TableCell\n                                                                    key={`edit${tableCellIndex}`}\n                                                                    component=\"th\"\n                                                                    scope=\"row\"\n                                                                    sortDirection={false}\n                                                                >\n                                                                    <Tooltip\n                                                                        title=\"Edit\"\n                                                                        placement=\"bottom\"\n                                                                    >\n                                                                        <IconButton\n                                                                            color=\"primary\"\n                                                                            size=\"small\"\n                                                                            component={Link}\n                                                                            to={`${match.url}/${row.id}/edit`}\n                                                                        >\n                                                                            <EditIcon fontSize=\"default\" />\n                                                                        </IconButton>\n                                                                    </Tooltip>\n                                                                </TableCell>\n                                                            )\n                                                        )\n                                                        : headCell.id === 'delete' ?\n                                                            (\n                                                                noDeleteCol ? null : (\n                                                                    <TableCell\n                                                                        key={`delete${tableCellIndex}`}\n                                                                        component=\"th\"\n                                                                        scope=\"row\"\n                                                                        sortDirection={false}\n                                                                    >\n                                                                        <Tooltip\n                                                                            title=\"Delete\"\n                                                                            placement=\"bottom\"\n                                                                        >\n                                                                            <IconButton\n                                                                                onClick={(event) => {\n                                                                                    handleDelete(\n                                                                                        row.id,\n                                                                                        deleteUrl\n                                                                                    );\n                                                                                }}\n                                                                                color=\"primary\"\n                                                                                size=\"small\"\n                                                                            >\n                                                                                <DeleteIcon fontSize=\"default\" />\n                                                                            </IconButton>\n                                                                        </Tooltip>\n                                                                    </TableCell>\n                                                                )\n                                                            )\n                                                            : headCell.id === 'details' ?\n                                                                (\n                                                                    !noDetailsCol ? null : (\n                                                                        <TableCell\n                                                                            key={`details${tableCellIndex}`}\n                                                                            component=\"th\"\n                                                                            scope=\"row\"\n                                                                            sortDirection={false}\n                                                                        >\n                                                                            <Tooltip\n                                                                                title=\"Details\"\n                                                                                placement=\"bottom\"\n                                                                            >\n                                                                                <IconButton\n                                                                                    color=\"primary\"\n                                                                                    size=\"small\"\n                                                                                    component={Link}\n                                                                                    to={`${match.url}/${row.id}/details`}\n                                                                                >\n                                                                                    <DetailsIcon fontSize=\"default\" />\n                                                                                </IconButton>\n                                                                            </Tooltip>\n                                                                        </TableCell>\n                                                                    )\n                                                                )\n                                                                :\n                                                                <TableCell\n                                                                    key={tableCellIndex}\n                                                                    component=\"th\"\n                                                                    id={labelId}\n                                                                    scope=\"row\"\n                                                                    padding=\"none\"\n                                                                >\n                                                                    {typeof tableCellData ===\n                                                                        \"boolean\"\n                                                                        ? tableCellData\n                                                                            ? \"Yes\"\n                                                                            : \"No\"\n                                                                        : tableCellData}\n                                                                </TableCell>\n                                                );\n                                            }\n                                        )}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[50, 100, 200, 300]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </Box>\n    );\n}\n\nexport default withRouter(CommonTable);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 80,\n        width: 120,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n        height: 50,\n        width: 50,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function CustomCircularProgress({ open, dialogTitle }) {\n    const classes = useStyles();\n    \n    return (\n        <Dialog maxWidth={\"md\"} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <Grid container alignItems=\"center\" direction=\"column\">\n                    <Grid item lg>\n                        <Typography>{dialogTitle || \"Saving...\"}</Typography>\n                    </Grid>\n                    <Grid item lg>\n                        <div className={classes.root}>\n                            <div className={classes.wrapper}>\n                                {open && <CircularProgress size={50} className={classes.buttonProgress} />}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n        </Dialog>\n\n    );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\n\nexport default function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box m={2}>{children}</Box>}\n        </div>\n    );\n}","import React, { useState } from 'react'\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nimport PropTypes from 'prop-types';\n\nconst ImageCropper = ({ open, selectedFile, setCroppedImageData, cropHeight, cropWidth }) => {\n\n    const [cropper, setCropper] = useState()\n    const [image, setImage] = useState()\n\n    const fileToLoad = selectedFile;\n\n    const reader = new FileReader();\n    reader.onloadend = () => {\n        setImage(reader.result)\n    };\n    reader.readAsDataURL(fileToLoad);\n\n    const getCropData = () => {\n        if (typeof cropper !== \"undefined\") {\n            const croppedImageData = cropper.getCroppedCanvas().toDataURL()\n            fileToLoad.data = croppedImageData\n            setCroppedImageData(fileToLoad)\n\n        }\n    };\n\n    const handleClose = () => {\n        setCroppedImageData(\"\")\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogContent>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Cropper\n                            style={{ height: \"100%\", width: \"100%\" }}\n                            initialAspectRatio={cropWidth === cropHeight ? 1 : (16 / 9)}\n                            src={image}\n                            viewMode={0.5}\n                            guides={true}\n                            minCropBoxHeight={cropHeight}\n                            minCropBoxWidth={cropWidth}\n                            background={false}\n                            responsive={true}\n                            autoCropArea={0.5}\n                            checkOrientation={false}\n                            onInitialized={(instance) => {\n                                setCropper(instance);\n                            }}\n                            cropBoxResizable={false}\n                            data={{height: cropHeight, width: cropWidth}}\n                        />\n                    </Grid>\n                    <Grid item container justify=\"center\" direction=\"row\" spacing={2}>\n                        <Grid item>\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                onClick={() => handleClose()}\n                                disableElevation\n                            >\n                                Cancel\n\t\t\t\t\t        </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                onClick={() => getCropData()}\n                            >\n                                Crop Image\n\t\t\t\t\t        </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n        </Dialog >\n    )\n}\n\nImageCropper.propTypes = {\n    cropHeight: PropTypes.number.isRequired,\n    cropWidth: PropTypes.number.isRequired,\n}\n\nexport default ImageCropper;","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { useHistory } from \"react-router-dom\";\nimport { commonStyles } from \"../commonStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport {\n    getContactTitles,\n    getGendersList,\n} from \"../../assets/commonAssets.js\";\nimport * as Yup from \"yup\";\nimport {\n    updateFirebaseUser,\n    uploadFilesToFirebase,\n    deleteUploadedFileByUrl,\n} from \"../../actions/actions\";\nimport { Formik } from \"formik\";\nimport ImageCropper from '../ImageCropper';\nimport CustomSnackbar from '../CustomSnackbar'\nimport CustomCircularProgress from \"../CustomCircularProgress\";\n\nconst CONTACT_TITLES = getContactTitles();\nconst GENDERS_LIST = getGendersList();\n\n\nconst UserSchema = Yup.object().shape({\n    title: Yup.string().trim().required(\"Title is required\"),\n    gender: Yup.string().trim().required(\"Gender is required\"),\n    first_name: Yup.string().trim().required(\"First Name is required\"),\n    last_name: Yup.string().trim().required(\"Last Name is Required\"),\n    id_number: Yup.string().trim().min(8, 'Too Short').required(\"Id Number is Required\"),\n    primary_email: Yup.string().trim().email(\"Invalid Email\").required(\"Primary Email is Required\"),\n    other_email: Yup.string().trim().email(\"Invalid Email\"),\n    personal_phone_number: Yup.string().trim().min(10, 'Too Short').required(\"Personal Phone Number is Required\"),\n    work_phone_number: Yup.string().trim().min(10, 'Too Short').required(\"Work Phone Number is Required\"),\n});\n\nconst UpdatePasswordSchema = Yup.object().shape({\n    password: Yup.string()\n        .min(6, \"Too Short!\")\n        .max(20, \"We prefer an insecure system, try a shorter password.\")\n        .required(\"Pasword is Required\"),\n    confirm_password: Yup.string()\n        .required(\"Confirm Password Required\")\n        .test(\"passwords-match\", \"Passwords must match\", function (value) {\n            return this.parent.password === value;\n        }),\n});\n\nlet UserInputForm = (props) => {\n    let { handleItemSubmit } = props;\n    const userToShow = props.userToShow ? props.userToShow : {};\n    const userValues = {\n        id: userToShow.id,\n        gender: userToShow.gender || \"\",\n        title: userToShow.title || \"\",\n        id_number: userToShow.id_number || '',\n        first_name: userToShow.first_name || '',\n        last_name: userToShow.last_name || '',\n        primary_email: userToShow.primary_email || '',\n        other_email: userToShow.other_email || '',\n        personal_phone_number: userToShow.personal_phone_number || '',\n        work_phone_number: userToShow.work_phone_number || '',\n        user_avatar_url: userToShow.user_avatar_url || '',\n        user_image: '',\n    }\n    const history = useHistory();\n    let classes = commonStyles();\n\n    return (\n        <div>\n            <Formik\n                initialValues={userValues}\n                enableReinitialize\n                validationSchema={UserSchema}\n                onSubmit={async (values, { setStatus }) => {\n                    try {\n                        const user = {\n                            id: values.id,\n                            title: values.title,\n                            gender: values.gender,\n                            id_number: values.id_number,\n                            primary_email: values.primary_email,\n                            other_email: values.other_email,\n                            first_name: values.first_name,\n                            last_name: values.last_name,\n                            personal_phone_number: values.personal_phone_number,\n                            work_phone_number: values.work_phone_number,\n                        };\n                        //first upload the image to firebase\n                        if (values.user_image && values.user_image.data) {\n                            //if the user had previously had a file avatar uploaded\n                            // then delete it here\n                            if (values.user_avatar_url) {\n                                //delete file\n                                await deleteUploadedFileByUrl(values.user_avatar_url);\n                            }\n                            //upload the first and only image in the contact images array\n                            var fileDownloadUrl = await uploadFilesToFirebase(values.user_image)\n                            user.user_avatar_url = fileDownloadUrl;\n                        }\n                        await handleItemSubmit(user, \"users\")\n                        setStatus({ sent: true, msg: \"Details saved successfully!\" })\n                    } catch (error) {\n                        setStatus({ sent: false, msg: `Error! ${error}.` })\n                    }\n                }}\n            >\n                {({\n                    values,\n                    status,\n                    touched,\n                    errors,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    setFieldValue,\n                }) => (\n                    <form\n                        className={classes.form}\n                        noValidate\n                        method=\"post\"\n                        id=\"userPersonalInfoInputForm\"\n                        onSubmit={handleSubmit}\n                    >\n                        <Grid\n                            container\n                            justify=\"center\"\n                            alignItems=\"center\"\n                            direction=\"column\"\n                            spacing={2}\n                        >\n                            {\n                                status && status.msg && (\n                                    <CustomSnackbar\n                                        variant={status.sent ? \"success\" : \"error\"}\n                                        message={status.msg}\n                                    />\n                                )\n                            }\n                            {\n                                isSubmitting && (<CustomCircularProgress open={true} dialogTitle=\"Saving profile...\" />)\n                            }\n                            <Grid\n                                justify=\"center\"\n                                container\n                                item\n                                direction=\"column\"\n                                spacing={2}\n                            >\n                                <Grid item>\n                                    <Typography>Personal Info</Typography>\n                                </Grid>\n                                <Grid\n                                    item\n                                    container\n                                    justify=\"center\"\n                                    spacing={4}\n                                    alignItems=\"center\"\n                                >\n                                    <Grid key={1} item>\n                                        <Avatar\n                                            alt=\"User Image\"\n                                            src={\n                                                values.user_image ? values.user_image.data\n                                                    : values.user_avatar_url\n                                            }\n                                            className={classes.largeAvatar}\n                                        />\n                                    </Grid>\n                                    {\n                                        values.file_to_load_url &&\n                                        <ImageCropper open={true} selectedFile={values.file_to_load_url}\n                                            setCroppedImageData={(croppedImage) => {\n                                                setFieldValue('file_to_load_url', '');\n                                                setFieldValue('user_image', croppedImage);\n                                            }} cropHeight={160} cropWidth={160} />\n                                    }\n                                    <Grid key={2} item>\n                                        <Box>\n                                            <input onChange={(event) => {\n                                                const selectedFile = event.currentTarget.files[0]\n                                                //remove the object then push a copy of it with added image object\n                                                setFieldValue(\"file_to_load_url\", selectedFile);\n                                            }} accept=\"image/*\" className={classes.fileInputDisplayNone} id={\"user-image-input\"} type=\"file\" />\n                                            <label htmlFor={\"user-image-input\"}>\n                                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                                    <PhotoCamera />\n                                                </IconButton>\n                                            </label>\n                                            <Box>{values.user_avatar_url || values.user_image ? \"Change Photo\" : \"Add Photo\"}</Box>\n                                        </Box>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container direction=\"row\" spacing={2}>\n                                    <Grid item xs={12} sm>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            required\n                                            select\n                                            name=\"title\"\n                                            label=\"Title\"\n                                            id=\"title\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange}\n                                            value={values.title}\n                                            error={errors.title && touched.title}\n                                            helperText={touched.title && errors.title}\n                                        >\n                                            {CONTACT_TITLES.map((contact_title, index) => (\n                                                <MenuItem key={index} value={contact_title}>\n                                                    {contact_title}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} sm>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            required\n                                            select\n                                            name=\"gender\"\n                                            label=\"Gender\"\n                                            id=\"gender\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange}\n                                            value={values.gender}\n                                            error={errors.gender && touched.gender}\n                                            helperText={touched.gender && errors.gender}\n                                        >\n                                            {GENDERS_LIST.map((gender_type, index) => (\n                                                <MenuItem key={index} value={gender_type}>\n                                                    {gender_type}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container direction=\"row\" spacing={2}>\n                                    <Grid item xs={12} sm>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            required\n                                            id=\"first_name\"\n                                            name=\"first_name\"\n                                            label=\"First Name\"\n                                            value={values.first_name}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            error={errors.first_name && touched.first_name}\n                                            helperText={touched.first_name && errors.first_name}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            id=\"last_name\"\n                                            name=\"last_name\"\n                                            label=\"Last Name\"\n                                            required\n                                            value={values.last_name}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            error={errors.last_name && touched.last_name}\n                                            helperText={touched.last_name && errors.last_name}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Grid item sm>\n                                    <TextField\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        id=\"id_number\"\n                                        name=\"id_number\"\n                                        label=\"ID Number\"\n                                        required\n                                        value={values.id_number}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        error={errors.id_number && touched.id_number}\n                                        helperText={touched.id_number && errors.id_number}\n                                    />\n                                </Grid>\n                                <Grid item container direction=\"row\" spacing={2}>\n                                    <Grid item xs={12} sm>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            id=\"personal_phone_number\"\n                                            name=\"personal_phone_number\"\n                                            label=\"Personal Phone Number\"\n                                            required\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            helperText={touched.personal_phone_number && errors.personal_phone_number}\n                                            error={errors.personal_phone_number && touched.personal_phone_number}\n                                            value={values.personal_phone_number}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            id=\"work_phone_number\"\n                                            name=\"work_phone_number\"\n                                            label=\"Work Phone Number\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            helperText={touched.work_phone_number && errors.work_phone_number}\n                                            error={errors.work_phone_number && touched.work_phone_number}\n                                            value={values.work_phone_number}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Grid item container direction=\"row\" spacing={2}>\n                                    <Grid item xs={12} sm>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            name=\"primary_email\"\n                                            label=\"Primary Email\"\n                                            id=\"primary_email\"\n                                            required\n                                            onBlur={handleBlur}\n                                            onChange={handleChange}\n                                            value={values.primary_email}\n                                            error={errors.primary_email && touched.primary_email}\n                                            helperText={touched.primary_email && errors.primary_email}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            name=\"other_email\"\n                                            label=\"Other Email\"\n                                            id=\"other_email\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange}\n                                            value={values.other_email}\n                                            error={errors.other_email && touched.other_email}\n                                            helperText={touched.other_email && errors.other_email}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            {/** end of user details grid **/}\n                            <Grid\n                                item\n                                container\n                                direction=\"row\"\n                                className={classes.buttonBox}\n                            >\n                                <Grid item>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"outlined\"\n                                        size=\"medium\"\n                                        startIcon={<SaveIcon />}\n                                        form=\"userPersonalInfoInputForm\"\n                                        disabled={isSubmitting}\n                                    >\n                                        Save\n\t\t\t\t\t\t\t\t\t</Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </form>\n                )}\n            </Formik>\n            <Formik\n                initialValues={{ password: '', confirm_password: '' }}\n                enableReinitialize\n                validationSchema={UpdatePasswordSchema}\n                onSubmit={async (values, { resetForm, setStatus }) => {\n                    try {\n                        await updateFirebaseUser({ uid: userToShow.id, userProfile: { password: values.password } })\n                        resetForm({});\n                        setStatus({ sent: true, msg: \"Password updated successfully!\" })\n                    } catch (error) {\n                        setStatus({ sent: false, msg: `Error! ${error}.` })\n                    }\n                }}\n            >\n                {({\n                    values,\n                    status,\n                    touched,\n                    errors,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                }) => (\n                    <form\n                        className={classes.form}\n                        method=\"post\"\n                        id=\"changePasswordForm\"\n                        noValidate\n                        onSubmit={handleSubmit}\n                    >\n                        <Grid\n                            container\n                            justify=\"center\"\n                            alignItems=\"center\"\n                            direction=\"column\"\n                        >\n                            {\n                                status && status.msg && (\n                                    <CustomSnackbar\n                                        variant={status.sent ? \"success\" : \"error\"}\n                                        message={status.msg}\n                                    />\n                                )\n                            }\n                            {\n                                isSubmitting && (<CustomCircularProgress open={true} dialogTitle=\"Updating password...\" />)\n                            }\n                            <Grid\n                                justify=\"center\"\n                                container\n                                item\n                                direction=\"column\"\n                                spacing={2}\n                            >\n                                <Grid item>\n                                    <Typography>Change Password</Typography>\n                                </Grid>\n                                <Grid item container direction=\"row\" spacing={2}>\n                                    <Grid item xs={12} sm>\n                                        <TextField\n                                            fullWidth\n                                            required\n                                            type=\"password\"\n                                            variant=\"outlined\"\n                                            name=\"password\"\n                                            label=\"New Password\"\n                                            id=\"password\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange}\n                                            value={values.password}\n                                            error={errors.password && touched.password}\n                                            helperText={touched.password && errors.password}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm>\n                                        <TextField\n                                            fullWidth\n                                            type=\"password\"\n                                            required\n                                            variant=\"outlined\"\n                                            name=\"confirm_password\"\n                                            label=\"Confirm New Password\"\n                                            id=\"confirm_password\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange}\n                                            value={values.confirm_password}\n                                            error={errors.confirm_password && touched.confirm_password}\n                                            helperText={touched.confirm_password && errors.confirm_password}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            {/** end of user details grid **/}\n                            <Grid\n                                item\n                                container\n                                direction=\"row\"\n                                className={classes.buttonBox}\n                            >\n                                <Grid item>\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"outlined\"\n                                        size=\"medium\"\n                                        startIcon={<SaveIcon />}\n                                        form=\"changePasswordForm\"\n                                        disabled={isSubmitting}\n                                    >\n                                        Update\n\t\t\t\t\t\t\t\t\t    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        color=\"secondary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<CancelIcon />}\n                                        onClick={() => history.goBack()}\n                                        disableElevation\n                                    >\n                                        Cancel\n\t\t\t\t\t\t\t\t\t    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\nexport default UserInputForm;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport AccountSettings from \"../components/users/AccountSettingsInputForm\";\nimport { withRouter } from \"react-router-dom\";\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Button from \"@material-ui/core/Button\";\nimport TabPanel from \"../components/TabPanel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport { handleItemFormSubmit } from '../actions/actions'\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\n\nconst CompanyInfoSchema = Yup.object().shape({\n\tcompany_name: Yup.string().trim(),\n\tcompany_address: Yup.string().trim(),\n\tcompany_phone_number: Yup.string().trim(),\n\tcompany_other_phone_number: Yup.string().trim(),\n\tcompany_primary_email: Yup.string().trim().email(\"Invalid Email\"),\n\tcompany_other_email: Yup.string().trim().email(\"Invalid Email\"),\n});\n\nconst BillingInfoSchema = Yup.object().shape({\n\tbilling_company: Yup.string().trim(),\n\tbilling_address: Yup.string().trim(),\n\tbilling_phone_number: Yup.string().trim(),\n\tbilling_email: Yup.string().trim().email(\"Invalid Email\"),\n});\n\nconst billingTableHeadCells = [\n\t{ id: \"billing_date\", numeric: false, disablePadding: true, label: \"Billing Date\" },\n\t{ id: \"invoice_number\", numeric: false, disablePadding: true, label: \"Invoice Number\" },\n\t{ id: \"amount\", numeric: false, disablePadding: true, label: \"Billed Amount\" },\n\n];\n\n\nlet AccountSettingsPage = ({ userToShow, accountBillings, companyProfile, handleItemSubmit }) => {\n\tlet classes = commonStyles();\n\tconst CompanyInfoInitialValues = {\n\t\tid: companyProfile.id,\n\t\tcompany_name: companyProfile.company_name || \"\",\n\t\tcompany_address: companyProfile.company_address || \"\",\n\t\tcompany_phone_number: companyProfile.company_phone_number || '',\n\t\tcompany_other_phone_number: companyProfile.company_other_phone_number || '',\n\t\tcompany_primary_email: companyProfile.company_primary_email || '',\n\t\tcompany_other_email: companyProfile.company_other_email || '',\n\t}\n\n\tconst BillingInfoInitialValues = {\n\t\tid: companyProfile.id,\n\t\tbilling_address: companyProfile.billing_address || companyProfile.company_address || \"\",\n\t\tbilling_company: companyProfile.billing_company || companyProfile.company_name || \"\",\n\t\tbilling_phone_number: companyProfile.billing_phone_number || companyProfile.company_phone_number || '',\n\t\tbilling_email: companyProfile.billing_email || companyProfile.company_primary_email || '',\n\t}\n\n\tconst [tabValue, setTabValue] = React.useState(0);\n\n\tconst handleTabChange = (event, newValue) => {\n\t\tsetTabValue(newValue);\n\t};\n\n\treturn (\n\t\t<Layout pageTitle={\"Admin Account Details\"}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\">\n\t\t\t\t\t<Tab label=\"Account Profile\" />\n\t\t\t\t\t<Tab label=\"Company Details\" />\n\t\t\t\t\t<Tab label=\"Billing &amp; Payments\" />\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t\t<TabPanel value={tabValue} index={0}>\n\t\t\t\t<Grid container justify=\"center\" direction=\"column\">\n\t\t\t\t\t<Grid item >\n\t\t\t\t\t\t<Typography variant=\"h6\">Account Details</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\titem\n\t\t\t\t\t>\n\t\t\t\t\t\t<AccountSettings userToShow={userToShow} handleItemSubmit={handleItemSubmit} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={tabValue} index={1}>\n\t\t\t\t<Grid container justify=\"center\" direction=\"column\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography variant=\"h6\">Company Information</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\titem\n\t\t\t\t\t>\n\n\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\tinitialValues={CompanyInfoInitialValues}\n\t\t\t\t\t\t\tenableReinitialize\n\t\t\t\t\t\t\tvalidationSchema={CompanyInfoSchema}\n\t\t\t\t\t\t\tonSubmit={async (values, { resetForm }) => {\n\t\t\t\t\t\t\t\tconst companyInfoValues = {\n\t\t\t\t\t\t\t\t\tid: values.id,\n\t\t\t\t\t\t\t\t\tcompany_address: values.company_address,\n\t\t\t\t\t\t\t\t\tcompany_name: values.company_name,\n\t\t\t\t\t\t\t\t\tcompany_primary_email: values.company_primary_email,\n\t\t\t\t\t\t\t\t\tcompany_phone_number: values.company_phone_number,\n\t\t\t\t\t\t\t\t\tcompany_other_phone_number: values.company_other_phone_number,\n\t\t\t\t\t\t\t\t\tcompany_other_email: values.company_other_email,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tawait handleItemSubmit(companyInfoValues, \"company_profile\")\n\t\t\t\t\t\t\t\tresetForm({});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({\n\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\ttouched,\n\t\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\t\t\t\t\tid=\"companyInfoForm\"\n\t\t\t\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item container direction=\"row\" spacing={2}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"company_name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Company Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"company_name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.company_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.company_name && touched.company_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.company_name && errors.company_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"company_address\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Company Address\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"company_address\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.company_address}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.company_address && touched.company_address}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.company_address && errors.company_address}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item container direction=\"row\" spacing={2}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"company_phone_number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Company Phone Number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"company_phone_number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.company_phone_number}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.company_phone_number && touched.company_phone_number}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.company_phone_number && errors.company_phone_number}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"company_other_phone_number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Other Phone Number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"company_other_phone_number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.company_other_phone_number}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.company_other_phone_number && touched.company_other_phone_number}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.company_other_phone_number && errors.company_other_phone_number}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item container direction=\"row\" spacing={2}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"company_primary_email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Company Primary Email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"company_primary_email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.company_primary_email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.company_primary_email && touched.company_primary_email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.company_primary_email && errors.company_primary_email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"company_other_email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Company Other Email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"company_other_email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.company_other_email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.company_other_email && touched.company_other_email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.company_other_email && errors.company_other_email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonBox}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\tform=\"companyInfoForm\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t\t\t    \t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Formik>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={tabValue} index={2}>\n\t\t\t\t<Grid container justify=\"center\" direction=\"column\" spacing={2}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography>Billing Info</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\titem\n\t\t\t\t\t>\n\n\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\tinitialValues={BillingInfoInitialValues}\n\t\t\t\t\t\t\tenableReinitialize\n\t\t\t\t\t\t\tvalidationSchema={BillingInfoSchema}\n\t\t\t\t\t\t\tonSubmit={async (values, { resetForm }) => {\n\t\t\t\t\t\t\t\tconst billingInfoValues = {\n\t\t\t\t\t\t\t\t\tid: values.id,\n\t\t\t\t\t\t\t\t\tbilling_address: values.billing_address,\n\t\t\t\t\t\t\t\t\tbilling_company: values.billing_company,\n\t\t\t\t\t\t\t\t\tbilling_email: values.billing_email,\n\t\t\t\t\t\t\t\t\tbilling_phone_number: values.billing_phone_number,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tawait handleItemSubmit(billingInfoValues, \"company_profile\")\n\t\t\t\t\t\t\t\tresetForm({});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({\n\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\ttouched,\n\t\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\t\t\t\t\tid=\"billingInfoForm\"\n\t\t\t\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item container direction=\"row\" spacing={2}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"billing_address\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Billing Address\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"billing_address\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.billing_address}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.billing_address && touched.billing_address}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.billing_address && errors.billing_address}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"billing_company\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Company Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"billing_company\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.billing_company}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.billing_company && touched.billing_company}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.billing_company && errors.billing_company}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item container direction=\"row\" spacing={2}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"billing_phone_number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"billing_phone_number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.billing_phone_number}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.billing_phone_number && touched.billing_phone_number}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.billing_phone_number && errors.billing_phone_number}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"billing_email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"billing_email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.billing_email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={errors.billing_email && touched.billing_email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.billing_email && errors.billing_email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonBox}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\tform=\"billingInfoForm\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t\t\t    \t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Formik>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography>Billing History</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<CommonTable\n\t\t\t\t\t\t\tselected={[]}\n\t\t\t\t\t\t\tsetSelected={() => { }}\n\t\t\t\t\t\t\trows={accountBillings}\n\t\t\t\t\t\t\theadCells={billingTableHeadCells}\n\t\t\t\t\t\t\tnoDeleteCol\n\t\t\t\t\t\t\tnoEditCol\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</TabPanel>\n\t\t</Layout>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tuserToShow: state.users.find(({ id }) => id === state.currentUser.id) || { id: state.currentUser.id },\n\t\tcompanyProfile: state.companyProfile[0] || {},\n\t\taccountBillings: state.accountBillings,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\thandleItemSubmit: (item, itemUrl) => dispatch(handleItemFormSubmit(item, itemUrl)),\n\t};\n};\n\n\nAccountSettingsPage = connect(mapStateToProps, mapDispatchToProps)(AccountSettingsPage);\n\nexport default withRouter(AccountSettingsPage);\n"],"sourceRoot":""}